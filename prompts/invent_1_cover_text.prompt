In the cover domain, a robot must pick blocks and place them onto target regions along a table surface. All pick and place poses are in a 1D line.

This domain has types: target robot block

You are given sample tasks in this domain each with an initial state and a target objective described in some grounded predicates. The initial states are in the form of visual observation of the environment.

The observations are as attached. The corresponding objectives are:
Task 0: Covers(block0:block, target0:target)
Task 1: Covers(block1:block, target1:target)

E.g. the predicate Covers(block1:block, target1:target) means that the object block1 of type block covers the object target1 of type target.

Propose predicates that can be used for effective task planning in this domain, each with a 1-sentence description of its semantics in terms of the binary query that it answers. Don't worry about how these predicates will be evaluated.

Propose each predicate in the format of:
```
- `[predicate_name_and_arguments_with_types]` -- [the_query_that_it_answers]
```
where [predicate_name_and_arguments_with_types] and [the_query_that_it_answers] are substite with the actual answers.
