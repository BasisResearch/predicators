```python
def _JugHasCoffee_holds(state: RawState, objects: Sequence[Object]
                         ) -> bool:
    """Determine if the jug is filled with coffee.
    """
    jug, = objects
    # return state.get(jug, "is_filled") > 0.5
    jug_name = jug.id_name
    attention_image = state.crop_to_objects([jug])
    return state.evaluate_simple_assertion(
        f"{jug_name} has coffee in it", attention_image)
_JugHasCoffee = NSPredicate("JugHasCoffee", [_jug_type],
                                          _JugHasCoffee_holds)
```

```python
def _MachineOn_holds(state: State, objects: Sequence[Object]) -> bool:
    """Determine if the coffee machine is on."""
    machine, = objects
    machine_name = machine.id_name
    attention_image = state.crop_to_objects([machine])
    # You might need to adjust the assertion based on how "on" is visually indicated
    return state.evaluate_simple_assertion(
        f"{machine_name} is turned on", attention_image) 
_MachineOn = NSPredicate("MachineOn", [_machine_type], _MachineOn_holds)
```