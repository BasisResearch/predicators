pybullet build time: May 20 2022 19:44:17
Running command: python predicators/main.py --env sticky_table --approach active_sampler_learning --experiment_id sticky_table-success_rate_explore --num_test_tasks 10 --strips_learner oracle --sampler_learner oracle --bilevel_plan_without_sim True --execution_monitor expected_atoms --max_initial_demos 0 --sampler_mlp_classifier_max_itr 100000 --mlp_classifier_balance_data False --pytorch_train_print_every 10000 --active_sampler_learning_model myopic_classifier_mlp --active_sampler_learning_use_teacher False --online_nsrt_learning_requests_per_cycle 1 --max_num_steps_interaction_request 64 --num_online_learning_cycles 10 --sesame_task_planner fdopt-costs --sesame_grounder fd_translator --horizon 12 --active_sampler_learning_feature_selection oracle --explorer active_sampler --active_sampler_explore_task_strategy success_rate --active_sampler_explore_bonus 0.01 --sticky_table_place_smooth_fall_prob 1.0 --sticky_table_place_sticky_fall_prob 0.0 --sticky_table_pick_success_prob 1.0 --sticky_table_num_sticky_tables 3 --sticky_table_num_tables 5 --sticky_table_place_ball_fall_prob 1.0 --active_sampler_learning_explore_length_base 4 --active_sampler_learning_exploration_epsilon 0.1 --skill_competence_model_optimistic_recency_size 1 --seed 456 --debug
Full config:
namespace(active_sampler_explore_bonus=0.01, active_sampler_explore_task_strategy='success_rate', active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_replan_frequency=100, active_sampler_learning_batch_size=64, active_sampler_learning_exploration_epsilon=0.1, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_explore_length_base=4, active_sampler_learning_feature_selection='oracle', active_sampler_learning_fitted_q_iters=5, active_sampler_learning_knn_neighbors=3, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_num_samples=100, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_score_gamma=0.5, active_sampler_learning_use_teacher=False, allow_interaction_in_demo_tasks=True, approach='active_sampler_learning', approach_dir='saved_approaches', backchaining_check_intermediate_harmlessness=False, bilevel_plan_without_sim=True, blocks_block_size=0.045, blocks_holding_goals=False, blocks_num_blocks_test=[5, 6], blocks_num_blocks_train=[3, 4], bridge_policy='learned_ldl', bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, bumpy_cover_num_bumps=2, bumpy_cover_right_targets=False, bumpy_cover_spaces_per_bump=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_precon_size_weight=0.01, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, clustering_learner_false_pos_weight=1, clustering_learner_true_pos_weight=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_num_cans_test=10, cluttered_table_num_cans_train=5, cluttered_table_place_goal_conditioned_sampling=True, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, cnn_regressor_clip_gradients=True, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_gradient_clip_value=5, cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_max_itr=500, coffee_jug_init_rot_amt=2.0943951023931953, coffee_num_cups_test=[2, 3], coffee_num_cups_train=[1, 2], compute_sidelining_objective_value=False, cover_block_widths=[0.1, 0.07], cover_initial_holding_prob=0.75, cover_multistep_action_limits=[-inf, inf], cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_degenerate_oracle_samplers=False, cover_multistep_goal_conditioned_sampling=False, cover_multistep_max_hr_placements=100, cover_multistep_max_tb_placements=100, cover_multistep_thr_percent=0.4, cover_num_blocks=2, cover_num_targets=2, cover_target_widths=[0.05, 0.03], crash_on_failure=False, data_dir='saved_datasets', data_orderings_to_search=1, demonstrator='oracle', disable_harmlessness_check=False, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, doors_max_obstacles_per_room=3, doors_max_room_exists_frac=0.75, doors_min_obstacles_per_room=0, doors_min_room_exists_frac=0.25, doors_room_map_size=5, enable_harmless_op_pruning=False, env='sticky_table', eval_trajectories_dir='eval_trajectories', excluded_predicates='', execution_monitor='expected_atoms', exit_garage_clear_refine_penalty=0, exit_garage_max_num_obstacles=3, exit_garage_min_num_obstacles=2, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, experiment_id='sticky_table-success_rate_explore', explorer='active_sampler', failure_video_mode='longest_only', get_arg_specific_settings=<classmethod object at 0x7f6ceed90d30>, glib_max_goal_size=1, glib_min_goal_size=1, glib_num_babbles=10, gnn_batch_size=128, gnn_do_normalization=False, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_num_epochs=25000, gnn_num_message_passing=3, gnn_option_policy_shooting_max_samples=100, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_solve_with_shooting=True, gnn_use_validation_set=True, gnn_weight_decay=0, grammar_search_bf_weight=1, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_energy_based_temperature=10.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_false_pos_weight=1, grammar_search_gbfs_num_evals=1000, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_includes_givens=True, grammar_search_grammar_use_diff_features=False, grammar_search_heuristic_based_weight=10.0, grammar_search_hill_climbing_depth=0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_max_predicates=200, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_operator_complexity_weight=0.0, grammar_search_parallelize_hill_climbing=False, grammar_search_pred_clusterer='oracle', grammar_search_pred_complexity_weight=0.0001, grammar_search_pred_selection_approach='score_optimization', grammar_search_predicate_cost_upper_bound=6, grammar_search_score_function='expected_nodes_created', grammar_search_search_algorithm='hill_climbing', grammar_search_suspicious_state_penalty=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_true_pos_weight=10, grammar_search_use_handcoded_debug_grammar=False, greedy_lookahead_max_num_resamples=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, grid_row_num_cells=100, horizon=12, ikfast_max_attempts=inf, ikfast_max_candidates=100, ikfast_max_distance=inf, ikfast_max_time=0.05, ikfast_norm=inf, implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_grid_num_ticks_per_dim=100, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, included_options='', interactive_num_ensemble_members=10, interactive_num_requests_per_cycle=10, interactive_query_policy='threshold', interactive_random_query_prob=0.5, interactive_score_function='entropy', interactive_score_threshold=0.05, kitchen_goals='all', kitchen_use_perfect_samplers=False, learning_rate=0.001, llm_model_name='text-curie-001', llm_num_completions=1, llm_openai_max_response_tokens=700, llm_prompt_cache_dir='llm_cache', llm_temperature=0.5, llm_use_cache_only=False, load_approach=False, load_atoms=False, load_data=False, load_experiment_id='', log_dir='logs', log_file='', loglevel=10, make_demo_videos=False, make_failure_videos=False, make_interaction_videos=False, make_test_videos=False, max_initial_demos=0, max_num_steps_interaction_request=64, max_num_steps_option_rollout=1000, max_rejection_sampling_tries=100, metacontroller_max_samples=100, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, mlp_classifier_balance_data=False, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_n_iter_no_change=5000, mlp_regressor_clip_gradients=False, mlp_regressor_gradient_clip_value=5, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_max_itr=10000, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_open_door_refine_penalty=0, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_pos_reward=0, nsrt_rl_reward_epsilon=0.01, nsrt_rl_valid_reward_steps_threshold=10, num_online_learning_cycles=10, num_test_tasks=10, num_train_tasks=50, offline_data_bilevel_plan_without_sim=None, offline_data_max_skeletons_optimized=-1, offline_data_method='demo', offline_data_num_replays=500, offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', online_learning_max_novelty_count=0, online_learning_max_transitions=inf, online_nsrt_learning_requests_per_cycle=1, option_learner='no_learning', option_learning_action_converter='identity', option_model_name='oracle', option_model_terminate_on_repeat=True, option_model_use_gui=False, painting_goal_receptacles='box_and_shelf', painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_max_objs_in_goal=inf, painting_num_objs_test=[3, 4], painting_num_objs_train=[2, 3], painting_raise_environment_failure=True, pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_min_want_locs=2, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_min_num_locs=3, pddl_forest_procedural_test_max_size=12, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_train_min_size=8, pddl_gripper_procedural_test_max_num_balls=2, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_min_num_rooms=3, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_min_passengers=1, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_max_locs=30, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_min_nuts=1, perceiver='trivial', pg3_add_condition_allow_new_vars=True, pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_heuristic='policy_guided', pg3_init_base_env=None, pg3_init_policy=None, pg3_max_analogies=5, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', playroom_num_blocks_test=[3], playroom_num_blocks_train=[3], pnad_search_timeout=10.0, pnad_search_without_del=False, predicate_classifier_model='mlp', predicate_knn_classifier_n_neighbors=1, predicate_mlp_classifier_init='default', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, pretty_print_when_loading=False, pybullet_birrt_extend_num_interp=10, pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_camera_height=180, pybullet_camera_width=335, pybullet_control_mode='position', pybullet_draw_debug=False, pybullet_ik_tol=0.001, pybullet_max_ik_iters=100, pybullet_max_vel_norm=0.05, pybullet_robot='fetch', pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7f6ceed9a940>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), pybullet_sim_steps_per_action=20, pytorch_train_print_every=10000, random_options_max_tries=100, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, refinement_data_low_level_search_timeout=5, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_estimation_num_skeletons_generated=8, refinement_estimator='oracle', regional_bumpy_cover_include_impossible_nsrt=False, render_state_dpi=150, repeated_nextto_nextto_thresh=0.5, repeated_nextto_num_dots=15, restart_learning=False, results_dir='results', rnt_painting_max_objs_in_goal=2, rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_num_objs_train=[8, 9, 10], sampler_disable_classifier=False, sampler_learner='oracle', sampler_learning_max_negative_data=100000, sampler_learning_regressor_model='neural_gaussian', sampler_learning_use_goals=False, sampler_mlp_classifier_max_itr=100000, sampler_mlp_classifier_n_reinitialize_tries=1, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, satellites_num_obj_test=[4, 5], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_sat_train=[2, 3], save_atoms=False, screws_num_screws_test=[25, 30], screws_num_screws_train=[15, 20], seed=456, segmenter='option_changes', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_check_static_object_changes=False, sesame_grounder='fd_translator', sesame_max_samples_per_step=10, sesame_max_skeletons_optimized=8, sesame_propagate_failures='immediately', sesame_static_object_change_tol=0.001, sesame_task_planner='fdopt-costs', sesame_task_planning_heuristic='lmcut', sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_model='optimistic', skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_max_train_iters=1000, skill_competence_model_num_em_iters=3, skill_competence_model_optimistic_recency_size=1, skill_competence_model_optimistic_window_size=5, skip_until_cycle=-1, sokoban_gym_name='Sokoban-v0', stick_button_disable_angles=True, stick_button_holder_scale=0.1, stick_button_num_buttons_test=[3, 4], stick_button_num_buttons_train=[1, 2], sticky_table_num_sticky_tables=3, sticky_table_num_tables=5, sticky_table_pick_success_prob=1.0, sticky_table_place_ball_fall_prob=1.0, sticky_table_place_smooth_fall_prob=1.0, sticky_table_place_sticky_fall_prob=0.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, strips_learner='oracle', teacher_dataset_num_examples=1, test_env_seed_offset=10000, test_task_json_dir=None, timeout=10, tools_num_contraptions_test=[3], tools_num_contraptions_train=[2], tools_num_items_test=[2, 3], tools_num_items_train=[2], use_gui=False, use_torch_gpu=False, video_dir='videos', video_fps=2, weight_decay=0)
Git commit hash: 7674472e36c1492aa564a8450745001e0c1fb3eb
/home/njk/miniconda3/envs/predicators/lib/python3.8/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS

Learning NSRTs on 0 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PlaceCupWithBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickCupWithoutBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HandEmpty(), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceCubeOnFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [HoldingCube(?cube:cube)]
    Add Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToCube:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(?robot:robot, ?cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCube(?robot:robot, ?cube:cube)
NSRT-PlaceBallInCupOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallOnFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [HoldingBall(?ball:ball)]
    Add Effects: [BallNotInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball)]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: [BallInCup]
    Option Spec: PlaceBallOnFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PlaceBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickBallFromFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallOnFloor(?ball:ball), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickBallFromFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PickCupWithBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PickCubeFromTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [CubeOnTable(?cube:cube, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PlaceCubeOnTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [HoldingCube(?cube:cube), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PickCubeFromFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [CubeOnFloor(?cube:cube), HandEmpty(), IsReachableCube(?robot:robot, ?cube:cube)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToBall:
    Parameters: [?robot:robot, ?ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(?robot:robot, ?ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToBall(?robot:robot, ?ball:ball)
NSRT-PickBallFromTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Ignore Effects: [BallInCup]
    Option Spec: PickBallFromTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToTable:
    Parameters: [?robot:robot, ?table:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(?robot:robot, ?table:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToTable(?robot:robot, ?table:table)
NSRT-PlaceCupWithBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallInCupOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToCup:
    Parameters: [?robot:robot, ?cup:cup]
    Preconditions: []
    Add Effects: [IsReachableCup(?robot:robot, ?cup:cup)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCup(?robot:robot, ?cup:cup)
NSRT-PickCupWithBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)
NSRT-PickCupWithoutBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)

[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0.0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 1, 'max_skeletons_optimized': 1, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 4.4, 'avg_num_nodes_expanded': 44.1, 'avg_num_nodes_created': 198.5, 'avg_num_nsrts': 96.8, 'avg_num_preds': 70.4, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 0.21631072298623621})
Wrote out test results to results/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] not yet terminating (remaining steps: 4)
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
[Explorer] Plan found.
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
[Explorer] Starting NSRT: NavigateToBall[robot:robot, ball:ball]
[Base Explorer] not yet terminating (remaining steps: 3)
[Explorer] Last NSRT: NavigateToBall[robot:robot, ball:ball]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[Explorer] Starting NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Base Explorer] not yet terminating (remaining steps: 2)
[Explorer] Last NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 1)
[Explorer] Last NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Base Explorer] terminating due to max steps
[Explorer] Last NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer]   outcome: False
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({CupOnTable(?x0:cup, ?x1:table)}): 5, frozenset({IsReachableSurface(?x0:robot, ?x1:table)}): 7, frozenset({CubeOnTable(?x0:cube, ?x1:table)}): 5, frozenset({BallOnFloor(?x0:ball)}): 3, frozenset({BallNotInCup(?x0:ball, ?x1:cup)}): 5, frozenset({HandEmpty()}): 3, frozenset({IsReachableBall(?x0:robot, ?x1:ball)}): 2, frozenset({HoldingBall(?x0:ball)}): 2})

Learning NSRTs on 1 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PlaceCupWithBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickCupWithoutBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HandEmpty(), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceCubeOnFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [HoldingCube(?cube:cube)]
    Add Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToCube:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(?robot:robot, ?cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCube(?robot:robot, ?cube:cube)
NSRT-PlaceBallInCupOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallOnFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [HoldingBall(?ball:ball)]
    Add Effects: [BallNotInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball)]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: [BallInCup]
    Option Spec: PlaceBallOnFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PlaceBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickBallFromFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallOnFloor(?ball:ball), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickBallFromFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PickCupWithBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PickCubeFromTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [CubeOnTable(?cube:cube, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PlaceCubeOnTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [HoldingCube(?cube:cube), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PickCubeFromFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [CubeOnFloor(?cube:cube), HandEmpty(), IsReachableCube(?robot:robot, ?cube:cube)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToBall:
    Parameters: [?robot:robot, ?ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(?robot:robot, ?ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToBall(?robot:robot, ?ball:ball)
NSRT-PickBallFromTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Ignore Effects: [BallInCup]
    Option Spec: PickBallFromTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToTable:
    Parameters: [?robot:robot, ?table:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(?robot:robot, ?table:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToTable(?robot:robot, ?table:table)
NSRT-PlaceCupWithBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallInCupOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToCup:
    Parameters: [?robot:robot, ?cup:cup]
    Preconditions: []
    Add Effects: [IsReachableCup(?robot:robot, ?cup:cup)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCup(?robot:robot, ?cup:cup)
NSRT-PickCupWithBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)
NSRT-PickCupWithoutBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)

Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall[robot:robot, ball:ball]_0.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor[robot:robot, ball:ball, cup:cup]_0.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable[robot:robot, sticky-table-2:table]_0.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]_0.competence.
Fitting wrapped sampler for NavigateToBall...
Training MLPBinaryClassifier on 1 datapoints (1 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall_0.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall_0.sampler_classifier_data.
Fitting wrapped sampler for PickBallFromFloor...
Training MLPBinaryClassifier on 1 datapoints (1 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor_0.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor_0.sampler_classifier_data.
Fitting wrapped sampler for NavigateToTable...
Training MLPBinaryClassifier on 1 datapoints (1 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable_0.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable_0.sampler_classifier_data.
Fitting wrapped sampler for PlaceBallOnTable...
Training MLPBinaryClassifier on 1 datapoints (0 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable_0.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable_0.sampler_classifier_data.
[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToCube:
    Parameters: [robot:robot, cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(robot:robot, cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToCube', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToCube:
    Parameters: [robot:robot, cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(robot:robot, cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToCube', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToCube:
    Parameters: [robot:robot, cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(robot:robot, cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToCube', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToCube:
    Parameters: [robot:robot, cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(robot:robot, cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToCube', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-PickCubeFromFloor:
    Parameters: [robot:robot, cube:cube]
    Preconditions: [CubeOnFloor(cube:cube), HandEmpty(), IsReachableCube(robot:robot, cube:cube)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnFloor(cube:cube), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromFloor', types=[Type(name='robot'), Type(name='cube')])
    Option Objects: [robot:robot, cube:cube]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0.0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 1, 'max_skeletons_optimized': 1, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 4.8, 'avg_num_nodes_expanded': 44.6, 'avg_num_nodes_created': 215.3, 'avg_num_nsrts': 105.6, 'avg_num_preds': 76.8, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4, 'query_cost': 0.0, 'learning_time': 0.41447430092375726})
Wrote out test results to results/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] not yet terminating (remaining steps: 16)
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
[Explorer] Plan found.
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
[Explorer] Starting NSRT: PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table]
[Base Explorer] not yet terminating (remaining steps: 15)
[Explorer] Last NSRT: PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 14)
[Explorer] Last NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 13)
[Explorer] Last NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Option execution failure!
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty()}
[Explorer] Plan found.
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
[Explorer] Starting NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Base Explorer] not yet terminating (remaining steps: 12)
[Explorer] Last NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 11)
[Explorer] Last NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Option execution failure!
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty()}
[Explorer] Plan found.
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
[Explorer] Starting NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Base Explorer] not yet terminating (remaining steps: 10)
[Explorer] Last NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 9)
[Explorer] Last NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Option execution failure!
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), CubeOnFloor(cube:cube), HandEmpty()}
[Explorer] Plan found.
Using option PickCubeFromFloor[robot:robot, cube:cube] from NSRT plan.
[Explorer] Starting NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Base Explorer] not yet terminating (remaining steps: 8)
[Explorer] Last NSRT: PickCubeFromFloor[robot:robot, cube:cube]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 7)
[Explorer] Last NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
[Explorer] Exhausted horizon for assigned task.
[Explorer] Pursuing NSRT preconditions
PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] score: (1.0160154592736566, 0.22949807913924558)
PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] score: (0.7580077296368283, 0.6991343820899717)
PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] score: (0.016015459273656617, 0.4098748668513944)
NavigateToBall[robot:robot, ball:ball] score: (0.016015459273656617, 0.05174932302623225)
PickBallFromFloor[robot:robot, ball:ball, cup:cup] score: (0.016015459273656617, 0.7711356263977204)
NavigateToTable[robot:robot, sticky-table-2:table] score: (0.011324639856219572, 0.3379455470099282)
PickCubeFromFloor[robot:robot, cube:cube] score: (0.009246529722841136, 0.6158502868307478)
[Explorer] Replanning to {HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table), BallNotInCup(ball:ball, cup:cup)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
[Explorer] Plan found.
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
[Explorer] Starting NSRT: NavigateToBall[robot:robot, ball:ball]
[Base Explorer] not yet terminating (remaining steps: 6)
[Explorer] Last NSRT: NavigateToBall[robot:robot, ball:ball]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[Explorer] Starting NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Base Explorer] not yet terminating (remaining steps: 5)
[Explorer] Last NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 4)
[Explorer] Last NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
[Explorer] Practicing NSRT: GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer] Starting NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 3)
[Explorer] Last NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Pursuing NSRT preconditions
PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] score: (1.0119021286836771, 0.2944334649324707)
PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] score: (0.758416075902783, 0.9870659486614158)
PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] score: (0.016832151805566086, 0.13690209036065326)
NavigateToBall[robot:robot, ball:ball] score: (0.011902128683677168, 0.4244269064350744)
PickBallFromFloor[robot:robot, ball:ball, cup:cup] score: (0.011902128683677168, 0.39907114614584505)
PickCubeFromFloor[robot:robot, cube:cube] score: (0.009718047375984225, 0.12234616285101707)
NavigateToTable[robot:robot, sticky-table-2:table] score: (0.009718047375984225, 0.7660924470890786)
[Explorer] Replanning to {HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table), BallNotInCup(ball:ball, cup:cup)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
[Explorer] Plan found.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[Explorer] Starting NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Base Explorer] not yet terminating (remaining steps: 2)
[Explorer] Last NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Explorer]   outcome: True
[Explorer] Option policy called.
[Explorer] Practicing NSRT: GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer] Starting NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 1)
[Explorer] Last NSRT: PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Pursuing NSRT preconditions
PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] score: (1.0099069655279613, 0.26619421430019696)
PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] score: (0.7585796838216312, 0.14702613411947774)
PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] score: (0.0171593676432625, 0.8485705163680143)
NavigateToBall[robot:robot, ball:ball] score: (0.01213350522142394, 0.3896961676763028)
PickCubeFromFloor[robot:robot, cube:cube] score: (0.009906965527961359, 0.20826417748641257)
NavigateToTable[robot:robot, sticky-table-2:table] score: (0.009906965527961359, 0.5991919144834326)
PickBallFromFloor[robot:robot, ball:ball, cup:cup] score: (0.009906965527961359, 0.3339203809495912)
[Explorer] Replanning to {HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table), BallNotInCup(ball:ball, cup:cup)}
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
[Explorer] Plan found.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[Explorer] Starting NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Base Explorer] terminating due to max steps
[Explorer] Last NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Explorer]   outcome: True
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...
Novelty counts: defaultdict(<class 'int'>, {frozenset({CupOnTable(?x0:cup, ?x1:table)}): 22, frozenset({IsReachableSurface(?x0:robot, ?x1:table)}): 27, frozenset({CubeOnTable(?x0:cube, ?x1:table)}): 14, frozenset({BallOnFloor(?x0:ball)}): 16, frozenset({BallNotInCup(?x0:ball, ?x1:cup)}): 22, frozenset({HandEmpty()}): 11, frozenset({IsReachableBall(?x0:robot, ?x1:ball)}): 8, frozenset({HoldingBall(?x0:ball)}): 6, frozenset({IsReachableCube(?x0:robot, ?x1:cube)}): 14, frozenset({HoldingCube(?x0:cube)}): 5, frozenset({CubeOnFloor(?x0:cube)}): 3})

Learning NSRTs on 2 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PlaceCupWithBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickCupWithoutBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HandEmpty(), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceCubeOnFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [HoldingCube(?cube:cube)]
    Add Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToCube:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: []
    Add Effects: [IsReachableCube(?robot:robot, ?cube:cube)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCube(?robot:robot, ?cube:cube)
NSRT-PlaceBallInCupOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnFloor(?cup:cup), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallOnFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [HoldingBall(?ball:ball)]
    Add Effects: [BallNotInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball)]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: [BallInCup]
    Option Spec: PlaceBallOnFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PlaceCupWithoutBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithoutBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PlaceBallOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-PickBallFromFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallOnFloor(?ball:ball), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickBallFromFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PickCupWithBallFromFloor:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty(), IsReachableBall(?robot:robot, ?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromFloor(?robot:robot, ?cup:cup, ?ball:ball)
NSRT-PickCubeFromTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [CubeOnTable(?cube:cube, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PlaceCubeOnTable:
    Parameters: [?robot:robot, ?cube:cube, ?table:table]
    Preconditions: [HoldingCube(?cube:cube), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [CubeOnTable(?cube:cube, ?table:table), HandEmpty()]
    Delete Effects: [HoldingCube(?cube:cube)]
    Ignore Effects: []
    Option Spec: PlaceCubeOnTable(?robot:robot, ?cube:cube, ?table:table)
NSRT-PickCubeFromFloor:
    Parameters: [?robot:robot, ?cube:cube]
    Preconditions: [CubeOnFloor(?cube:cube), HandEmpty(), IsReachableCube(?robot:robot, ?cube:cube)]
    Add Effects: [HoldingCube(?cube:cube)]
    Delete Effects: [CubeOnFloor(?cube:cube), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCubeFromFloor(?robot:robot, ?cube:cube)
NSRT-NavigateToBall:
    Parameters: [?robot:robot, ?ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(?robot:robot, ?ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToBall(?robot:robot, ?ball:ball)
NSRT-PickBallFromTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Ignore Effects: [BallInCup]
    Option Spec: PickBallFromTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToTable:
    Parameters: [?robot:robot, ?table:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(?robot:robot, ?table:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToTable(?robot:robot, ?table:table)
NSRT-PlaceCupWithBallOnFloor:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), HoldingCup(?cup:cup)]
    Add Effects: [BallOnFloor(?ball:ball), CupOnFloor(?cup:cup), HandEmpty()]
    Delete Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Ignore Effects: []
    Option Spec: PlaceCupWithBallOnFloor(?robot:robot, ?ball:ball, ?cup:cup)
NSRT-PlaceBallInCupOnTable:
    Parameters: [?robot:robot, ?ball:ball, ?cup:cup, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HoldingBall(?ball:ball), IsReachableCup(?robot:robot, ?cup:cup)]
    Add Effects: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), HandEmpty()]
    Delete Effects: [BallNotInCup(?ball:ball, ?cup:cup), HoldingBall(?ball:ball)]
    Ignore Effects: []
    Option Spec: PlaceBallInCupOnTable(?robot:robot, ?ball:ball, ?cup:cup, ?table:table)
NSRT-NavigateToCup:
    Parameters: [?robot:robot, ?cup:cup]
    Preconditions: []
    Add Effects: [IsReachableCup(?robot:robot, ?cup:cup)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option Spec: NavigateToCup(?robot:robot, ?cup:cup)
NSRT-PickCupWithBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallInCup(?ball:ball, ?cup:cup), BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingBall(?ball:ball), HoldingCup(?cup:cup)]
    Delete Effects: [BallOnTable(?ball:ball, ?table:table), CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)
NSRT-PickCupWithoutBallFromTable:
    Parameters: [?robot:robot, ?cup:cup, ?ball:ball, ?table:table]
    Preconditions: [BallNotInCup(?ball:ball, ?cup:cup), CupOnTable(?cup:cup, ?table:table), HandEmpty(), IsReachableSurface(?robot:robot, ?table:table)]
    Add Effects: [HoldingCup(?cup:cup)]
    Delete Effects: [CupOnTable(?cup:cup, ?table:table), HandEmpty()]
    Ignore Effects: []
    Option Spec: PickCupWithoutBallFromTable(?robot:robot, ?cup:cup, ?ball:ball, ?table:table)

Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall[robot:robot, ball:ball]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor[robot:robot, ball:ball, cup:cup]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable[robot:robot, sticky-table-2:table]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]_1.competence.
Saved competence model to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromFloor[robot:robot, cube:cube]_1.competence.
Fitting wrapped sampler for NavigateToBall...
Training MLPBinaryClassifier on 2 datapoints (2 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToBall_1.sampler_classifier_data.
Fitting wrapped sampler for PickBallFromFloor...
Training MLPBinaryClassifier on 4 datapoints (4 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickBallFromFloor_1.sampler_classifier_data.
Fitting wrapped sampler for NavigateToTable...
Training MLPBinaryClassifier on 3 datapoints (3 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_NavigateToTable_1.sampler_classifier_data.
Fitting wrapped sampler for PlaceBallOnTable...
Training MLPBinaryClassifier on 3 datapoints (0 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceBallOnTable_1.sampler_classifier_data.
Fitting wrapped sampler for PickCubeFromTable...
Training MLPBinaryClassifier on 1 datapoints (1 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromTable_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromTable_1.sampler_classifier_data.
Fitting wrapped sampler for PlaceCubeOnTable...
Training MLPBinaryClassifier on 4 datapoints (1 positive)
Loss: 0.66935, iter: 0/100000
Loss: 0.00001, iter: 10000/100000
Loss: 0.00000, iter: 20000/100000
Loss did not improve after 5000 itrs, terminating at itr 26277.
Loaded best model with loss: 0.00000
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceCubeOnTable_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PlaceCubeOnTable_1.sampler_classifier_data.
Fitting wrapped sampler for PickCubeFromFloor...
Training MLPBinaryClassifier on 3 datapoints (3 positive)
Saved sampler classifier to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromFloor_1.sampler_classifier.
Saved sampler classifier data to saved_approaches/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore.saved_PickCubeFromFloor_1.sampler_classifier_data.
[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallInCupOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, normal-table-4:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), CupOnTable(cup:cup, normal-table-4:table), HoldingBall(ball:ball), IsReachableCup(robot:robot, cup:cup)]
    Add Effects: [BallInCup(ball:ball, cup:cup), BallOnTable(ball:ball, normal-table-4:table), HandEmpty()]
    Delete Effects: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallInCupOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, normal-table-4:table]
GroundNSRT-PickCupWithBallFromTable:
    Parameters: [robot:robot, cup:cup, ball:ball, normal-table-4:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), BallOnTable(ball:ball, normal-table-4:table), CupOnTable(cup:cup, normal-table-4:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-4:table)]
    Add Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Delete Effects: [BallOnTable(ball:ball, normal-table-4:table), CupOnTable(cup:cup, normal-table-4:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCupWithBallFromTable', types=[Type(name='robot'), Type(name='cup'), Type(name='ball'), Type(name='table')])
    Option Objects: [robot:robot, cup:cup, ball:ball, normal-table-4:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCupWithBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), HoldingCup(cup:cup), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), CupOnTable(cup:cup, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCupWithBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallInCupOnTable[robot:robot, ball:ball, cup:cup, normal-table-4:table] from NSRT plan.
Using option PickCupWithBallFromTable[robot:robot, cup:cup, ball:ball, normal-table-4:table] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CupOnTable(cup:cup, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCupWithBallFromFloor:
    Parameters: [robot:robot, cup:cup, ball:ball]
    Preconditions: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball), IsReachableCup(robot:robot, cup:cup)]
    Add Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Delete Effects: [BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCupWithBallFromFloor', types=[Type(name='robot'), Type(name='cup'), Type(name='ball')])
    Option Objects: [robot:robot, cup:cup, ball:ball]
GroundNSRT-PlaceCupWithBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), HoldingCup(cup:cup), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), CupOnTable(cup:cup, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCupWithBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickCupWithBallFromFloor[robot:robot, cup:cup, ball:ball] from NSRT plan.
Using option PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CupOnTable(cup:cup, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCupWithBallFromFloor:
    Parameters: [robot:robot, cup:cup, ball:ball]
    Preconditions: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball), IsReachableCup(robot:robot, cup:cup)]
    Add Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Delete Effects: [BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCupWithBallFromFloor', types=[Type(name='robot'), Type(name='cup'), Type(name='ball')])
    Option Objects: [robot:robot, cup:cup, ball:ball]
GroundNSRT-PlaceCupWithBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), HoldingCup(cup:cup), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), CupOnTable(cup:cup, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCupWithBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickCupWithBallFromFloor[robot:robot, cup:cup, ball:ball] from NSRT plan.
Using option PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CupOnTable(cup:cup, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCupWithBallFromFloor:
    Parameters: [robot:robot, cup:cup, ball:ball]
    Preconditions: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball), IsReachableCup(robot:robot, cup:cup)]
    Add Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Delete Effects: [BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCupWithBallFromFloor', types=[Type(name='robot'), Type(name='cup'), Type(name='ball')])
    Option Objects: [robot:robot, cup:cup, ball:ball]
GroundNSRT-PlaceCupWithBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), HoldingCup(cup:cup), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), CupOnTable(cup:cup, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCupWithBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickCupWithBallFromFloor[robot:robot, cup:cup, ball:ball] from NSRT plan.
Using option PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {CupOnTable(cup:cup, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{IsReachableCup(robot:robot, cup:cup), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCupWithBallFromFloor:
    Parameters: [robot:robot, cup:cup, ball:ball]
    Preconditions: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball), IsReachableCup(robot:robot, cup:cup)]
    Add Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Delete Effects: [BallOnFloor(ball:ball), CupOnFloor(cup:cup), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCupWithBallFromFloor', types=[Type(name='robot'), Type(name='cup'), Type(name='ball')])
    Option Objects: [robot:robot, cup:cup, ball:ball]
GroundNSRT-PlaceCupWithBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallInCup(ball:ball, cup:cup), HoldingCup(cup:cup), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), CupOnTable(cup:cup, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball), HoldingCup(cup:cup)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCupWithBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickCupWithBallFromFloor[robot:robot, cup:cup, ball:ball] from NSRT plan.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-0:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableCube(robot:robot, cube:cube)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, sticky-table-2:table), IsReachableSurface(robot:robot, normal-table-3:table), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), IsReachableSurface(robot:robot, sticky-table-1:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
Current State: {CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
Current Task Plan:
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
Expected atoms execution monitor triggered replanning because of these atoms: {IsReachableBall(robot:robot, ball:ball), BallOnTable(ball:ball, sticky-table-2:table)}
[CogMan] Replanning triggered.
Current State: {CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current State:
{CupOnTable(cup:cup, normal-table-4:table), IsReachableSurface(robot:robot, sticky-table-2:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty()}
Current Task Plan:
GroundNSRT-NavigateToBall:
    Parameters: [robot:robot, ball:ball]
    Preconditions: []
    Add Effects: [IsReachableBall(robot:robot, ball:ball)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToBall', types=[Type(name='robot'), Type(name='ball')])
    Option Objects: [robot:robot, ball:ball]
GroundNSRT-PickBallFromFloor:
    Parameters: [robot:robot, ball:ball, cup:cup]
    Preconditions: [BallOnFloor(ball:ball), HandEmpty(), IsReachableBall(robot:robot, ball:ball)]
    Add Effects: [HoldingBall(ball:ball)]
    Delete Effects: [BallInCup(ball:ball, cup:cup), BallOnFloor(ball:ball), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickBallFromFloor', types=[Type(name='robot'), Type(name='ball'), Type(name='cup')])
    Option Objects: [robot:robot, ball:ball, cup:cup]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceBallOnTable:
    Parameters: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
    Preconditions: [BallNotInCup(ball:ball, cup:cup), HoldingBall(ball:ball), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [BallOnTable(ball:ball, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingBall(ball:ball)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceBallOnTable', types=[Type(name='robot'), Type(name='ball'), Type(name='cup'), Type(name='table')])
    Option Objects: [robot:robot, ball:ball, cup:cup, sticky-table-2:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, normal-table-3:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, normal-table-3:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, normal-table-3:table]
GroundNSRT-PickCubeFromTable:
    Parameters: [robot:robot, cube:cube, normal-table-3:table]
    Preconditions: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty(), IsReachableSurface(robot:robot, normal-table-3:table)]
    Add Effects: [HoldingCube(cube:cube)]
    Delete Effects: [CubeOnTable(cube:cube, normal-table-3:table), HandEmpty()]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PickCubeFromTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, normal-table-3:table]
GroundNSRT-NavigateToTable:
    Parameters: [robot:robot, sticky-table-2:table]
    Preconditions: []
    Add Effects: [IsReachableSurface(robot:robot, sticky-table-2:table)]
    Delete Effects: []
    Ignore Effects: [IsReachableBall, IsReachableCube, IsReachableCup, IsReachableSurface]
    Option: SingletonParameterizedOption(name='NavigateToTable', types=[Type(name='robot'), Type(name='table')])
    Option Objects: [robot:robot, sticky-table-2:table]
GroundNSRT-PlaceCubeOnTable:
    Parameters: [robot:robot, cube:cube, sticky-table-2:table]
    Preconditions: [HoldingCube(cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table)]
    Add Effects: [CubeOnTable(cube:cube, sticky-table-2:table), HandEmpty()]
    Delete Effects: [HoldingCube(cube:cube)]
    Ignore Effects: []
    Option: SingletonParameterizedOption(name='PlaceCubeOnTable', types=[Type(name='robot'), Type(name='cube'), Type(name='table')])
    Option Objects: [robot:robot, cube:cube, sticky-table-2:table]
Using option NavigateToBall[robot:robot, ball:ball] from NSRT plan.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
Using option PlaceBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0.0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 1, 'max_skeletons_optimized': 1, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 4.4, 'avg_num_nodes_expanded': 47.6, 'avg_num_nodes_created': 205.7, 'avg_num_nsrts': 96.8, 'avg_num_preds': 70.4, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20, 'query_cost': 0.0, 'learning_time': 13.380462119937874})
Wrote out test results to results/sticky_table__active_sampler_learning__456______sticky_table-success_rate_explore__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[Base Explorer] not yet terminating (remaining steps: 64)
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {IsReachableSurface(robot:robot, normal-table-4:table), IsReachableCup(robot:robot, cup:cup), CupOnTable(cup:cup, normal-table-4:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, normal-table-3:table), CubeOnTable(cube:cube, normal-table-3:table), BallOnFloor(ball:ball), BallNotInCup(ball:ball, cup:cup), HandEmpty(), IsReachableBall(robot:robot, ball:ball)}
[Explorer] Plan found.
Using option PickBallFromFloor[robot:robot, ball:ball, cup:cup] from NSRT plan.
[Explorer] Starting NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Base Explorer] not yet terminating (remaining steps: 63)
[Explorer] Last NSRT: PickBallFromFloor[robot:robot, ball:ball, cup:cup]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceBallInCupOnTable[robot:robot, ball:ball, cup:cup, normal-table-4:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceBallInCupOnTable[robot:robot, ball:ball, cup:cup, normal-table-4:table]
[Base Explorer] not yet terminating (remaining steps: 62)
[Explorer] Last NSRT: PlaceBallInCupOnTable[robot:robot, ball:ball, cup:cup, normal-table-4:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table] from NSRT plan.
[Explorer] Starting NSRT: PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table]
[Base Explorer] not yet terminating (remaining steps: 61)
[Explorer] Last NSRT: PickCubeFromTable[robot:robot, cube:cube, normal-table-3:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 60)
[Explorer] Last NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 59)
[Explorer] Last NSRT: PlaceCubeOnTable[robot:robot, cube:cube, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, normal-table-4:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, normal-table-4:table]
[Base Explorer] not yet terminating (remaining steps: 58)
[Explorer] Last NSRT: NavigateToTable[robot:robot, normal-table-4:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PickCupWithBallFromTable[robot:robot, cup:cup, ball:ball, normal-table-4:table] from NSRT plan.
[Explorer] Starting NSRT: PickCupWithBallFromTable[robot:robot, cup:cup, ball:ball, normal-table-4:table]
[Base Explorer] not yet terminating (remaining steps: 57)
[Explorer] Last NSRT: PickCupWithBallFromTable[robot:robot, cup:cup, ball:ball, normal-table-4:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option NavigateToTable[robot:robot, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 56)
[Explorer] Last NSRT: NavigateToTable[robot:robot, sticky-table-2:table]
[Explorer]   outcome: True
[Explorer] Option policy called.
Using option PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table] from NSRT plan.
[Explorer] Starting NSRT: PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Base Explorer] not yet terminating (remaining steps: 55)
[Explorer] Last NSRT: PlaceCupWithBallOnTable[robot:robot, ball:ball, cup:cup, sticky-table-2:table]
[Explorer]   outcome: False
[Explorer] Option policy called.
[Explorer] Option execution failure!
[Explorer] Option policy called.
[Explorer] Pursuing assigned task goal
[Explorer] Replanning to {CubeOnTable(cube:cube, sticky-table-2:table), BallOnTable(ball:ball, sticky-table-2:table)}
Current State: {CubeOnTable(cube:cube, sticky-table-2:table), IsReachableCube(robot:robot, cube:cube), IsReachableSurface(robot:robot, sticky-table-2:table), BallOnFloor(ball:ball), CupOnFloor(cup:cup), BallInCup(ball:ball, cup:cup), HandEmpty()}
> [0;32m/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py[0m(229)[0;36m_option_policy[0;34m()[0m
[0;32m    228 [0;31m                        [0;32mimport[0m [0mipdb[0m[0;34m;[0m [0mipdb[0m[0;34m.[0m[0mset_trace[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m--> 229 [0;31m                        [0;32mcontinue[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m    230 [0;31m                    [0mlogging[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0;34m"[Explorer] Plan found."[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> 
main.py crashed
Traceback (most recent call last):
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 221, in _option_policy
    current_policy = self._get_option_policy_for_task(task)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 332, in _get_option_policy_for_task
    plan, atoms_seq, _ = run_task_plan_once(
  File "/home/njk/Documents/GitHub/predicators/predicators/planning.py", line 1246, in run_task_plan_once
    plan, atoms_seq, metrics = fd_plan_from_sas_file(
  File "/home/njk/Documents/GitHub/predicators/predicators/planning.py", line 1069, in fd_plan_from_sas_file
    raise PlanningFailure(f"Plan not found with FD! Error: {output}")
predicators.planning.PlanningFailure: Plan not found with FD! Error: INFO     Running search (release).
INFO     search stdin: /tmp/tmpy2knbz5m
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/njk/Documents/GitHub/ronuchit-downward/downward/builds/release/bin/downward --search 'astar(lmcut())' --internal-plan-file sas_plan < /tmp/tmpy2knbz5m
[t=1.561e-05s, 28064 KB] reading input...
[t=0.00037828s, 28064 KB] done reading input!
[t=0.00100633s, 28328 KB] Initializing landmark cut heuristic...
[t=0.00106719s, 28328 KB] Building successor generator...done!
[t=0.00113635s, 28328 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00114689s, 28328 KB] time for successor generation creation: 2.714e-05s
[t=0.00115926s, 28328 KB] Variables: 20
[t=0.00116997s, 28328 KB] FactPairs: 50
[t=0.00117887s, 28328 KB] Bytes per state: 4
[t=0.00124088s, 28328 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00129753s, 28328 KB] New best heuristic value for lmcut: 452
[t=0.00130885s, 28328 KB] g=0, 1 evaluated, 0 expanded
[t=0.00131839s, 28328 KB] f = 452, 1 evaluated, 0 expanded
[t=0.00132947s, 28328 KB] Initial heuristic value for lmcut: 452
[t=0.0013396s, 28328 KB] pruning method: none
[t=0.00136614s, 28328 KB] New best heuristic value for lmcut: 436
[t=0.00137659s, 28328 KB] g=80, 2 evaluated, 1 expanded
[t=0.00141336s, 28328 KB] New best heuristic value for lmcut: 421
[t=0.00142334s, 28328 KB] g=95, 4 evaluated, 1 expanded
[t=0.00151202s, 28328 KB] f = 516, 10 evaluated, 1 expanded
[t=0.00155972s, 28328 KB] f = 603, 12 evaluated, 4 expanded
[t=0.00157189s, 28328 KB] f = 611, 12 evaluated, 5 expanded
[t=0.0015871s, 28328 KB] f = 639, 12 evaluated, 9 expanded
[t=0.00169031s, 28328 KB] f = 726, 21 evaluated, 11 expanded
[t=0.00170483s, 28328 KB] f = 734, 22 evaluated, 12 expanded
[t=0.00172757s, 28328 KB] f = 834, 27 evaluated, 17 expanded
[t=0.00185238s, 28328 KB] f = 898, 35 evaluated, 18 expanded
[t=0.00190686s, 28328 KB] f = 985, 38 evaluated, 21 expanded
[t=0.00194886s, 28328 KB] f = 993, 40 evaluated, 22 expanded
[t=0.00206085s, 28328 KB] f = 1003, 47 evaluated, 26 expanded
[t=0.00207432s, 28328 KB] f = 1162, 47 evaluated, 27 expanded
[t=0.00211146s, 28328 KB] f = 1168, 48 evaluated, 31 expanded
[t=0.00221041s, 28328 KB] f = 1175, 55 evaluated, 32 expanded
[t=0.00231421s, 28328 KB] f = 1183, 62 evaluated, 33 expanded
[t=0.00250056s, 28328 KB] f = 1249, 76 evaluated, 35 expanded
[t=0.00251381s, 28328 KB] f = 1257, 76 evaluated, 36 expanded
[t=0.00252741s, 28328 KB] f = 1262, 76 evaluated, 39 expanded
[t=0.0025635s, 28328 KB] f = 1263, 77 evaluated, 42 expanded
[t=0.00260756s, 28328 KB] f = 1278, 78 evaluated, 45 expanded
[t=0.00265718s, 28328 KB] f = 1285, 80 evaluated, 51 expanded
[t=0.00279893s, 28328 KB] f = 1350, 90 evaluated, 54 expanded
[t=0.00281166s, 28328 KB] f = 1357, 90 evaluated, 55 expanded
[t=0.00282688s, 28328 KB] f = 1358, 90 evaluated, 59 expanded
[t=0.00284028s, 28328 KB] f = 1365, 90 evaluated, 62 expanded
[t=0.00285308s, 28328 KB] f = 1372, 90 evaluated, 64 expanded
[t=0.00286663s, 28328 KB] f = 1373, 91 evaluated, 65 expanded
[t=0.00288443s, 28328 KB] f = 1380, 91 evaluated, 71 expanded
[t=0.00290515s, 28328 KB] f = 1385, 95 evaluated, 75 expanded
[t=0.00304536s, 28328 KB] f = 1386, 105 evaluated, 78 expanded
[t=0.0032173s, 28328 KB] f = 1401, 115 evaluated, 81 expanded
[t=0.00348392s, 28328 KB] f = 1473, 135 evaluated, 87 expanded
[t=0.00350273s, 28328 KB] f = 1480, 136 evaluated, 88 expanded
[t=0.00352748s, 28328 KB] f = 1481, 141 evaluated, 93 expanded
[t=0.00354795s, 28328 KB] f = 1488, 145 evaluated, 97 expanded
[t=0.00356388s, 28328 KB] f = 1496, 147 evaluated, 99 expanded
[t=0.00359254s, 28328 KB] Completely explored state space -- no solution!
[t=0.00360263s, 28328 KB] Actual search time: 0.00226193s
[t=0.00361311s, 28328 KB] Expanded 107 state(s).
[t=0.00361311s, 28328 KB] Reopened 0 state(s).
[t=0.00361311s, 28328 KB] Evaluated 155 state(s).
[t=0.00361311s, 28328 KB] Evaluations: 155
[t=0.00361311s, 28328 KB] Generated 933 state(s).
[t=0.00361311s, 28328 KB] Dead ends: 48 state(s).
[t=0.00361311s, 28328 KB] Expanded until last jump: 99 state(s).
[t=0.00361311s, 28328 KB] Reopened until last jump: 0 state(s).
[t=0.00361311s, 28328 KB] Evaluated until last jump: 147 state(s).
[t=0.00361311s, 28328 KB] Generated until last jump: 861 state(s).
[t=0.00361311s, 28328 KB] Number of registered states: 155
[t=0.00361311s, 28328 KB] Int hash set load factor: 155/256 = 0.605469
[t=0.00361311s, 28328 KB] Int hash set resizes: 8
[t=0.00361311s, 28328 KB] Search time: 0.00237266s
[t=0.00361311s, 28328 KB] Total time: 0.00361311s
Search stopped without finding a solution.
Peak memory: 28328 KB
search exit code: 12

Driver aborting after search

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "predicators/main.py", line 565, in <module>
    main()
  File "predicators/main.py", line 137, in main
    _run_pipeline(env, cogman, stripped_train_tasks, offline_dataset)
  File "predicators/main.py", line 196, in _run_pipeline
    interaction_results, query_cost = _generate_interaction_results(
  File "predicators/main.py", line 262, in _generate_interaction_results
    observed_traj, _, _ = _run_episode(
  File "predicators/main.py", line 497, in _run_episode
    act = cogman.step(obs)
  File "predicators/main.py", line 497, in _run_episode
    act = cogman.step(obs)
  File "/home/njk/Documents/GitHub/predicators/predicators/cogman.py", line 73, in step
    act = self._current_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 280, in _wrapped_policy
    return policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/utils.py", line 1226, in _policy
    cur_option = option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 265, in _wrapped_option_policy
    option = _option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 251, in _option_policy
    return _option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 229, in _option_policy
    continue
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 229, in _option_policy
    continue
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
Traceback (most recent call last):
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 221, in _option_policy
    current_policy = self._get_option_policy_for_task(task)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 332, in _get_option_policy_for_task
    plan, atoms_seq, _ = run_task_plan_once(
  File "/home/njk/Documents/GitHub/predicators/predicators/planning.py", line 1246, in run_task_plan_once
    plan, atoms_seq, metrics = fd_plan_from_sas_file(
  File "/home/njk/Documents/GitHub/predicators/predicators/planning.py", line 1069, in fd_plan_from_sas_file
    raise PlanningFailure(f"Plan not found with FD! Error: {output}")
predicators.planning.PlanningFailure: Plan not found with FD! Error: INFO     Running search (release).
INFO     search stdin: /tmp/tmpy2knbz5m
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/njk/Documents/GitHub/ronuchit-downward/downward/builds/release/bin/downward --search 'astar(lmcut())' --internal-plan-file sas_plan < /tmp/tmpy2knbz5m
[t=1.561e-05s, 28064 KB] reading input...
[t=0.00037828s, 28064 KB] done reading input!
[t=0.00100633s, 28328 KB] Initializing landmark cut heuristic...
[t=0.00106719s, 28328 KB] Building successor generator...done!
[t=0.00113635s, 28328 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00114689s, 28328 KB] time for successor generation creation: 2.714e-05s
[t=0.00115926s, 28328 KB] Variables: 20
[t=0.00116997s, 28328 KB] FactPairs: 50
[t=0.00117887s, 28328 KB] Bytes per state: 4
[t=0.00124088s, 28328 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00129753s, 28328 KB] New best heuristic value for lmcut: 452
[t=0.00130885s, 28328 KB] g=0, 1 evaluated, 0 expanded
[t=0.00131839s, 28328 KB] f = 452, 1 evaluated, 0 expanded
[t=0.00132947s, 28328 KB] Initial heuristic value for lmcut: 452
[t=0.0013396s, 28328 KB] pruning method: none
[t=0.00136614s, 28328 KB] New best heuristic value for lmcut: 436
[t=0.00137659s, 28328 KB] g=80, 2 evaluated, 1 expanded
[t=0.00141336s, 28328 KB] New best heuristic value for lmcut: 421
[t=0.00142334s, 28328 KB] g=95, 4 evaluated, 1 expanded
[t=0.00151202s, 28328 KB] f = 516, 10 evaluated, 1 expanded
[t=0.00155972s, 28328 KB] f = 603, 12 evaluated, 4 expanded
[t=0.00157189s, 28328 KB] f = 611, 12 evaluated, 5 expanded
[t=0.0015871s, 28328 KB] f = 639, 12 evaluated, 9 expanded
[t=0.00169031s, 28328 KB] f = 726, 21 evaluated, 11 expanded
[t=0.00170483s, 28328 KB] f = 734, 22 evaluated, 12 expanded
[t=0.00172757s, 28328 KB] f = 834, 27 evaluated, 17 expanded
[t=0.00185238s, 28328 KB] f = 898, 35 evaluated, 18 expanded
[t=0.00190686s, 28328 KB] f = 985, 38 evaluated, 21 expanded
[t=0.00194886s, 28328 KB] f = 993, 40 evaluated, 22 expanded
[t=0.00206085s, 28328 KB] f = 1003, 47 evaluated, 26 expanded
[t=0.00207432s, 28328 KB] f = 1162, 47 evaluated, 27 expanded
[t=0.00211146s, 28328 KB] f = 1168, 48 evaluated, 31 expanded
[t=0.00221041s, 28328 KB] f = 1175, 55 evaluated, 32 expanded
[t=0.00231421s, 28328 KB] f = 1183, 62 evaluated, 33 expanded
[t=0.00250056s, 28328 KB] f = 1249, 76 evaluated, 35 expanded
[t=0.00251381s, 28328 KB] f = 1257, 76 evaluated, 36 expanded
[t=0.00252741s, 28328 KB] f = 1262, 76 evaluated, 39 expanded
[t=0.0025635s, 28328 KB] f = 1263, 77 evaluated, 42 expanded
[t=0.00260756s, 28328 KB] f = 1278, 78 evaluated, 45 expanded
[t=0.00265718s, 28328 KB] f = 1285, 80 evaluated, 51 expanded
[t=0.00279893s, 28328 KB] f = 1350, 90 evaluated, 54 expanded
[t=0.00281166s, 28328 KB] f = 1357, 90 evaluated, 55 expanded
[t=0.00282688s, 28328 KB] f = 1358, 90 evaluated, 59 expanded
[t=0.00284028s, 28328 KB] f = 1365, 90 evaluated, 62 expanded
[t=0.00285308s, 28328 KB] f = 1372, 90 evaluated, 64 expanded
[t=0.00286663s, 28328 KB] f = 1373, 91 evaluated, 65 expanded
[t=0.00288443s, 28328 KB] f = 1380, 91 evaluated, 71 expanded
[t=0.00290515s, 28328 KB] f = 1385, 95 evaluated, 75 expanded
[t=0.00304536s, 28328 KB] f = 1386, 105 evaluated, 78 expanded
[t=0.0032173s, 28328 KB] f = 1401, 115 evaluated, 81 expanded
[t=0.00348392s, 28328 KB] f = 1473, 135 evaluated, 87 expanded
[t=0.00350273s, 28328 KB] f = 1480, 136 evaluated, 88 expanded
[t=0.00352748s, 28328 KB] f = 1481, 141 evaluated, 93 expanded
[t=0.00354795s, 28328 KB] f = 1488, 145 evaluated, 97 expanded
[t=0.00356388s, 28328 KB] f = 1496, 147 evaluated, 99 expanded
[t=0.00359254s, 28328 KB] Completely explored state space -- no solution!
[t=0.00360263s, 28328 KB] Actual search time: 0.00226193s
[t=0.00361311s, 28328 KB] Expanded 107 state(s).
[t=0.00361311s, 28328 KB] Reopened 0 state(s).
[t=0.00361311s, 28328 KB] Evaluated 155 state(s).
[t=0.00361311s, 28328 KB] Evaluations: 155
[t=0.00361311s, 28328 KB] Generated 933 state(s).
[t=0.00361311s, 28328 KB] Dead ends: 48 state(s).
[t=0.00361311s, 28328 KB] Expanded until last jump: 99 state(s).
[t=0.00361311s, 28328 KB] Reopened until last jump: 0 state(s).
[t=0.00361311s, 28328 KB] Evaluated until last jump: 147 state(s).
[t=0.00361311s, 28328 KB] Generated until last jump: 861 state(s).
[t=0.00361311s, 28328 KB] Number of registered states: 155
[t=0.00361311s, 28328 KB] Int hash set load factor: 155/256 = 0.605469
[t=0.00361311s, 28328 KB] Int hash set resizes: 8
[t=0.00361311s, 28328 KB] Search time: 0.00237266s
[t=0.00361311s, 28328 KB] Total time: 0.00361311s
Search stopped without finding a solution.
Peak memory: 28328 KB
search exit code: 12

Driver aborting after search

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "predicators/main.py", line 565, in <module>
    main()
  File "predicators/main.py", line 565, in <module>
    main()
  File "predicators/main.py", line 137, in main
    _run_pipeline(env, cogman, stripped_train_tasks, offline_dataset)
  File "predicators/main.py", line 196, in _run_pipeline
    interaction_results, query_cost = _generate_interaction_results(
  File "predicators/main.py", line 262, in _generate_interaction_results
    observed_traj, _, _ = _run_episode(
  File "predicators/main.py", line 497, in _run_episode
    act = cogman.step(obs)
  File "predicators/main.py", line 497, in _run_episode
    act = cogman.step(obs)
  File "/home/njk/Documents/GitHub/predicators/predicators/cogman.py", line 73, in step
    act = self._current_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 280, in _wrapped_policy
    return policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/utils.py", line 1226, in _policy
    cur_option = option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 265, in _wrapped_option_policy
    option = _option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 251, in _option_policy
    return _option_policy(state)
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 229, in _option_policy
    continue
  File "/home/njk/Documents/GitHub/predicators/predicators/explorers/active_sampler_explorer.py", line 229, in _option_policy
    continue
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit

If you suspect this is an IPython 8.1.1 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org

You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.

Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True

