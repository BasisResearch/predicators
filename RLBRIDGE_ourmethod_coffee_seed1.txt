pybullet build time: May 20 2022 19:44:17
Running command: python predicators/main.py --env coffee --approach rl_bridge_policy --experiment_id RLBRIDGE_coffee-ourmethod --debug --polyak_tau 0.004 --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 200 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 300 --timeout 1000 --horizon 300 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 1
Full config:
namespace(active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explore_use_ucb_bonus=True, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_replan_frequency=100, active_sampler_explorer_skip_perfect=True, active_sampler_learning_batch_size=64, active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_explore_length_base=2, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_feature_selection='all', active_sampler_learning_fitted_q_iters=5, active_sampler_learning_init_cycles_to_pursue_goal=1, active_sampler_learning_knn_neighbors=3, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_num_samples=100, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_score_gamma=0.5, active_sampler_learning_use_teacher=True, allow_exclude_goal_predicates=False, allow_interaction_in_demo_tasks=True, allow_state_allclose_comparison_despite_simulator_state=False, approach='rl_bridge_policy', approach_dir='saved_approaches', approach_wrapper=None, backchaining_check_intermediate_harmlessness=False, bilevel_plan_without_sim=True, blocks_block_size=0.045, blocks_holding_goals=False, blocks_num_blocks_test=[5, 6], blocks_num_blocks_train=[3, 4], bridge_policy='learned_ldl', bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, bumpy_cover_num_bumps=2, bumpy_cover_right_targets=False, bumpy_cover_spaces_per_bump=1, cluster_and_intersect_min_datastore_fraction=0.0, cluster_and_intersect_prederror_max_groundings=10, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_precon_size_weight=0.01, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, clustering_learner_false_pos_weight=1, clustering_learner_true_pos_weight=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_num_cans_test=10, cluttered_table_num_cans_train=5, cluttered_table_place_goal_conditioned_sampling=True, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, cnn_regressor_clip_gradients=True, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_gradient_clip_value=5, cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_max_itr=500, coffee_jug_init_rot_amt=2.0943951023931953, coffee_num_cups_test=[1], coffee_num_cups_train=[1], compute_sidelining_objective_value=False, cover_block_widths=[0.1, 0.07], cover_initial_holding_prob=0.75, cover_multistep_action_limits=[-inf, inf], cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_degenerate_oracle_samplers=False, cover_multistep_goal_conditioned_sampling=False, cover_multistep_max_hr_placements=100, cover_multistep_max_tb_placements=100, cover_multistep_thr_percent=0.4, cover_num_blocks=2, cover_num_targets=2, cover_target_widths=[0.05, 0.03], crash_on_failure=False, data_dir='saved_datasets', data_orderings_to_search=1, demonstrator='oracle', disable_harmlessness_check=False, doorknobs_target_value=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, doors_max_obstacles_per_room=3, doors_max_room_exists_frac=0.75, doors_min_obstacles_per_room=0, doors_min_room_exists_frac=0.25, doors_room_map_size=2, enable_harmless_op_pruning=False, env='coffee', eval_trajectories_dir='eval_trajectories', excluded_predicates='', execution_monitor='trivial', exit_garage_clear_refine_penalty=0, exit_garage_max_num_obstacles=3, exit_garage_min_num_obstacles=2, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, experiment_id='RLBRIDGE_coffee-ourmethod', explorer='maple_q', failure_video_mode='longest_only', get_arg_specific_settings=<classmethod object at 0x7f5c570516d0>, glib_max_goal_size=1, glib_min_goal_size=1, glib_num_babbles=10, gnn_batch_size=128, gnn_do_normalization=False, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_num_epochs=25000, gnn_num_message_passing=3, gnn_option_policy_shooting_max_samples=100, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_solve_with_shooting=True, gnn_use_validation_set=True, gnn_weight_decay=0, grammar_search_bf_weight=1, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_clustering_gmm_num_components=10, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_energy_based_temperature=10.0, grammar_search_euclidean_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_expected_nodes_allow_noops=True, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_false_pos_weight=1, grammar_search_gbfs_num_evals=1000, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_includes_givens=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_heuristic_based_weight=10.0, grammar_search_hill_climbing_depth=0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_max_predicates=200, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_operator_complexity_weight=0.0, grammar_search_parallelize_hill_climbing=False, grammar_search_pred_clusterer='oracle', grammar_search_pred_complexity_weight=0.0001, grammar_search_pred_selection_approach='score_optimization', grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_search_algorithm='hill_climbing', grammar_search_suspicious_state_penalty=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_true_pos_weight=10, grammar_search_use_handcoded_debug_grammar=False, grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_proposal_use_debug=False, greedy_lookahead_max_num_resamples=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, grid_row_num_cells=5, gridworld_num_cols=4, gridworld_num_rows=4, handmade_demo_filename='', horizon=300, ikfast_max_attempts=inf, ikfast_max_candidates=100, ikfast_max_distance=inf, ikfast_max_time=0.05, ikfast_norm=inf, image_dir='images', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_grid_num_ticks_per_dim=100, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, included_options='', interactive_num_ensemble_members=10, interactive_num_requests_per_cycle=5, interactive_query_policy='threshold', interactive_random_query_prob=0.5, interactive_score_function='entropy', interactive_score_threshold=0.05, kitchen_goals='all', kitchen_randomize_init_state=False, kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_use_perfect_samplers=False, learning_rate=0.001, llm_model_name='text-curie-001', llm_num_completions=1, llm_openai_max_response_tokens=700, llm_temperature=0.5, llm_use_cache_only=False, load_approach=False, load_atoms=False, load_data=False, load_experiment_id='', log_dir='logs', log_file='', loglevel=10, make_cogman_videos=False, make_demo_images=False, make_demo_videos=False, make_failure_videos=False, make_interaction_videos=False, make_test_videos=False, max_initial_demos=0, max_num_steps_interaction_request=300, max_num_steps_option_rollout=1000, max_rejection_sampling_tries=100, metacontroller_max_samples=100, min_data_for_nsrt=0, min_epsilon=0.05, min_perc_data_for_nsrt=0, mlp_classifier_balance_data=True, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_n_iter_no_change=5000, mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_max_itr=100000, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_open_door_refine_penalty=0, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_pos_reward=0, nsrt_rl_reward_epsilon=0.01, nsrt_rl_valid_reward_steps_threshold=10, num_doors=2, num_online_learning_cycles=200, num_test_tasks=10, num_train_tasks=1, offline_data_bilevel_plan_without_sim=None, offline_data_max_skeletons_optimized=-1, offline_data_method='demo', offline_data_num_replays=500, offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', online_learning_max_novelty_count=0, online_learning_max_transitions=inf, online_nsrt_learning_requests_per_cycle=5, option_learner='no_learning', option_learning_action_converter='identity', option_model_name='oracle', option_model_terminate_on_repeat=True, option_model_use_gui=False, painting_goal_receptacles='box_and_shelf', painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_max_objs_in_goal=inf, painting_num_objs_test=[3, 4], painting_num_objs_train=[2, 3], painting_raise_environment_failure=True, pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_min_want_locs=2, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_min_num_locs=3, pddl_forest_procedural_test_max_size=12, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_train_min_size=8, pddl_gripper_procedural_test_max_num_balls=2, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_min_num_rooms=3, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_min_passengers=1, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_max_locs=30, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_min_nuts=1, perceiver='trivial', pg3_add_condition_allow_new_vars=True, pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_heuristic='policy_guided', pg3_init_base_env=None, pg3_init_policy=None, pg3_max_analogies=5, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', playroom_num_blocks_test=[3], playroom_num_blocks_train=[3], pnad_search_timeout=10.0, pnad_search_without_del=False, polyak_tau=0.004, polyak_true=True, predicate_classifier_model='mlp', predicate_knn_classifier_n_neighbors=1, predicate_mlp_classifier_init='default', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, pretrained_model_prompt_cache_dir='pretrained_model_cache', pretty_print_when_loading=False, pybullet_birrt_extend_num_interp=10, pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_camera_height=180, pybullet_camera_width=335, pybullet_control_mode='position', pybullet_draw_debug=False, pybullet_ik_tol=0.001, pybullet_max_ik_iters=100, pybullet_max_vel_norm=0.05, pybullet_robot='fetch', pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7f5c57055310>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), pybullet_sim_steps_per_action=20, pytorch_train_print_every=1000, random_bridge=False, random_options_max_tries=100, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, refinement_data_low_level_search_timeout=5, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_estimation_num_skeletons_generated=8, refinement_estimator='oracle', regional_bumpy_cover_include_impossible_nsrt=False, render_state_dpi=150, repeated_nextto_nextto_thresh=0.5, repeated_nextto_num_dots=15, restart_learning=False, results_dir='results', rl_rwd_shape=False, rnt_painting_max_objs_in_goal=2, rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_num_objs_train=[8, 9, 10], same_levels=True, sampler_disable_classifier=False, sampler_learner='oracle', sampler_learning_max_negative_data=100000, sampler_learning_regressor_model='neural_gaussian', sampler_learning_use_goals=False, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, satellites_num_obj_test=[4, 5], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_sat_train=[2, 3], save_atoms=False, screws_num_screws_test=[25, 30], screws_num_screws_train=[15, 20], seed=1, segmenter='oracle', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_check_static_object_changes=False, sesame_grounder='naive', sesame_max_samples_per_step=10, sesame_max_skeletons_optimized=50, sesame_propagate_failures='immediately', sesame_static_object_change_tol=0.001, sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, skill_competence_model='optimistic', skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_max_train_iters=1000, skill_competence_model_num_em_iters=3, skill_competence_model_optimistic_recency_size=5, skill_competence_model_optimistic_window_size=5, skip_until_cycle=-1, sokoban_gym_name='Sokoban-v0', stick_button_disable_angles=True, stick_button_holder_scale=0.1, stick_button_num_buttons_test=[3, 4], stick_button_num_buttons_train=[1, 2], sticky_table_num_sticky_tables=1, sticky_table_num_tables=5, sticky_table_pick_success_prob=1.0, sticky_table_place_ball_fall_prob=1.0, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, strips_learner='oracle', teacher_dataset_num_examples=1, test_doors_room_map_size=5, test_env_seed_offset=10000, test_grid_row_num_cells=10, test_task_json_dir=None, timeout=1000.0, tools_num_contraptions_test=[3], tools_num_contraptions_train=[2], tools_num_items_test=[2, 3], tools_num_items_train=[2], use_callplanner=True, use_epsilon_annealing=True, use_gui=False, use_obj_centric=True, use_old_exploration=False, use_torch_gpu=False, video_dir='videos', video_fps=2, vlm_model_name='gemini-pro-vision', vlm_trajs_folder_name='', weight_decay=0)
Git commit hash: 3d3b02dcb4250befa9d7f249adeb541169c8303e
/home/njk/miniconda3/envs/predicators/lib/python3.8/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 2.349959686398506e-06})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 1131 datapoints
Loss: 0.00110, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss: 0.00000, iter: 24000/100000
Loss: 0.00000, iter: 25000/100000
Loss: 0.00000, iter: 26000/100000
Loss: 0.00000, iter: 27000/100000
Loss: 0.00000, iter: 28000/100000
Loss: 0.00000, iter: 29000/100000
Loss: 0.00000, iter: 30000/100000
Loss: 0.00000, iter: 31000/100000
Loss: 0.00000, iter: 32000/100000
Loss: 0.00000, iter: 33000/100000
Loss: 0.00000, iter: 34000/100000
Loss: 0.00000, iter: 35000/100000
Loss: 0.00000, iter: 36000/100000
Loss: 0.00000, iter: 37000/100000
Loss: 0.00000, iter: 38000/100000
Loss: 0.00000, iter: 39000/100000
Loss: 0.00000, iter: 40000/100000
Loss: 0.00000, iter: 41000/100000
Loss: 0.00000, iter: 42000/100000
Loss: 0.00000, iter: 43000/100000
Loss: 0.00000, iter: 44000/100000
Loss: 0.00000, iter: 45000/100000
Loss: 0.00000, iter: 46000/100000
Loss: 0.00000, iter: 47000/100000
Loss: 0.00000, iter: 48000/100000
Loss did not improve after 5000 itrs, terminating at itr 48881.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1505, 'query_cost': 0.0, 'learning_time': 37.01986952603329})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 2294 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10525.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3010, 'query_cost': 0.0, 'learning_time': 50.598793904995546})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 3478 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss did not improve after 5000 itrs, terminating at itr 16880.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4515, 'query_cost': 0.0, 'learning_time': 72.2781375470804})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 4660 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10876.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6020, 'query_cost': 0.0, 'learning_time': 91.13718120707199})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 5800 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6766.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7525, 'query_cost': 0.0, 'learning_time': 110.79174140107352})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 6980 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6234.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9030, 'query_cost': 0.0, 'learning_time': 131.78010335110594})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 8142 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5512.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10535, 'query_cost': 0.0, 'learning_time': 154.61257504310925})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 9328 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5867.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12040, 'query_cost': 0.0, 'learning_time': 180.32500985113438})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 10495 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5614.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13545, 'query_cost': 0.0, 'learning_time': 209.1375043921871})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 11664 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5992.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15050, 'query_cost': 0.0, 'learning_time': 240.13135753013194})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 12861 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6034.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16555, 'query_cost': 0.0, 'learning_time': 274.17683251411654})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 14055 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5706.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 18060, 'query_cost': 0.0, 'learning_time': 311.95042218407616})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 15196 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6773.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19565, 'query_cost': 0.0, 'learning_time': 351.35112738609314})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 16343 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6324.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 21070, 'query_cost': 0.0, 'learning_time': 393.36133653414436})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 17501 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5699.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22575, 'query_cost': 0.0, 'learning_time': 436.78432944417})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 18709 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6066.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 24080, 'query_cost': 0.0, 'learning_time': 483.33591904619243})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 19882 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6558.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25585, 'query_cost': 0.0, 'learning_time': 533.0585591932759})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 21065 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10392.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 27090, 'query_cost': 0.0, 'learning_time': 588.7220626282506})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 22212 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6324.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28595, 'query_cost': 0.0, 'learning_time': 643.8576500822091})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 23386 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6146.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 30100, 'query_cost': 0.0, 'learning_time': 701.4701500171795})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 24547 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5584.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31605, 'query_cost': 0.0, 'learning_time': 761.1581092551351})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 25738 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6135.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 33110, 'query_cost': 0.0, 'learning_time': 825.3022903681267})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 26918 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6421.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34615, 'query_cost': 0.0, 'learning_time': 890.5069837641204})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 28077 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6384.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 36120, 'query_cost': 0.0, 'learning_time': 958.2685234131059})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 29207 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6180.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 37625, 'query_cost': 0.0, 'learning_time': 1031.5610999960918})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 30292 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6143.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 39130, 'query_cost': 0.0, 'learning_time': 1104.8162065121578})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 31404 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6747.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 40635, 'query_cost': 0.0, 'learning_time': 1182.8541901471326})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 32484 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6633.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 42140, 'query_cost': 0.0, 'learning_time': 1261.6354110741522})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 33532 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6016.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 43645, 'query_cost': 0.0, 'learning_time': 1342.1619084341219})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 34649 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6679.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 45150, 'query_cost': 0.0, 'learning_time': 1426.0151766191702})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 35727 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6271.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 46655, 'query_cost': 0.0, 'learning_time': 1513.265006904141})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 36845 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6112.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 48160, 'query_cost': 0.0, 'learning_time': 1601.5558953341097})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 37924 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6600.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 49665, 'query_cost': 0.0, 'learning_time': 1692.0989941151347})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 39019 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6839.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0]
Tasks solved: 5 / 10
Average time for successes: 1.54311 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.5431107738986611, 'avg_ref_cost': 23.259999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 51170, 'query_cost': 0.0, 'learning_time': 1788.4236302811187})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 40023 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6805.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 52675, 'query_cost': 0.0, 'learning_time': 1884.7345548272133})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 41171 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6497.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 54180, 'query_cost': 0.0, 'learning_time': 1983.8781844322802})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 42396 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6721.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 55685, 'query_cost': 0.0, 'learning_time': 2087.013536872226})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 43501 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6566.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 57190, 'query_cost': 0.0, 'learning_time': 2189.4324001182104})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 44734 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6323.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 58695, 'query_cost': 0.0, 'learning_time': 2295.514594710199})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 45890 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 60200, 'query_cost': 0.0, 'learning_time': 2404.1376764932647})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 46981 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6522.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 61705, 'query_cost': 0.0, 'learning_time': 2518.5531115062768})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 48211 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6478.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 63210, 'query_cost': 0.0, 'learning_time': 2635.461683253292})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 49162 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6511.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 5.0
CUMULATIVE NUM SOLVED: 5.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 64715, 'query_cost': 0.0, 'learning_time': 2752.932693301351})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 50353 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6448.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0]
Tasks solved: 5 / 10
Average time for successes: 1.13226 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.1322564797243104, 'avg_ref_cost': 22.490000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 66220, 'query_cost': 0.0, 'learning_time': 2875.0894658883335})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 51220 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0]
Tasks solved: 8 / 10
Average time for successes: 1.11109 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.1110859027248807, 'avg_ref_cost': 11.15625, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 67497, 'query_cost': 0.0, 'learning_time': 2996.628325263271})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 52078 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5223.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 68757, 'query_cost': 0.0, 'learning_time': 3122.597116977209})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 53359 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8800.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 70262, 'query_cost': 0.0, 'learning_time': 3249.985944538261})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 54522 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5208.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 71767, 'query_cost': 0.0, 'learning_time': 3376.5093124762643})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 55683 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7613.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 28.0
CUMULATIVE NUM SOLVED: 28.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0]
Tasks solved: 10 / 10
Average time for successes: 0.29077 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.2907688796869479, 'avg_ref_cost': 3.8600000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 73272, 'query_cost': 0.0, 'learning_time': 3510.885081603192})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 56586 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5085.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 38.0
CUMULATIVE NUM SOLVED: 38.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0]
Tasks solved: 10 / 10
Average time for successes: 0.27493 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.2749289202154614, 'avg_ref_cost': 3.995, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 74586, 'query_cost': 0.0, 'learning_time': 3643.447496505105})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 57712 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5076.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 48.0
CUMULATIVE NUM SOLVED: 48.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0]
Tasks solved: 10 / 10
Average time for successes: 0.32233 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.3223308006767184, 'avg_ref_cost': 4.325, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 76091, 'query_cost': 0.0, 'learning_time': 3779.943277128041})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 58618 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5157.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 58.0
CUMULATIVE NUM SOLVED: 58.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0]
Tasks solved: 10 / 10
Average time for successes: 0.50215 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.5021503677940927, 'avg_ref_cost': 5.42, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 77387, 'query_cost': 0.0, 'learning_time': 3918.9632212721044})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 59507 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5123.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0]
Tasks solved: 10 / 10
Average time for successes: 0.55048 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.5504826064105146, 'avg_ref_cost': 5.815, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 78647, 'query_cost': 0.0, 'learning_time': 4058.164919613162})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 60425 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 78.0
CUMULATIVE NUM SOLVED: 78.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0]
Tasks solved: 10 / 10
Average time for successes: 0.77469 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.7746927387663163, 'avg_ref_cost': 5.21, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 79913, 'query_cost': 0.0, 'learning_time': 4198.35289629607})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 61527 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 88.0
CUMULATIVE NUM SOLVED: 88.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0]
Tasks solved: 10 / 10
Average time for successes: 0.49890 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.49890353679656985, 'avg_ref_cost': 5.430000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 81418, 'query_cost': 0.0, 'learning_time': 4341.461450983072})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 62400 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5109.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0]
Tasks solved: 10 / 10
Average time for successes: 0.41601 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 0.41601129341870546, 'avg_ref_cost': 4.96, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 82677, 'query_cost': 0.0, 'learning_time': 4488.343184394063})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 63289 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5151.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 83937, 'query_cost': 0.0, 'learning_time': 4638.116520366049})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 64384 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5216.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 85442, 'query_cost': 0.0, 'learning_time': 4786.056439670152})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 65498 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.01561, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 86947, 'query_cost': 0.0, 'learning_time': 4937.919549429207})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 66663 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 88452, 'query_cost': 0.0, 'learning_time': 5093.858948250301})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 67761 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 89957, 'query_cost': 0.0, 'learning_time': 5252.794527412276})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 68910 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 91462, 'query_cost': 0.0, 'learning_time': 5415.452790911309})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 70045 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5089.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 92967, 'query_cost': 0.0, 'learning_time': 5580.854204094387})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 71175 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5270.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 94472, 'query_cost': 0.0, 'learning_time': 5743.379436177434})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 72281 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5200.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 95977, 'query_cost': 0.0, 'learning_time': 5913.9839489744045})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 73522 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.01561, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 97482, 'query_cost': 0.0, 'learning_time': 6085.1378519473365})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 74804 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 98987, 'query_cost': 0.0, 'learning_time': 6262.399140103371})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 76070 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 100492, 'query_cost': 0.0, 'learning_time': 6441.086770575377})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 77308 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5150.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 101997, 'query_cost': 0.0, 'learning_time': 6621.902075868333})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 78520 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 103502, 'query_cost': 0.0, 'learning_time': 6806.067068321281})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 79821 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5472.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 105007, 'query_cost': 0.0, 'learning_time': 6993.264361940324})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 81105 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 106512, 'query_cost': 0.0, 'learning_time': 7182.254725338309})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 82370 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5196.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 108017, 'query_cost': 0.0, 'learning_time': 7374.656031367369})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 83457 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6906.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 98.0
CUMULATIVE NUM SOLVED: 98.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 109522, 'query_cost': 0.0, 'learning_time': 7572.558498939383})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 84568 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10971.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 103.0
CUMULATIVE NUM SOLVED: 103.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0]
Tasks solved: 5 / 10
Average time for successes: 0.20024 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 0.20023651486262678, 'avg_ref_cost': 18.04, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 111027, 'query_cost': 0.0, 'learning_time': 7774.7499271433335})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 85730 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5047.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 106.0
CUMULATIVE NUM SOLVED: 106.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0]
Tasks solved: 3 / 10
Average time for successes: 0.28442 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 0.2844165948918089, 'avg_ref_cost': 39.06666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 112532, 'query_cost': 0.0, 'learning_time': 7976.142953805276})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 86879 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8682.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 106.0
CUMULATIVE NUM SOLVED: 106.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 114037, 'query_cost': 0.0, 'learning_time': 8182.974587340257})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 88031 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8456.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 106.0
CUMULATIVE NUM SOLVED: 106.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 115542, 'query_cost': 0.0, 'learning_time': 8393.537483302294})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 89119 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7277.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 106.0
CUMULATIVE NUM SOLVED: 106.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 117047, 'query_cost': 0.0, 'learning_time': 8602.267317932332})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 90239 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6500.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0]
Tasks solved: 1 / 10
Average time for successes: 0.28119 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.2811920060776174, 'avg_ref_cost': 138.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 118552, 'query_cost': 0.0, 'learning_time': 8815.78737185034})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 91351 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11803.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 120057, 'query_cost': 0.0, 'learning_time': 9033.833967518294})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 92450 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8475.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 121562, 'query_cost': 0.0, 'learning_time': 9253.235030654352})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 93566 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5989.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 123067, 'query_cost': 0.0, 'learning_time': 9472.494499350432})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 94668 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5742.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 124572, 'query_cost': 0.0, 'learning_time': 9695.580834737513})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 95777 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.01562, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00001, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15018.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 126077, 'query_cost': 0.0, 'learning_time': 9923.456452056533})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 96907 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6604.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 127582, 'query_cost': 0.0, 'learning_time': 10153.958493288606})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 98014 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7362.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 129087, 'query_cost': 0.0, 'learning_time': 10379.768486874644})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 99156 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5091.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 130592, 'query_cost': 0.0, 'learning_time': 10607.251313032582})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 100214 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5274.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 107.0
CUMULATIVE NUM SOLVED: 107.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 132097, 'query_cost': 0.0, 'learning_time': 10838.685426253593})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 101330 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6530.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 108.0
CUMULATIVE NUM SOLVED: 108.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0]
Tasks solved: 1 / 10
Average time for successes: 0.54701 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.5470056107733399, 'avg_ref_cost': 140.35, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 133602, 'query_cost': 0.0, 'learning_time': 11079.176951201516})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 102378 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5300.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 108.0
CUMULATIVE NUM SOLVED: 108.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 135107, 'query_cost': 0.0, 'learning_time': 11322.296935552498})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 103438 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5445.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 109.0
CUMULATIVE NUM SOLVED: 109.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0]
Tasks solved: 1 / 10
Average time for successes: 0.69799 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.6979876008117571, 'avg_ref_cost': 141.25, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 136612, 'query_cost': 0.0, 'learning_time': 11565.136877889512})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 104594 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6587.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 109.0
CUMULATIVE NUM SOLVED: 109.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 138117, 'query_cost': 0.0, 'learning_time': 11811.864606180578})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 105688 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5164.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 109.0
CUMULATIVE NUM SOLVED: 109.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 139622, 'query_cost': 0.0, 'learning_time': 12057.365854560514})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 106774 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8178.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 109.0
CUMULATIVE NUM SOLVED: 109.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 141127, 'query_cost': 0.0, 'learning_time': 12312.520877382485})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 107916 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8830.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 110.0
CUMULATIVE NUM SOLVED: 110.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0]
Tasks solved: 1 / 10
Average time for successes: 1.28276 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.282758585177362, 'avg_ref_cost': 144.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 142632, 'query_cost': 0.0, 'learning_time': 12569.523939368431})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 109037 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7242.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 110.0
CUMULATIVE NUM SOLVED: 110.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 144137, 'query_cost': 0.0, 'learning_time': 12829.425542699406})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 110159 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5539.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 110.0
CUMULATIVE NUM SOLVED: 110.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 145642, 'query_cost': 0.0, 'learning_time': 13089.697190970415})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 111293 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5148.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 110.0
CUMULATIVE NUM SOLVED: 110.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 147147, 'query_cost': 0.0, 'learning_time': 13353.135387704358})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 112422 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5025.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 110.0
CUMULATIVE NUM SOLVED: 110.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 148652, 'query_cost': 0.0, 'learning_time': 13614.671816851362})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__99.pkl


ONLINE LEARNING CYCLE 100

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 505 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 113586 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5205.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (100,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0]
Tasks solved: 1 / 10
Average time for successes: 0.81453 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.8145348380785435, 'avg_ref_cost': 142.25, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 150157, 'query_cost': 0.0, 'learning_time': 13889.188639333355})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__100.pkl


ONLINE LEARNING CYCLE 101

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 510 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 114716 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5451.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (101,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 151662, 'query_cost': 0.0, 'learning_time': 14156.422863364336})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__101.pkl


ONLINE LEARNING CYCLE 102

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 515 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 115843 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6084.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (102,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 153167, 'query_cost': 0.0, 'learning_time': 14429.579319799319})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__102.pkl


ONLINE LEARNING CYCLE 103

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 520 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 116984 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10707.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (103,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 154672, 'query_cost': 0.0, 'learning_time': 14710.143311009277})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__103.pkl


ONLINE LEARNING CYCLE 104

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 525 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 118085 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7439.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (104,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 156177, 'query_cost': 0.0, 'learning_time': 14991.992778330226})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__104.pkl


ONLINE LEARNING CYCLE 105

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 530 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 119164 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8311.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (105,)
CUMULATIVE NUM SOLVED: 114.0
CUMULATIVE NUM SOLVED: 114.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0]
Tasks solved: 3 / 10
Average time for successes: 0.36896 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 0.36896203198314953, 'avg_ref_cost': 39.28333333333333, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 157682, 'query_cost': 0.0, 'learning_time': 15281.246711083222})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__105.pkl


ONLINE LEARNING CYCLE 106

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 535 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 120276 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6200.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (106,)
CUMULATIVE NUM SOLVED: 114.0
CUMULATIVE NUM SOLVED: 114.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 159187, 'query_cost': 0.0, 'learning_time': 15558.867350998218})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__106.pkl


ONLINE LEARNING CYCLE 107

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 540 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 121341 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5362.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (107,)
CUMULATIVE NUM SOLVED: 114.0
CUMULATIVE NUM SOLVED: 114.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 160692, 'query_cost': 0.0, 'learning_time': 15835.50505189423})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__107.pkl


ONLINE LEARNING CYCLE 108

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 545 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 122482 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5233.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (108,)
CUMULATIVE NUM SOLVED: 115.0
CUMULATIVE NUM SOLVED: 115.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0]
Tasks solved: 1 / 10
Average time for successes: 0.28566 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.2856610375456512, 'avg_ref_cost': 138.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 162197, 'query_cost': 0.0, 'learning_time': 16114.89710790629})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__108.pkl


ONLINE LEARNING CYCLE 109

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 550 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 123611 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.01556, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5528.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (109,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0]
Tasks solved: 2 / 10
Average time for successes: 0.28373 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 0.28372955101076514, 'avg_ref_cost': 63.85, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 163702, 'query_cost': 0.0, 'learning_time': 16404.753560102195})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__109.pkl


ONLINE LEARNING CYCLE 110

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 555 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 124721 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5336.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (110,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 165207, 'query_cost': 0.0, 'learning_time': 16691.221265090164})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__110.pkl


ONLINE LEARNING CYCLE 111

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 560 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 125835 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5080.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (111,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 166712, 'query_cost': 0.0, 'learning_time': 16985.75797295617})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__111.pkl


ONLINE LEARNING CYCLE 112

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 565 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 126967 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5191.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (112,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 168217, 'query_cost': 0.0, 'learning_time': 17282.179927659105})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__112.pkl


ONLINE LEARNING CYCLE 113

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 570 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 128108 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5156.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (113,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 169722, 'query_cost': 0.0, 'learning_time': 17577.363376624067})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__113.pkl


ONLINE LEARNING CYCLE 114

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 575 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 129236 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5111.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (114,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 171227, 'query_cost': 0.0, 'learning_time': 17872.607037710026})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__114.pkl


ONLINE LEARNING CYCLE 115

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 580 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 130367 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5081.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (115,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 172732, 'query_cost': 0.0, 'learning_time': 18184.380316656083})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__115.pkl


ONLINE LEARNING CYCLE 116

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 585 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 131481 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5948.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (116,)
CUMULATIVE NUM SOLVED: 117.0
CUMULATIVE NUM SOLVED: 117.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 174237, 'query_cost': 0.0, 'learning_time': 18485.431474096025})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__116.pkl


ONLINE LEARNING CYCLE 117

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 590 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 132638 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9532.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (117,)
CUMULATIVE NUM SOLVED: 118.0
CUMULATIVE NUM SOLVED: 118.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0]
Tasks solved: 1 / 10
Average time for successes: 0.18441 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18440975586418062, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 175742, 'query_cost': 0.0, 'learning_time': 18799.601217861986})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__117.pkl


ONLINE LEARNING CYCLE 118

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 595 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 133797 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6159.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (118,)
CUMULATIVE NUM SOLVED: 118.0
CUMULATIVE NUM SOLVED: 118.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 177247, 'query_cost': 0.0, 'learning_time': 19110.705832215026})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__118.pkl


ONLINE LEARNING CYCLE 119

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 600 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 134971 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6825.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (119,)
CUMULATIVE NUM SOLVED: 118.0
CUMULATIVE NUM SOLVED: 118.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 178752, 'query_cost': 0.0, 'learning_time': 19418.12053866405})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__119.pkl


ONLINE LEARNING CYCLE 120

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 605 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 136135 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6623.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (120,)
CUMULATIVE NUM SOLVED: 119.0
CUMULATIVE NUM SOLVED: 119.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0]
Tasks solved: 1 / 10
Average time for successes: 0.12766 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12766127451322973, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 180257, 'query_cost': 0.0, 'learning_time': 19754.59158224007})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__120.pkl


ONLINE LEARNING CYCLE 121

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 610 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 137301 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6442.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (121,)
CUMULATIVE NUM SOLVED: 120.0
CUMULATIVE NUM SOLVED: 120.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0]
Tasks solved: 1 / 10
Average time for successes: 0.28592 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.2859198992373422, 'avg_ref_cost': 138.1, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 181762, 'query_cost': 0.0, 'learning_time': 20073.118305183132})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__121.pkl


ONLINE LEARNING CYCLE 122

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 615 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 138467 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8834.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (122,)
CUMULATIVE NUM SOLVED: 120.0
CUMULATIVE NUM SOLVED: 120.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0, 120.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0, 120.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 183267, 'query_cost': 0.0, 'learning_time': 20399.243568124133})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__122.pkl


ONLINE LEARNING CYCLE 123

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 620 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 139641 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11333.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (123,)
CUMULATIVE NUM SOLVED: 122.0
CUMULATIVE NUM SOLVED: 122.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0, 120.0, 122.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.04, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.07200000000000001, 0.11199999999999999, 0.152, 0.192, 0.23199999999999998, 0.272, 0.312, 0.35200000000000004, 0.392, 0.392, 0.392, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.37200000000000005, 0.35200000000000004, 0.32, 0.32, 0.32, 0.32, 0.28, 0.26, 0.23199999999999998, 0.192, 0.152, 0.11199999999999999, 0.07600000000000001, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.027999999999999997, 0.02, 0.02, 0.02, 0.02, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.04, 0.04, 0.04, 0.04, 0.04, 0.036000000000000004, 0.036000000000000004, 0.032, 0.036000000000000004, 0.036000000000000004, 0.036000000000000004, 0.036, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.8, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.3, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 10.0, 18.0, 18.0, 18.0, 18.0, 28.0, 38.0, 48.0, 58.0, 68.0, 78.0, 88.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 103.0, 106.0, 106.0, 106.0, 106.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 107.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 111.0, 111.0, 111.0, 111.0, 111.0, 114.0, 114.0, 114.0, 115.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 117.0, 118.0, 118.0, 118.0, 119.0, 120.0, 120.0, 122.0]
Tasks solved: 2 / 10
Average time for successes: 0.45183 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 0.4518272531568073, 'avg_ref_cost': 64.65, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 184772, 'query_cost': 0.0, 'learning_time': 20731.00143319613})
Wrote out test results to results/coffee__rl_bridge_policy__1______RLBRIDGE_coffee-ourmethod__123.pkl


ONLINE LEARNING CYCLE 124

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 625 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 140822 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12374.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
