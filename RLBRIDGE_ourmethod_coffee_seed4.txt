pybullet build time: May 20 2022 19:44:17
Running command: python predicators/main.py --env coffee --approach rl_bridge_policy --experiment_id RLBRIDGE_coffee-ourmethod --debug --polyak_tau 0.004 --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 200 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 300 --timeout 1000 --horizon 300 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 4
Full config:
namespace(active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explore_use_ucb_bonus=True, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_replan_frequency=100, active_sampler_explorer_skip_perfect=True, active_sampler_learning_batch_size=64, active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_explore_length_base=2, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_feature_selection='all', active_sampler_learning_fitted_q_iters=5, active_sampler_learning_init_cycles_to_pursue_goal=1, active_sampler_learning_knn_neighbors=3, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_num_samples=100, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_score_gamma=0.5, active_sampler_learning_use_teacher=True, allow_exclude_goal_predicates=False, allow_interaction_in_demo_tasks=True, allow_state_allclose_comparison_despite_simulator_state=False, approach='rl_bridge_policy', approach_dir='saved_approaches', approach_wrapper=None, backchaining_check_intermediate_harmlessness=False, bilevel_plan_without_sim=True, blocks_block_size=0.045, blocks_holding_goals=False, blocks_num_blocks_test=[5, 6], blocks_num_blocks_train=[3, 4], bridge_policy='learned_ldl', bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, bumpy_cover_num_bumps=2, bumpy_cover_right_targets=False, bumpy_cover_spaces_per_bump=1, cluster_and_intersect_min_datastore_fraction=0.0, cluster_and_intersect_prederror_max_groundings=10, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_precon_size_weight=0.01, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, clustering_learner_false_pos_weight=1, clustering_learner_true_pos_weight=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_num_cans_test=10, cluttered_table_num_cans_train=5, cluttered_table_place_goal_conditioned_sampling=True, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, cnn_regressor_clip_gradients=True, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_gradient_clip_value=5, cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_max_itr=500, coffee_jug_init_rot_amt=2.0943951023931953, coffee_num_cups_test=[1], coffee_num_cups_train=[1], compute_sidelining_objective_value=False, cover_block_widths=[0.1, 0.07], cover_initial_holding_prob=0.75, cover_multistep_action_limits=[-inf, inf], cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_degenerate_oracle_samplers=False, cover_multistep_goal_conditioned_sampling=False, cover_multistep_max_hr_placements=100, cover_multistep_max_tb_placements=100, cover_multistep_thr_percent=0.4, cover_num_blocks=2, cover_num_targets=2, cover_target_widths=[0.05, 0.03], crash_on_failure=False, data_dir='saved_datasets', data_orderings_to_search=1, demonstrator='oracle', disable_harmlessness_check=False, doorknobs_target_value=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, doors_max_obstacles_per_room=3, doors_max_room_exists_frac=0.75, doors_min_obstacles_per_room=0, doors_min_room_exists_frac=0.25, doors_room_map_size=2, enable_harmless_op_pruning=False, env='coffee', eval_trajectories_dir='eval_trajectories', excluded_predicates='', execution_monitor='trivial', exit_garage_clear_refine_penalty=0, exit_garage_max_num_obstacles=3, exit_garage_min_num_obstacles=2, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, experiment_id='RLBRIDGE_coffee-ourmethod', explorer='maple_q', failure_video_mode='longest_only', get_arg_specific_settings=<classmethod object at 0x7f171477e6d0>, glib_max_goal_size=1, glib_min_goal_size=1, glib_num_babbles=10, gnn_batch_size=128, gnn_do_normalization=False, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_num_epochs=25000, gnn_num_message_passing=3, gnn_option_policy_shooting_max_samples=100, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_solve_with_shooting=True, gnn_use_validation_set=True, gnn_weight_decay=0, grammar_search_bf_weight=1, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_clustering_gmm_num_components=10, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_energy_based_temperature=10.0, grammar_search_euclidean_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_expected_nodes_allow_noops=True, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_false_pos_weight=1, grammar_search_gbfs_num_evals=1000, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_includes_givens=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_heuristic_based_weight=10.0, grammar_search_hill_climbing_depth=0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_max_predicates=200, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_operator_complexity_weight=0.0, grammar_search_parallelize_hill_climbing=False, grammar_search_pred_clusterer='oracle', grammar_search_pred_complexity_weight=0.0001, grammar_search_pred_selection_approach='score_optimization', grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_search_algorithm='hill_climbing', grammar_search_suspicious_state_penalty=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_true_pos_weight=10, grammar_search_use_handcoded_debug_grammar=False, grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_proposal_use_debug=False, greedy_lookahead_max_num_resamples=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, grid_row_num_cells=5, gridworld_num_cols=4, gridworld_num_rows=4, handmade_demo_filename='', horizon=300, ikfast_max_attempts=inf, ikfast_max_candidates=100, ikfast_max_distance=inf, ikfast_max_time=0.05, ikfast_norm=inf, image_dir='images', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_grid_num_ticks_per_dim=100, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, included_options='', interactive_num_ensemble_members=10, interactive_num_requests_per_cycle=5, interactive_query_policy='threshold', interactive_random_query_prob=0.5, interactive_score_function='entropy', interactive_score_threshold=0.05, kitchen_goals='all', kitchen_randomize_init_state=False, kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_use_perfect_samplers=False, learning_rate=0.001, llm_model_name='text-curie-001', llm_num_completions=1, llm_openai_max_response_tokens=700, llm_temperature=0.5, llm_use_cache_only=False, load_approach=False, load_atoms=False, load_data=False, load_experiment_id='', log_dir='logs', log_file='', loglevel=10, make_cogman_videos=False, make_demo_images=False, make_demo_videos=False, make_failure_videos=False, make_interaction_videos=False, make_test_videos=False, max_initial_demos=0, max_num_steps_interaction_request=300, max_num_steps_option_rollout=1000, max_rejection_sampling_tries=100, metacontroller_max_samples=100, min_data_for_nsrt=0, min_epsilon=0.05, min_perc_data_for_nsrt=0, mlp_classifier_balance_data=True, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_n_iter_no_change=5000, mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_max_itr=100000, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_open_door_refine_penalty=0, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_pos_reward=0, nsrt_rl_reward_epsilon=0.01, nsrt_rl_valid_reward_steps_threshold=10, num_doors=2, num_online_learning_cycles=200, num_test_tasks=10, num_train_tasks=1, offline_data_bilevel_plan_without_sim=None, offline_data_max_skeletons_optimized=-1, offline_data_method='demo', offline_data_num_replays=500, offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', online_learning_max_novelty_count=0, online_learning_max_transitions=inf, online_nsrt_learning_requests_per_cycle=5, option_learner='no_learning', option_learning_action_converter='identity', option_model_name='oracle', option_model_terminate_on_repeat=True, option_model_use_gui=False, painting_goal_receptacles='box_and_shelf', painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_max_objs_in_goal=inf, painting_num_objs_test=[3, 4], painting_num_objs_train=[2, 3], painting_raise_environment_failure=True, pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_min_want_locs=2, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_min_num_locs=3, pddl_forest_procedural_test_max_size=12, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_train_min_size=8, pddl_gripper_procedural_test_max_num_balls=2, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_min_num_rooms=3, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_min_passengers=1, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_max_locs=30, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_min_nuts=1, perceiver='trivial', pg3_add_condition_allow_new_vars=True, pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_heuristic='policy_guided', pg3_init_base_env=None, pg3_init_policy=None, pg3_max_analogies=5, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', playroom_num_blocks_test=[3], playroom_num_blocks_train=[3], pnad_search_timeout=10.0, pnad_search_without_del=False, polyak_tau=0.004, polyak_true=True, predicate_classifier_model='mlp', predicate_knn_classifier_n_neighbors=1, predicate_mlp_classifier_init='default', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, pretrained_model_prompt_cache_dir='pretrained_model_cache', pretty_print_when_loading=False, pybullet_birrt_extend_num_interp=10, pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_camera_height=180, pybullet_camera_width=335, pybullet_control_mode='position', pybullet_draw_debug=False, pybullet_ik_tol=0.001, pybullet_max_ik_iters=100, pybullet_max_vel_norm=0.05, pybullet_robot='fetch', pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7f1714782310>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), pybullet_sim_steps_per_action=20, pytorch_train_print_every=1000, random_bridge=False, random_options_max_tries=100, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, refinement_data_low_level_search_timeout=5, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_estimation_num_skeletons_generated=8, refinement_estimator='oracle', regional_bumpy_cover_include_impossible_nsrt=False, render_state_dpi=150, repeated_nextto_nextto_thresh=0.5, repeated_nextto_num_dots=15, restart_learning=False, results_dir='results', rl_rwd_shape=False, rnt_painting_max_objs_in_goal=2, rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_num_objs_train=[8, 9, 10], same_levels=True, sampler_disable_classifier=False, sampler_learner='oracle', sampler_learning_max_negative_data=100000, sampler_learning_regressor_model='neural_gaussian', sampler_learning_use_goals=False, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, satellites_num_obj_test=[4, 5], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_sat_train=[2, 3], save_atoms=False, screws_num_screws_test=[25, 30], screws_num_screws_train=[15, 20], seed=4, segmenter='oracle', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_check_static_object_changes=False, sesame_grounder='naive', sesame_max_samples_per_step=10, sesame_max_skeletons_optimized=50, sesame_propagate_failures='immediately', sesame_static_object_change_tol=0.001, sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, skill_competence_model='optimistic', skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_max_train_iters=1000, skill_competence_model_num_em_iters=3, skill_competence_model_optimistic_recency_size=5, skill_competence_model_optimistic_window_size=5, skip_until_cycle=-1, sokoban_gym_name='Sokoban-v0', stick_button_disable_angles=True, stick_button_holder_scale=0.1, stick_button_num_buttons_test=[3, 4], stick_button_num_buttons_train=[1, 2], sticky_table_num_sticky_tables=1, sticky_table_num_tables=5, sticky_table_pick_success_prob=1.0, sticky_table_place_ball_fall_prob=1.0, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, strips_learner='oracle', teacher_dataset_num_examples=1, test_doors_room_map_size=5, test_env_seed_offset=10000, test_grid_row_num_cells=10, test_task_json_dir=None, timeout=1000.0, tools_num_contraptions_test=[3], tools_num_contraptions_train=[2], tools_num_items_test=[2, 3], tools_num_items_train=[2], use_callplanner=True, use_epsilon_annealing=True, use_gui=False, use_obj_centric=True, use_old_exploration=False, use_torch_gpu=False, video_dir='videos', video_fps=2, vlm_model_name='gemini-pro-vision', vlm_trajs_folder_name='', weight_decay=0)
Git commit hash: 3d3b02dcb4250befa9d7f249adeb541169c8303e
/home/njk/miniconda3/envs/predicators/lib/python3.8/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 1 / 10
Average time for successes: 0.06477 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.06477324175648391, 'avg_ref_cost': 138.2, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 1.8300488591194153e-06})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 1167 datapoints
Loss: 0.02920, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss: 0.00000, iter: 24000/100000
Loss: 0.00000, iter: 25000/100000
Loss: 0.00000, iter: 26000/100000
Loss: 0.00000, iter: 27000/100000
Loss: 0.00000, iter: 28000/100000
Loss: 0.00000, iter: 29000/100000
Loss: 0.00000, iter: 30000/100000
Loss: 0.00000, iter: 31000/100000
Loss: 0.00000, iter: 32000/100000
Loss: 0.00000, iter: 33000/100000
Loss: 0.00000, iter: 34000/100000
Loss: 0.00000, iter: 35000/100000
Loss: 0.00000, iter: 36000/100000
Loss: 0.00000, iter: 37000/100000
Loss: 0.00000, iter: 38000/100000
Loss: 0.00000, iter: 39000/100000
Loss: 0.00000, iter: 40000/100000
Loss: 0.00000, iter: 41000/100000
Loss: 0.00000, iter: 42000/100000
Loss: 0.00000, iter: 43000/100000
Loss: 0.00000, iter: 44000/100000
Loss: 0.00000, iter: 45000/100000
Loss: 0.00000, iter: 46000/100000
Loss: 0.00000, iter: 47000/100000
Loss: 0.00000, iter: 48000/100000
Loss: 0.00000, iter: 49000/100000
Loss: 0.00000, iter: 50000/100000
Loss: 0.00000, iter: 51000/100000
Loss: 0.00000, iter: 52000/100000
Loss: 0.00000, iter: 53000/100000
Loss: 0.00000, iter: 54000/100000
Loss did not improve after 5000 itrs, terminating at itr 54770.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1505, 'query_cost': 0.0, 'learning_time': 42.83615899505094})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 2335 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7792.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3010, 'query_cost': 0.0, 'learning_time': 54.52597653307021})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 3506 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10049.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4515, 'query_cost': 0.0, 'learning_time': 70.96873816207517})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 4680 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8182.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6020, 'query_cost': 0.0, 'learning_time': 87.43199554202147})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 5860 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6472.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7525, 'query_cost': 0.0, 'learning_time': 105.62431911705062})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 7026 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6166.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9030, 'query_cost': 0.0, 'learning_time': 126.62216876004823})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 8182 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14030.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10535, 'query_cost': 0.0, 'learning_time': 155.96466879104264})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 8873 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5012.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11584, 'query_cost': 0.0, 'learning_time': 180.3117875700118})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 10060 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5070.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13089, 'query_cost': 0.0, 'learning_time': 206.77600127994083})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 11243 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.01556, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5133.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14594, 'query_cost': 0.0, 'learning_time': 236.06983635388315})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 12402 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5144.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16099, 'query_cost': 0.0, 'learning_time': 267.584262110875})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 13583 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10654.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 17604, 'query_cost': 0.0, 'learning_time': 306.21433253085706})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 14735 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6476.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 2.0
CUMULATIVE NUM SOLVED: 2.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0]
Tasks solved: 2 / 10
Average time for successes: 0.18364 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 0.18363684840733185, 'avg_ref_cost': 62.825, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19109, 'query_cost': 0.0, 'learning_time': 346.76577142090537})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 15872 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5562.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 2.0
CUMULATIVE NUM SOLVED: 2.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20614, 'query_cost': 0.0, 'learning_time': 386.3085192418657})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 17043 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8159.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 3.0
CUMULATIVE NUM SOLVED: 3.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0]
Tasks solved: 1 / 10
Average time for successes: 0.12355 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12355274625588208, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22119, 'query_cost': 0.0, 'learning_time': 430.42930232489016})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 18218 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6858.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 3.0
CUMULATIVE NUM SOLVED: 3.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 23624, 'query_cost': 0.0, 'learning_time': 476.7463890869403})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 19365 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8443.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 4.0
CUMULATIVE NUM SOLVED: 4.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0]
Tasks solved: 1 / 10
Average time for successes: 0.22723 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.22722626139875501, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25129, 'query_cost': 0.0, 'learning_time': 526.7875101369573})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 20510 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6253.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 4.0
CUMULATIVE NUM SOLVED: 4.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 26634, 'query_cost': 0.0, 'learning_time': 578.4182793379296})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 21661 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6994.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0]
Tasks solved: 3 / 10
Average time for successes: 0.12482 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 0.12482257133039336, 'avg_ref_cost': 37.833333333333336, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28139, 'query_cost': 0.0, 'learning_time': 633.5497825748753})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 22817 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5499.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 29644, 'query_cost': 0.0, 'learning_time': 690.0962918988662})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 24006 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6161.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31149, 'query_cost': 0.0, 'learning_time': 750.1040560499532})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 25183 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5412.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 32654, 'query_cost': 0.0, 'learning_time': 810.062946604914})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 26365 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5426.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34159, 'query_cost': 0.0, 'learning_time': 872.2780562929111})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 27543 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5191.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 35664, 'query_cost': 0.0, 'learning_time': 940.88751610287})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 28731 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5173.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 37169, 'query_cost': 0.0, 'learning_time': 1010.570078897872})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 29909 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5283.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 38674, 'query_cost': 0.0, 'learning_time': 1081.7736606688704})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 31036 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5321.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 40179, 'query_cost': 0.0, 'learning_time': 1157.995764266816})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 32192 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5191.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 41684, 'query_cost': 0.0, 'learning_time': 1236.8703161128797})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 33371 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5559.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 43189, 'query_cost': 0.0, 'learning_time': 1317.4820757578127})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 34547 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5417.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 44694, 'query_cost': 0.0, 'learning_time': 1400.8185733577702})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 35728 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5212.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 7.0
CUMULATIVE NUM SOLVED: 7.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 46199, 'query_cost': 0.0, 'learning_time': 1488.076752570807})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 36913 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5928.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0]
Tasks solved: 1 / 10
Average time for successes: 0.18017 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18017071182839572, 'avg_ref_cost': 137.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 47704, 'query_cost': 0.0, 'learning_time': 1577.1025263548363})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 38079 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5432.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 49209, 'query_cost': 0.0, 'learning_time': 1668.7873826267896})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 39231 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5172.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 50714, 'query_cost': 0.0, 'learning_time': 1762.88942721684})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 40385 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5207.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 52219, 'query_cost': 0.0, 'learning_time': 1859.6312803868204})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 41549 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5232.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 53724, 'query_cost': 0.0, 'learning_time': 1959.1904958618106})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 42713 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8340.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 55229, 'query_cost': 0.0, 'learning_time': 2062.448380407761})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 43879 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5420.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 56734, 'query_cost': 0.0, 'learning_time': 2166.589962117723})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 45053 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5286.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0]
Tasks solved: 1 / 10
Average time for successes: 0.12475 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12475296249613166, 'avg_ref_cost': 137.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 58239, 'query_cost': 0.0, 'learning_time': 2271.8214768837206})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 46172 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5233.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 59744, 'query_cost': 0.0, 'learning_time': 2380.066723177675})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 47342 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7960.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 61249, 'query_cost': 0.0, 'learning_time': 2497.008528780658})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 48483 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5215.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 62754, 'query_cost': 0.0, 'learning_time': 2612.625857661711})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 49636 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5270.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 64259, 'query_cost': 0.0, 'learning_time': 2731.1877550046192})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 50827 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5330.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 65764, 'query_cost': 0.0, 'learning_time': 2850.337587885675})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 52010 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5402.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 9.0
CUMULATIVE NUM SOLVED: 9.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 67269, 'query_cost': 0.0, 'learning_time': 2970.1008996586315})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 53149 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8324.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0]
Tasks solved: 1 / 10
Average time for successes: 0.18538 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18538391729816794, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 68774, 'query_cost': 0.0, 'learning_time': 3100.092280992656})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 54325 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5266.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 70279, 'query_cost': 0.0, 'learning_time': 3224.9089459056268})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 55495 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 71784, 'query_cost': 0.0, 'learning_time': 3356.74620736856})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 56670 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5146.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 73289, 'query_cost': 0.0, 'learning_time': 3490.6066657835618})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 57832 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5248.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 74794, 'query_cost': 0.0, 'learning_time': 3624.8974219146185})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 58996 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5126.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 76299, 'query_cost': 0.0, 'learning_time': 3764.4458338485565})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 60158 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 11.0
CUMULATIVE NUM SOLVED: 11.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0]
Tasks solved: 1 / 10
Average time for successes: 0.18621 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18620900576934218, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 77804, 'query_cost': 0.0, 'learning_time': 3907.739968317561})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 61331 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 11.0
CUMULATIVE NUM SOLVED: 11.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 79309, 'query_cost': 0.0, 'learning_time': 4052.839675075491})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 62530 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 12.0
CUMULATIVE NUM SOLVED: 12.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0]
Tasks solved: 1 / 10
Average time for successes: 0.12253 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12253334315028042, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 80814, 'query_cost': 0.0, 'learning_time': 4197.673811354558})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 63699 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 12.0
CUMULATIVE NUM SOLVED: 12.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 82319, 'query_cost': 0.0, 'learning_time': 4345.111971196602})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 64867 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0]
Tasks solved: 1 / 10
Average time for successes: 0.18413 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18412595929112285, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 83824, 'query_cost': 0.0, 'learning_time': 4500.33355920366})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 66032 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 85329, 'query_cost': 0.0, 'learning_time': 4652.028741340619})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 67203 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5146.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 86834, 'query_cost': 0.0, 'learning_time': 4807.289478617604})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 68346 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 88339, 'query_cost': 0.0, 'learning_time': 4969.895713367616})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 69541 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 89844, 'query_cost': 0.0, 'learning_time': 5136.679248666624})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 70738 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 14.0
CUMULATIVE NUM SOLVED: 14.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0]
Tasks solved: 1 / 10
Average time for successes: 0.42237 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.4223653927911073, 'avg_ref_cost': 138.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 91349, 'query_cost': 0.0, 'learning_time': 5300.677765861619})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 71912 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5365.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 15.0
CUMULATIVE NUM SOLVED: 15.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0]
Tasks solved: 1 / 10
Average time for successes: 0.22626 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.22625857638195157, 'avg_ref_cost': 138.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 92854, 'query_cost': 0.0, 'learning_time': 5470.304756080615})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 73056 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5209.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 16.0
CUMULATIVE NUM SOLVED: 16.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0]
Tasks solved: 1 / 10
Average time for successes: 0.12569 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12569016788620502, 'avg_ref_cost': 137.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 94359, 'query_cost': 0.0, 'learning_time': 5644.830901175621})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 74232 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5210.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 16.0
CUMULATIVE NUM SOLVED: 16.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 95864, 'query_cost': 0.0, 'learning_time': 5816.850152014638})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 75414 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5412.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 16.0
CUMULATIVE NUM SOLVED: 16.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 97369, 'query_cost': 0.0, 'learning_time': 5989.300262812641})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 76588 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6197.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 16.0
CUMULATIVE NUM SOLVED: 16.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 98874, 'query_cost': 0.0, 'learning_time': 6171.150364033645})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 77771 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5849.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 18.0
CUMULATIVE NUM SOLVED: 18.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0]
Tasks solved: 2 / 10
Average time for successes: 0.23557 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 0.2355653889826499, 'avg_ref_cost': 63.175, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 100379, 'query_cost': 0.0, 'learning_time': 6356.642701024539})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 78917 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5217.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 19.0
CUMULATIVE NUM SOLVED: 19.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0]
Tasks solved: 1 / 10
Average time for successes: 0.33970 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.33970027952454984, 'avg_ref_cost': 138.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 101884, 'query_cost': 0.0, 'learning_time': 6543.834375193575})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 80099 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5232.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 19.0
CUMULATIVE NUM SOLVED: 19.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 103389, 'query_cost': 0.0, 'learning_time': 6733.61611297261})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 81236 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5235.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 19.0
CUMULATIVE NUM SOLVED: 19.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 104894, 'query_cost': 0.0, 'learning_time': 6920.189394503599})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 82424 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5190.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 20.0
CUMULATIVE NUM SOLVED: 20.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0]
Tasks solved: 1 / 10
Average time for successes: 0.22477 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.22476693708449602, 'avg_ref_cost': 137.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 106399, 'query_cost': 0.0, 'learning_time': 7115.790794915636})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 83592 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5246.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 21.0
CUMULATIVE NUM SOLVED: 21.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0]
Tasks solved: 1 / 10
Average time for successes: 0.18745 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.18744885933119804, 'avg_ref_cost': 137.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 107904, 'query_cost': 0.0, 'learning_time': 7314.960790574551})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 84746 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5216.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 21.0
CUMULATIVE NUM SOLVED: 21.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 109409, 'query_cost': 0.0, 'learning_time': 7511.442077113548})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 85934 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5326.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 22.0
CUMULATIVE NUM SOLVED: 22.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0]
Tasks solved: 1 / 10
Average time for successes: 0.19689 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.19688582501839846, 'avg_ref_cost': 137.85, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 110914, 'query_cost': 0.0, 'learning_time': 7707.841932917596})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 87075 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5324.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 22.0
CUMULATIVE NUM SOLVED: 22.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 112419, 'query_cost': 0.0, 'learning_time': 7912.684260539594})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 88213 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5218.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 22.0
CUMULATIVE NUM SOLVED: 22.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 113924, 'query_cost': 0.0, 'learning_time': 8115.808652558597})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 89365 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5306.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 22.0
CUMULATIVE NUM SOLVED: 22.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 115429, 'query_cost': 0.0, 'learning_time': 8327.76493866567})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 90535 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5329.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 22.0
CUMULATIVE NUM SOLVED: 22.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 116934, 'query_cost': 0.0, 'learning_time': 8535.68799654767})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 91698 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5372.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 27.0
CUMULATIVE NUM SOLVED: 27.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0]
Tasks solved: 5 / 10
Average time for successes: 0.39302 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 0.3930199017515406, 'avg_ref_cost': 18.22, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 118439, 'query_cost': 0.0, 'learning_time': 8747.47091189865})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 92892 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5296.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 28.0
CUMULATIVE NUM SOLVED: 28.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0]
Tasks solved: 1 / 10
Average time for successes: 0.31939 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.3193870179820806, 'avg_ref_cost': 139.25, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 119944, 'query_cost': 0.0, 'learning_time': 8964.435561156599})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 94061 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5459.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0]
Tasks solved: 1 / 10
Average time for successes: 0.12669 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12669136107433587, 'avg_ref_cost': 137.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 121449, 'query_cost': 0.0, 'learning_time': 9187.834108567564})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 95236 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5193.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 122954, 'query_cost': 0.0, 'learning_time': 9413.89600831864})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 96391 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5236.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 124459, 'query_cost': 0.0, 'learning_time': 9653.070854988648})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 97580 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5172.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 125964, 'query_cost': 0.0, 'learning_time': 9882.370962393703})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 98761 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5316.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 127469, 'query_cost': 0.0, 'learning_time': 10115.957483912702})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 99935 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5206.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 128974, 'query_cost': 0.0, 'learning_time': 10348.099162027705})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 101119 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5185.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 30.0
CUMULATIVE NUM SOLVED: 30.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0]
Tasks solved: 1 / 10
Average time for successes: 0.12740 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12739662698004395, 'avg_ref_cost': 137.85, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 130479, 'query_cost': 0.0, 'learning_time': 10580.315881531686})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 102283 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5219.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0]
Tasks solved: 1 / 10
Average time for successes: 0.32445 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.3244538123253733, 'avg_ref_cost': 139.6, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 131984, 'query_cost': 0.0, 'learning_time': 10820.812325517647})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 103474 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5371.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 133489, 'query_cost': 0.0, 'learning_time': 11058.85298704158})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 104613 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5179.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 134994, 'query_cost': 0.0, 'learning_time': 11305.05006187153})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 105769 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5248.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 136499, 'query_cost': 0.0, 'learning_time': 11555.800266522565})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 106941 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5189.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 138004, 'query_cost': 0.0, 'learning_time': 11807.048757148557})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 108111 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5176.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 139509, 'query_cost': 0.0, 'learning_time': 12064.514849629602})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 109273 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5185.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 141014, 'query_cost': 0.0, 'learning_time': 12327.665619386593})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 110458 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5182.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 31.0
CUMULATIVE NUM SOLVED: 31.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 142519, 'query_cost': 0.0, 'learning_time': 12582.806173617602})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 111633 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5236.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 32.0
CUMULATIVE NUM SOLVED: 32.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0]
Tasks solved: 1 / 10
Average time for successes: 0.12520 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12519844679627568, 'avg_ref_cost': 137.85, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 144024, 'query_cost': 0.0, 'learning_time': 12841.848396341666})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 112797 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5203.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 33.0
CUMULATIVE NUM SOLVED: 33.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0]
Tasks solved: 1 / 10
Average time for successes: 0.23070 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.23070496611762792, 'avg_ref_cost': 138.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 145529, 'query_cost': 0.0, 'learning_time': 13105.889479810721})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 113983 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5214.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 33.0
CUMULATIVE NUM SOLVED: 33.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 147034, 'query_cost': 0.0, 'learning_time': 13379.21160950081})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 115183 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5454.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 34.0
CUMULATIVE NUM SOLVED: 34.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0]
Tasks solved: 1 / 10
Average time for successes: 0.12825 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12824836478102952, 'avg_ref_cost': 137.8, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 148539, 'query_cost': 0.0, 'learning_time': 13656.417950804811})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 116356 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5165.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0]
Tasks solved: 1 / 10
Average time for successes: 0.12394 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.12393989961128682, 'avg_ref_cost': 137.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 150044, 'query_cost': 0.0, 'learning_time': 13923.88733585691})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__99.pkl


ONLINE LEARNING CYCLE 100

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 505 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 117544 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6837.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (100,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 151549, 'query_cost': 0.0, 'learning_time': 14203.26180380187})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__100.pkl


ONLINE LEARNING CYCLE 101

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 510 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 118701 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5242.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (101,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 153054, 'query_cost': 0.0, 'learning_time': 14473.587649727822})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__101.pkl


ONLINE LEARNING CYCLE 102

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 515 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 119870 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5269.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (102,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 154559, 'query_cost': 0.0, 'learning_time': 14756.167895104853})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__102.pkl


ONLINE LEARNING CYCLE 103

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 520 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 121036 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (103,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 156064, 'query_cost': 0.0, 'learning_time': 15037.44466368691})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__103.pkl


ONLINE LEARNING CYCLE 104

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 525 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 122238 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5227.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (104,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 157569, 'query_cost': 0.0, 'learning_time': 15338.29660990485})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__104.pkl


ONLINE LEARNING CYCLE 105

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 530 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 123413 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5260.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (105,)
CUMULATIVE NUM SOLVED: 35.0
CUMULATIVE NUM SOLVED: 35.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 159074, 'query_cost': 0.0, 'learning_time': 15626.845576737891})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__105.pkl


ONLINE LEARNING CYCLE 106

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 535 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 124585 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8853.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (106,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0]
Tasks solved: 2 / 10
Average time for successes: 0.30203 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 0.3020337744965218, 'avg_ref_cost': 62.85, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 160579, 'query_cost': 0.0, 'learning_time': 15921.258484666934})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__106.pkl


ONLINE LEARNING CYCLE 107

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 540 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 125764 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5185.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (107,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 162084, 'query_cost': 0.0, 'learning_time': 16215.004337704857})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__107.pkl


ONLINE LEARNING CYCLE 108

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 545 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 126940 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5273.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (108,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 163589, 'query_cost': 0.0, 'learning_time': 16509.09331008594})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__108.pkl


ONLINE LEARNING CYCLE 109

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 550 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 128110 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (109,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 165094, 'query_cost': 0.0, 'learning_time': 16804.555207072874})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__109.pkl


ONLINE LEARNING CYCLE 110

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 555 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 129271 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5212.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (110,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 166599, 'query_cost': 0.0, 'learning_time': 17107.960887650843})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__110.pkl


ONLINE LEARNING CYCLE 111

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 560 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 130443 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (111,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 168104, 'query_cost': 0.0, 'learning_time': 17403.69681582693})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__111.pkl


ONLINE LEARNING CYCLE 112

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 565 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 131613 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9114.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (112,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 169609, 'query_cost': 0.0, 'learning_time': 17707.637446600012})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__112.pkl


ONLINE LEARNING CYCLE 113

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 570 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 132797 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5196.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (113,)
CUMULATIVE NUM SOLVED: 37.0
CUMULATIVE NUM SOLVED: 37.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 171114, 'query_cost': 0.0, 'learning_time': 18028.501788833993})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__113.pkl


ONLINE LEARNING CYCLE 114

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 575 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 133967 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (114,)
CUMULATIVE NUM SOLVED: 38.0
CUMULATIVE NUM SOLVED: 38.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0]
Tasks solved: 1 / 10
Average time for successes: 0.22056 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 0.2205561378505081, 'avg_ref_cost': 138.55, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 172619, 'query_cost': 0.0, 'learning_time': 18346.33052000904})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__114.pkl


ONLINE LEARNING CYCLE 115

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 580 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 135147 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5215.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (115,)
CUMULATIVE NUM SOLVED: 38.0
CUMULATIVE NUM SOLVED: 38.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004, 0.028000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0, 38.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004, 0.028000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0, 38.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 174124, 'query_cost': 0.0, 'learning_time': 18660.315664782072})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__115.pkl


ONLINE LEARNING CYCLE 116

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 585 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 136323 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5207.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 1085, in emit
    msg = self.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 929, in format
    return fmt.format(record)
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 668, in format
    record.message = record.getMessage()
  File "/home/njk/miniconda3/envs/predicators/lib/python3.8/logging/__init__.py", line 373, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "predicators/main.py", line 739, in <module>
    main()
  File "predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (116,)
CUMULATIVE NUM SOLVED: 38.0
CUMULATIVE NUM SOLVED: 38.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004, 0.028000000000000004, 0.028000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0, 38.0, 38.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.024, 0.027999999999999997, 0.024, 0.024, 0.02, 0.02, 0.008, 0.008, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.012000000000000002, 0.016, 0.016, 0.02, 0.02, 0.024, 0.02, 0.02, 0.02, 0.02, 0.024, 0.027999999999999997, 0.032, 0.027999999999999997, 0.027999999999999997, 0.027999999999999997, 0.036, 0.039999999999999994, 0.039999999999999994, 0.039999999999999994, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.044, 0.044, 0.06, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.06, 0.06000000000000001, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.06000000000000002, 0.05200000000000001, 0.04800000000000001, 0.04800000000000001, 0.04800000000000001, 0.048, 0.048, 0.048, 0.048, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.052000000000000005, 0.032, 0.027999999999999997, 0.024, 0.032, 0.032, 0.032, 0.032, 0.032, 0.027999999999999997, 0.024000000000000004, 0.024000000000000004, 0.028000000000000004, 0.028000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.1, 0.0, 0.1, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.0, 0.0, 0.0, 0.2, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.5, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 15.0, 16.0, 16.0, 16.0, 16.0, 18.0, 19.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 22.0, 22.0, 27.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 33.0, 33.0, 34.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 38.0, 38.0, 38.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 175629, 'query_cost': 0.0, 'learning_time': 18981.91515019408})
Wrote out test results to results/coffee__rl_bridge_policy__4______RLBRIDGE_coffee-ourmethod__116.pkl


ONLINE LEARNING CYCLE 117

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 590 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-PourFromNowhere:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugFilled(?jug:jug), NotAboveCup(?robot:robot, ?jug:jug)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [NotAboveCup(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)
NSRT-PickJugFromMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-PickJugFromTable:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Holding(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Ignore Effects: []
    Option Spec: PickJug(?robot:robot, ?jug:jug)
NSRT-TurnMachineOn:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Add Effects: [JugFilled(?jug:jug), MachineOn(?machine:machine), PressingButton(?robot:robot, ?machine:machine)]
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnMachineOn(?robot:robot, ?machine:machine)
NSRT-MoveToTwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [HandEmpty(?robot:robot), OnTable(?jug:jug)]
    Add Effects: [Twisting(?robot:robot, ?jug:jug)]
    Delete Effects: [HandEmpty(?robot:robot)]
    Ignore Effects: []
    Option Spec: MoveToTwistJug(?robot:robot, ?jug:jug)
NSRT-PlaceJugInMachine:
    Parameters: [?robot:robot, ?jug:jug, ?machine:machine]
    Preconditions: [Holding(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot), JugInMachine(?jug:jug, ?machine:machine)]
    Delete Effects: [Holding(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: PlaceJugInMachine(?robot:robot, ?jug:jug, ?machine:machine)
NSRT-TwistJug:
    Parameters: [?robot:robot, ?jug:jug]
    Preconditions: [OnTable(?jug:jug), Twisting(?robot:robot, ?jug:jug)]
    Add Effects: [HandEmpty(?robot:robot)]
    Delete Effects: [Twisting(?robot:robot, ?jug:jug)]
    Ignore Effects: []
    Option Spec: TwistJug(?robot:robot, ?jug:jug)
NSRT-PourFromOtherCup:
    Parameters: [?robot:robot, ?jug:jug, ?cup:cup, ?other_cup:cup]
    Preconditions: [Holding(?robot:robot, ?jug:jug), JugAboveCup(?jug:jug, ?other_cup:cup), JugFilled(?jug:jug), NotSameCup(?cup:cup, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Add Effects: [CupFilled(?cup:cup), JugAboveCup(?jug:jug, ?cup:cup), RobotAboveCup(?robot:robot, ?cup:cup)]
    Delete Effects: [JugAboveCup(?jug:jug, ?other_cup:cup), RobotAboveCup(?robot:robot, ?other_cup:cup)]
    Ignore Effects: []
    Option Spec: Pour(?robot:robot, ?jug:jug, ?cup:cup)

Training MapleQFunction on 137501 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5237.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
[CogMan] Finishing episode.
