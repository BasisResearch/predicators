# Config file for generating the mara_bench videos
# Excample run: 
#    python scripts/local/launch_simp.py -c mara_bench.yaml
---
APPROACHES:
  oracle:
    NAME: "oracle"
    # FLAGS:
    # ARGS:

ENVS:
  # blocks:
  #   NAME: "pybullet_blocks"
  # blocks_cf:
  #   NAME: "pybullet_blocks"
  #   FLAGS:
  #     blocks_high_towers_are_unstable: True
  # cover_cf:
  #   NAME: "pybullet_cover"
  #   FLAGS:
  #     cover_blocks_change_color_when_cover: True
  # cover:
  #   NAME: "pybullet_cover"
  # coffee:
  #   NAME: "pybullet_coffee"
  #   FLAGS:
  #     coffee_rotated_jug_ratio: 0
  #     sesame_check_expected_atoms: False
  #     coffee_machine_have_light_bar: False
  #     coffee_move_back_after_place_and_push: True
  #     coffee_machine_has_plug: True
  #     option_model_terminate_on_repeat: False
  #     coffee_use_pixelated_jug: True
  #     pybullet_ik_validate: False
  #     sesame_max_skeletons_optimized: 1
  # coffee_cf:
  #   NAME: "pybullet_coffee"
  #   FLAGS:
  #     coffee_plug_break_after_plugged_in: True
  #     coffee_rotated_jug_ratio: 0
  #     sesame_check_expected_atoms: False
  #     coffee_machine_have_light_bar: False
  #     coffee_move_back_after_place_and_push: True
  #     coffee_machine_has_plug: True
  #     option_model_terminate_on_repeat: False
  #     coffee_use_pixelated_jug: True
  #     pybullet_ik_validate: False
  #     sesame_max_skeletons_optimized: 1
  # balance:
  #   NAME: "pybullet_balance"
  #   FLAGS:
  #     sesame_task_planning_heuristic: "goal_count"
  #     sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  # balance_cf:
  #   NAME: "pybullet_balance"
  #   FLAGS:
  #     balance_wierd_balance: True
  #     sesame_task_planning_heuristic: "goal_count"
  #     sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  # grow:
  #   NAME: "pybullet_grow"
  #   FLAGS:
  #     # sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  #     coffee_use_pixelated_jug: True
  #     max_num_steps_option_rollout: 50
  # grow_cf:
  #   NAME: "pybullet_grow"
  #   FLAGS:
  #     grow_plant_same_color_as_cup: True
  #     # sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  #     coffee_use_pixelated_jug: True
  #     max_num_steps_option_rollout: 50
  # circuit:
  #   NAME: "pybullet_circuit"
  #   FLAGS:
  #     sesame_max_skeletons_optimized: 1
  #     sesame_check_expected_atoms: False
  #     terminate_on_goal_reached: False
  #     pybullet_ik_validate: False
  # circuit_cf:
  #   NAME: "pybullet_circuit"
  #   FLAGS:
  #     circuit_light_doesnt_need_battery: True
  #     sesame_max_skeletons_optimized: 1
  #     sesame_check_expected_atoms: False
  #     terminate_on_goal_reached: False
  # float:
  #   NAME: "pybullet_float"
  #   FLAGS:
  #     sesame_max_skeletons_optimized: 1
  #     sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  #     option_model_terminate_on_repeat: False
  #     num_train_tasks: 0
  #     num_test_tasks: 2
  # float_cf:
  #   NAME: "pybullet_float"
  #   FLAGS:
  #     float_water_level_doesnt_raise: True
  #     sesame_max_skeletons_optimized: 1
  #     sesame_check_expected_atoms: False
  #     pybullet_ik_validate: False
  #     option_model_terminate_on_repeat: False
  #     num_train_tasks: 0
  #     num_test_tasks: 2
  domino:
    NAME: "pybullet_domino"
    ARGS:
      - "video_not_break_on_exception"
    FLAGS:
      sesame_max_skeletons_optimized: 1
      sesame_check_expected_atoms: False
      horizon: 50
      pybullet_ik_validate: False
      num_test_tasks: 2
  domino_cf:
    NAME: "pybullet_domino"
    ARGS:
      - "video_not_break_on_exception"
    FLAGS:
      domino_some_dominoes_are_connected: True
      sesame_max_skeletons_optimized: 1
      sesame_check_expected_atoms: False
      horizon: 60
      pybullet_ik_validate: False
      num_train_tasks: 0



ARGS:
  - "debug"
  - "use_gui"
  - "make_demo_videos"
  - "make_failure_videos"
  - "make_test_videos"
FLAGS:
  # This is particularly useful in some envs. In blocks with high towers are
  # unstable, this is useful to capture the unstability and to avoid force from
  # the prev. episode to affect the current episode.
  terminate_on_goal_reached: False
  num_train_tasks: 1
  num_test_tasks: 1
  video_fps: 20
  pybullet_camera_height: 900
  pybullet_camera_width: 900
  use_counterfactual_dataset_path_name: True
  keep_failed_demos: True
START_SEED: 0
NUM_SEEDS: 1
# 