pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env grid_row_door --approach rl_bridge_policy --experiment_id RLBRIDGE_gridrowdoor-oracle --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 3
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7fca812965e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=True, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7fca8128ab20>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=3, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-oracle', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: b884c40ed028ad57848b984e8cb6e73a1308ed73
/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1691229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0284292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0964522], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8110076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46858332], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.32968983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9566308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41576457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3418827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9060002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.18606374], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9060014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48157012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41482344], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56317365], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10020068], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36336073], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4807811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17844258], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11892509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04253996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.81211215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1643382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02909168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1321375], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24787737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45708516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.56250566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3144456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.628618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9233311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08776169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.650654], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7624552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07042335], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6524951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.81281704], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67405874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45578247], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2675322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31751943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32379347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18120006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.77231526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7076355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1461733], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25237465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97935355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65124005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05047548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22358705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9984155], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54322106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92707574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10693667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4586912], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25409174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95565313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5272663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27230924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01489455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05749445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67075926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41119602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7562473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9575163], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9456355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7962096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5174042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6662164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.52043855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.58433574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.50142545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.98373145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93611526], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.5167436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.49235755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.78794336], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8907173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.22225936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9890956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2812426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.34101024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.28923658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.071858], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8948103], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.2081978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.02300949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.2507342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.5380049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.513936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0339802], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.30551347], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.8833578], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6653541], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9442283], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6500265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1295512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.927467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20174497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.07700859], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6811113], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4770138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77045697], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 3.6910059861838818e-06})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 378 datapoints
Loss: 0.01975, iter: 0/100000
Loss: 0.01263, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss did not improve after 5000 itrs, terminating at itr 23172.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00466315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00959702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04730478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0060734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01848481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01378348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00538418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01102417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02374633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00797348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01075221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03620892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0106143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02231342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03508183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00867987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00203258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01333831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0018654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03635665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01617682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00483028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04752042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01103167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00525902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0057948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00658349], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03085403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01009785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00159824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00891838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.17533901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5511337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02979686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02081894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01346467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0334651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02969225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0184877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01440068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00092925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00661725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01811398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00260291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01716204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02803978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00764795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0184928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03479886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01772751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01277336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02755079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00690467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0033285], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03844673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01607965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03093288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02891811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00860258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01471209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01836366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01835947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00135626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.013814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0011038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01142955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01647913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02422001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01447225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00396306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01176461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01948298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0047757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01823848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00547101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00904053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01287479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01396178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00453183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01499531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00468233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01425381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00057962], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00125952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00619949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00970402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00459058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0141835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00493277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03597799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00892777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00726331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02309031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0122072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00388727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01530512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01901146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0399992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00692132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02008144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00480015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01532051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01982842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01685726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02230828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03140314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00484888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02854929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01651644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01126001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00236091], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00692258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00136345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03168461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01912781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00222887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01335527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00255805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01013428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03923121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01637866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00934049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0109569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01533021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01109365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01388327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01713894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02002807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0095185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00594299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01023244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00606331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02531644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01008912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01539418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03626509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01009778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02250746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00560032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01786323], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01473731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02227196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00508457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01647367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02453767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00511547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00379807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01142481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00942118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01908965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00894407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00150595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00847815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01536041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0050174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01011932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01496114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01634165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00854437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02664438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00949461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0157431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01064597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03036616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00933069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01345718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01609683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02314945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0148398], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0307752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03133545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00846389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01272641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01389071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00549773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01204196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02350977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0093114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01101656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01076111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02804178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0100282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01785726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02805522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0049289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00410007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02060175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03129832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00638521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01322552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01671059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02224516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01891236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00061283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01407974], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01027481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01080596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01847238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02749524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01201976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00787133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02038848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00587843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00272937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00621306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01935902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0106346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02844087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00156611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02728532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02382644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00505326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00984192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00032933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00485017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0159042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01381424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00555317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01506978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00981341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02342755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00168087], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.16066946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.334525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00451934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00203758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.02228779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01380761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01467439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.03450357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.02083067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00744876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.04421989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01312207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01346976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00292222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05212928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01535582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0387407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01983552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01358687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00756586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01785163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00307879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0236259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00044183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.02884835], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00774492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04815668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0054424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01502416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01394718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01200078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00847882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00917649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01595307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00238945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02094462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00472512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02247199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02831442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00488066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00704556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00861587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00912786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00413552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01233172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01994588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00869821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00652751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00502461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00300736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00107967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00442273], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 487, 'query_cost': 0.0, 'learning_time': 40.27747796999756})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 775 datapoints
Loss: 0.00214, iter: 0/100000
Loss: 0.00091, iter: 1000/100000
Loss: 0.00072, iter: 2000/100000
Loss: 0.00102, iter: 3000/100000
Loss: 0.00105, iter: 4000/100000
Loss: 0.00076, iter: 5000/100000
Loss: 0.00098, iter: 6000/100000
Loss: 0.00084, iter: 7000/100000
Loss: 0.00089, iter: 8000/100000
Loss: 0.00068, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9771.
Loaded best model with loss: 0.00005
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07060315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07292029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.11015046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04769488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07232782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07041839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08814891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07920912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07325552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05663132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06174828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01983831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08875018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07377058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06574101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00445473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07606658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08720344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08138743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06608656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05754931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07843816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07148289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07433171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07643426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05277081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07353909], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07269586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03827828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06511269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07445823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07193897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06595334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07155524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06922026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07282528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07876343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09144457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0725476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07153159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07314239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06170427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07428464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07156111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06524813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09113457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07300237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05197683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06716493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06965212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0705317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06935824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07513427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.075969], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07442278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07835943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07813606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06929351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08138786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0640491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05677036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07434869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06284864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06728347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06732455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07017094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06087268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06583085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07561966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06861643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09842389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07554357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07194655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09156994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07009275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03215032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07219899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07674129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05691091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08505952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05976916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05766715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06138344], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08027693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06690536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04696692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05231087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06921095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06613341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08940423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08405948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07829057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06604192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08195565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07509594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05702914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08421695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06061746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05916326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06361122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07486254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0693334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07239807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07089149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07245713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05676739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0702841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07741879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02877204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08215667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08815834], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07692504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03173733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06587906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10720284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07404543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05654367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0676547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06132133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06484634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0597555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05566526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08031468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07552334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08689651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06579981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06930136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06309515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06530157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08266308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03215973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06529214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0717062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09674577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06992807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12216043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07266699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08386613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07292197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06861354], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0654927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07040862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07514869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06614679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0852173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05504217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08035342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0735037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07042217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07257845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06147084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08377512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03872745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07796343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06492455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09065972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08055873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0745642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08151773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07220957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04638584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08266928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08097195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10380688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07475962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06176086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07026552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05802402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06954071], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06505544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07485657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06727952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06388611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07204715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06176773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08645241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08472314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08236934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07078139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06851086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07151352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09148064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07963173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09016428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.04822027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.10745209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.05677942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.05381643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06454916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09186706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06298053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.05888484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06159984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07552794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06130328], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06050199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07731408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07501477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04788863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07092372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07211351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07563025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07645822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07326116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06082679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06939637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0507753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07154083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0722643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06972378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07901154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06209885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05766576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07583052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10022492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05150422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08099828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09565714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04979424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06884257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06822522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06374827], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0713142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07457897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05427676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07374445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05328555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0716347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.08352454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06560881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07735001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.1180752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07393394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06280295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07383844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.03235911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06738478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06049843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05388974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.09080785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06016114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06917242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07011267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0672768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07396792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06176743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06242671], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08745762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07239381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05988502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07084664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08139425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0841871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06020642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10093429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06833507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06753402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06898693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06877823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06779104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05773182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08145028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0421427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06425329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08133814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06344039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06940253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07458341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07688465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07661738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04617506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05457072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06899216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06385805], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 992, 'query_cost': 0.0, 'learning_time': 59.77942374700797})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1153 datapoints
Loss: 0.00264, iter: 0/100000
Loss: 0.00033, iter: 1000/100000
Loss: 0.00073, iter: 2000/100000
Loss: 0.00024, iter: 3000/100000
Loss: 0.00039, iter: 4000/100000
Loss: 0.00169, iter: 5000/100000
Loss: 0.00034, iter: 6000/100000
Loss: 0.00018, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7299.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45372623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.430421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9774094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4412565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4281845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96576715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4280117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9736727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43694788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97927153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42756215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9771553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4332762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91453505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45167845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9739209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43766418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95080924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41442347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92484355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43839705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99200326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42326072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9459875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44413847], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44375128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9572379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43967733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94570047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4211623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9584867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44149467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9646089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43461207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98387504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44276166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4219531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94206905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42654425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95952636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43538716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99963194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43180904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9827777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42691454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99158263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45872736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4239655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95513475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44505367], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4353035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4350978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97964936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43358135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9719203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41988817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9688576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43191004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9777863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43359828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9593066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43702567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99869406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.431477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97017825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43020347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9727254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44425243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44464934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99115115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45105997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43088362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98198086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4644178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43469778], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.45046386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.90802675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.46216387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.45045647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97919106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4258238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9561444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4337652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9613717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4440209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9536584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43130893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97005713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43897748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.978211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4252517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4334367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9808818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43160108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.46756652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9922594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43971667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9847923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43999344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967158], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43637165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43621153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.434825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4460624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99330354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44306886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9324003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45371225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97706014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43454057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96274704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42950952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96747875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4402737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9786885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43203562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9821035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43761817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96116465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44903532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99795413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43727896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.48502174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43089685], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45175087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43196717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96789217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4455688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97584033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4376653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9756595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4375175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97953236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4381696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9733748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42103198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9450154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4186707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93194014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43351018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98657084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4295981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43892083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42454308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.961887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43173048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97880304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43099967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9753236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45294002], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.42108566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94450563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4266127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96047604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4252817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9187082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.43077484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97613806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.44371232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9744381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.44269168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9385923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4226977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9485681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.42810622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.89046204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.43554935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96987265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4324983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98195654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4445482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99653864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4486245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9499405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.44117934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9816191], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42918757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9446944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43262258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9824375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45696652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92276484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44105768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42854017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9700957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4341252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98260045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42419127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95348656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4538918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4396273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98718363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4347506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99722534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43846217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9813986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43204904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43610695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9886747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43472528], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4191909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9741944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.44371587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9927124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.40870672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9011719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.42570233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9798326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4377991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9909742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.43510115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.995789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4458398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9613889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4492496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.98938864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4308871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.976706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4429257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9844935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.42333075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.9895297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.43095165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.987599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.44605997], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43193036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.986229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44375682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42190215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9445375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42445132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9603518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43502656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9749151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42716435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9752924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44928822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97507435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.43778786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9622176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42411625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96646136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.44097486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45268324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9726576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4379158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9884489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.42774016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96826625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4363215], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1488, 'query_cost': 0.0, 'learning_time': 76.59367422299692})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1546 datapoints
Loss: 0.00043, iter: 0/100000
Loss: 0.00642, iter: 1000/100000
Loss: 0.00406, iter: 2000/100000
Loss: 0.00040, iter: 3000/100000
Loss: 0.00014, iter: 4000/100000
Loss: 0.00017, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5900.
Loaded best model with loss: 0.00003
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6792506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51459605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68113285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54671264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69306844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53579384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69430983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56059194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6791533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4754081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6663665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5173279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6731037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5213957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69214904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55801946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66218776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49425945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6703832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5250991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6709938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5352587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6481458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5093332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7142649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.06965205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.10419399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.04262508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.04423131], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69061005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.558418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6924838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50926715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65825844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50641346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6857936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5527639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6780776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53887576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6930022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5662098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6954153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56319755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6918759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5429257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6821015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5330608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68568903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55287224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6903072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5718971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.66759974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5180577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6834269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5514247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6867985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5524383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6950811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56438696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6951392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5589245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6835756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5509451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6587699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5131242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6903972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5599165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.64839315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4799997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7613164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.00301961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.00227859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.00430218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.00254206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.01590748], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6760333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5227803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6717051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5119917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.67213374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5369785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69694513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56966573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6734469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54071176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6874462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5461876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6875166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4996479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6696702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52693194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.8][0.0, 0.0, 0.0, 8.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.8][0.0, 0.0, 0.0, 8.0]
Tasks solved: 8 / 10
Average time for successes: 1.49261 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.4926080241020827, 'avg_ref_cost': 1.8249999999999997, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1993, 'query_cost': 0.0, 'learning_time': 92.54401497798972})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1930 datapoints
Loss: 0.00028, iter: 0/100000
Loss: 0.00021, iter: 1000/100000
Loss: 0.00036, iter: 2000/100000
Loss: 0.00080, iter: 3000/100000
Loss: 0.00386, iter: 4000/100000
Loss: 0.00080, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5558.
Loaded best model with loss: 0.00003
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6211545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4529508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9240878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3586191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.34626463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31588128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5459281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98664397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23251106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9692013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.315392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.96908146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23302807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9755357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23969886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9913194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23038335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9992109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22623551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9974395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25871938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9637892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23969412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9329993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23285218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99827456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23142514], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60814077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4343135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9950478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43248266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9263217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4452022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.949604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.33496818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5507784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.952348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22143437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.91717565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2221952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9494419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22933792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98227894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2284983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9795949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24046665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9110617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2312843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9772946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26047125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9941976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22815596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98141223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20946231], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6068705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4320796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9283692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42813835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9783618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46374965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8450247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32008377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54624826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.95137227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23269778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9975443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23697038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9710645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22200485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99221903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22971414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97036874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27099413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9984427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23522334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9952497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2289602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99357927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23528782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99875164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25391343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9923251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2356011], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5930074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41978905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9491277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41150248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9807429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4165086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9783107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40880442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98032236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4282159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99885154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41373706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9951647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4171805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9289497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42419887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9785227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42814714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9946114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41410607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9880738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4095479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98044705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.401863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9494093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41600406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9899787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42028427], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5971631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4189727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.999857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42853928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98085093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42900223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9724594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41740283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99314904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38379407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94104606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41568092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9283049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4377007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9489007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3395751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52414876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.992066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25629774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9960884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25930858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.85502034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28567162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96431804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25315893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9864701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27671066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9968844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2705297], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6115351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44809228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9518331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34100524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5553159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9855269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21721332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97493577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22350647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99509597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21693644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98630464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25382498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96150446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22577155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96693575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22767754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99868053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21425542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9803003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22297443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9759755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24670963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94991225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22749713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97216845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22657904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9920513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2760999], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6602544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4944002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6412782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47885782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83982396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29670712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54378873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.99717045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24987645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9995567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23597792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9938183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23336361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.95671344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25044125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9936435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22954033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.95010567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2462582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9626926], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.63759905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4727586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86417395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.298545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5357946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9508685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2736695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9916267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24997959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98535883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26651025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9754264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26959386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9972485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25397307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9887819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24723059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9928487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26845878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9880224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24369639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9978677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23794067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9959474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25611016], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.61077744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45034415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.924635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.33853054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.56337065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99978536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.20772849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9722189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.20624073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99590784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.20628661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.984342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.25014684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9904708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.20879048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.97297305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.21460609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9965095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.24278708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9814526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.21077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.9801138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.21229602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.99250126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.21407686], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61537737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45407847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89717853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32072052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53378814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99591076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24611211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.94503987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.255345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9993868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2514173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98723346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27136955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9912457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24741971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9510061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25442526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9979164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2497952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98868245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25133967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9791812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24843414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9993377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24860573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9494891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24983361], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.032][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.8, 0.0][0.0, 0.0, 0.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.032][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.8, 0.0][0.0, 0.0, 0.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2498, 'query_cost': 0.0, 'learning_time': 109.35164059698582})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2186 datapoints
Loss: 0.01236, iter: 0/100000
Loss: 0.00183, iter: 1000/100000
Loss: 0.00549, iter: 2000/100000
Loss: 0.01265, iter: 3000/100000
Loss: 0.00923, iter: 4000/100000
Loss: 0.00436, iter: 5000/100000
Loss: 0.00524, iter: 6000/100000
Loss: 0.00957, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7765.
Loaded best model with loss: 0.00004
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97416747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9812538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.53442585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11567923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.71745425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.378317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05172314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07448121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07283525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4468124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4564157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4318752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4429235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4449113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45247012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45008925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45762306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45173106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43436265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41291708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44165593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4414443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4212622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4475408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46454954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46289504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42844805], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9716086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98911506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5354438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11385891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.67652476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38806388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04138162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0586636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00378049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04493307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07252974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07741746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06236334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03992738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01315619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00415335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01271516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02969798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0577749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09008335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08335324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07355681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08272109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04758859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00848689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05673096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0574484], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9695644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.998765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54125625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12486736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6323396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6367734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62742394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6454318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61762094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6526614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.68801576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6162975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61690986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6417546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62913877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6565857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6251612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.69365853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.62036777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.620114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61410195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6486624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6120989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6176056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6271821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64586484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6272634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6207673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.64736056], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97357684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96093476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49708825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1530699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.96572894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9607366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.4805975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.13827279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.97514725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9806951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.5331506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.13247591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6209838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6260868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6429891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6308188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.62352854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6251494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6258168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6227967], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9147391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98283917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45619646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06007963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58779913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36685625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09728826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15659305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00758787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03273986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02191209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04204332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02309991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01667587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00722608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01967448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00996802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01437166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01406348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00507642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00296925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01938455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92528737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9859911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50263053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9012501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48916727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04821842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7302014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4511823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00210835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00839889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01160235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58219856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42876828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0167945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49533102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3859305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03839952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0568761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02183505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16676043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17192253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18159933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17654589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16166785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12504253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1671999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17269817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10632645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15426376], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.98289573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9939667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.54053813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11781206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.721604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.39684102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0059534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.01115806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00332193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01074595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.00944074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0021293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00844727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.02467648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.03130477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.15190811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.1557333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.1965177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.19323668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.19951653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.2057414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21325254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.21267836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.20914333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.14969754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.16700223], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9856357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98628914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5434924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11366571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7476217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4108932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01152873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00684294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00785644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01474847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01620084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.002021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01231903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00417971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02148596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3284553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3202222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.34159407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.34579843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.33941337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.35545057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.33027658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32048902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3218004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31773174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.33835286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28945723], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9552144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.999018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.53075576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.0885077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.6997477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.43171784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.00479425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.02399342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.04970184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45079413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4439246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45704135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45735246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4595745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4304588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47246334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45319965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45796812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45679015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4508535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.40068528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.454384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4605093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4630106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46689007], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97481096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9875091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.51544017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.17566338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9491146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.948328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.47199225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99545085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.5163902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11185641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5460244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56961244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5526622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5596159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5609831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.583445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57506293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56918055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56150186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55442554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5664542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5986976], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.8, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.8, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2847, 'query_cost': 0.0, 'learning_time': 130.83664112500264})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2566 datapoints
Loss: 0.01492, iter: 0/100000
Loss: 0.00141, iter: 1000/100000
Loss: 0.00112, iter: 2000/100000
Loss: 0.00139, iter: 3000/100000
Loss: 0.00992, iter: 4000/100000
Loss: 0.00078, iter: 5000/100000
Loss: 0.00155, iter: 6000/100000
Loss: 0.01295, iter: 7000/100000
Loss: 0.00057, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8403.
Loaded best model with loss: 0.00005
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9921011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.37828726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9555791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.58415157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98558426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.57663083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9966168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5569994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.33277345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99571085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36238536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9830172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.1555713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.10682841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.12700847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.12598191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.1549822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14039837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11537151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14465722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.15609062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.12019211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14137249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.13570516], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8803208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44605744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9670903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49753192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9450914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4994465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9802292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.501571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.96680814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48983437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9954383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4853179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99936366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47619343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98646146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.43482727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9885059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49506834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98236984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47657272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98842317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5036908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98691624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.45373917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9454174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49335244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9862715], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9544823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38554063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9582334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5368008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97920996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5187077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5501921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97069865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5156571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9875131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5496252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9806688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.53708786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9926358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5467412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9783514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.55717695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9948383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54347384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9980487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5404149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9799844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5588356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9735462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.54370725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9696798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5391985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9726491], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9760597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.37712365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9773674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5649747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9450402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5804928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9793873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5231184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26863706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97977376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3879143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98863536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.5463403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99559134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.55568814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9991554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.5486613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.97382456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.5195256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2724428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97699714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37252575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9815354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5281341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2802292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9380847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41767853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9377084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.51831406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5458435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99714535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5434938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97107494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.52803254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9940725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.538386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9699365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5144352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9904132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5312033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9879148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5280274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96005785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5394492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9992087], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9884086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36234897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99141043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5715794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95590377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5537392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3220768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98236305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.36844876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9908193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.53720444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2496202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99173045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37151244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.98435795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.52921367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.31461304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9802232], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9881233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.35092854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.99433833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.56547457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9768279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.55559856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.30754486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98315334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36840454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9861756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.54272926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.28595522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.97926706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37449896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.9992232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.5689765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.99805194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.5640626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.98184377], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99114996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36986548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9831207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.55786043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3061014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9893055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.34983674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.96476644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.54476404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.28611165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9550883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3932418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9953984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.5504798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.94115895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.5311435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9165664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.50977653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.995288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.53243256], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8842659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4409282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9941368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.45715085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.97681254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.5057869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9982218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.49754333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.96810937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.4990544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9857713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.48890486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99239695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.49834552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.99798965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.4996152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.95218736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.467327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9698764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.49067178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.996691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.46807668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.9970629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.4544349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.980891], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9848615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3711025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9911767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5720992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9739261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5587911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9958688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5601052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97446716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.57636505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.8891727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5701769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97140557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5510012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.29491177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99848217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37393236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.48170796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56349576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9962236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36929467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5498416], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3352, 'query_cost': 0.0, 'learning_time': 154.84085136299836})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2898 datapoints
Loss: 0.00062, iter: 0/100000
Loss: 0.00243, iter: 1000/100000
Loss: 0.00588, iter: 2000/100000
Loss: 0.00252, iter: 3000/100000
Loss: 0.00259, iter: 4000/100000
Loss: 0.00113, iter: 5000/100000
Loss: 0.01447, iter: 6000/100000
Loss: 0.01375, iter: 7000/100000
Loss: 0.02928, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8312.
Loaded best model with loss: 0.00022
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67135787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6116727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47359866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.39286348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48661935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3986256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5022095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38227102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47163776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.39546332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49501148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38366675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4612454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4065827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68260425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6286567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.60556656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3325619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00923294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02108904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00581409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00078363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0498286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04564773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00654903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01432894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01216206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01774962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0051026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02016825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01228378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01306681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00657033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00184079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00679808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00289498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00065382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00825128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00691777], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6669816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5616814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66296804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6794055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6163465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4881098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.38455307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47125524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.38673624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50378275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.3839376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67600167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.63578075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6050827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.39897704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51477903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38903773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4497353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38896936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4737995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3921422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4830416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.39413157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5036826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.39834988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50780183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3839162], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66370714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5664649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6629712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56887907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6690584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6004851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4851786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.38608503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44741097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.41854817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69210035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.63394886], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6664893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5523169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6926323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6337392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0254796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00530994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01975192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00400874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00146903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01045933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01700685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01026949], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68633485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6394917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00208875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00026835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0070261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00056103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00568533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01257031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01390593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00366818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00183379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01046473], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6830537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.63220155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.60037243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35706732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00758188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00769116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00229102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00860559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00309109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00822861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00879882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01703862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.004788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00192009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00851021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00376775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00468685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02472059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01335458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02345426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03090601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0046672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00521997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00476759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00623175], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7048949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.60656124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.22775726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.18048933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00025645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01154882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00595762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0080695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00289867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00691034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6758057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6304559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49369133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.39748138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49703404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3864768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5073405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3952075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5090285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38536257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47685626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38972446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49635193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.39241236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44990513], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3803, 'query_cost': 0.0, 'learning_time': 179.69364008898265})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3201 datapoints
Loss: 0.00301, iter: 0/100000
Loss: 0.02131, iter: 1000/100000
Loss: 0.00395, iter: 2000/100000
Loss: 0.00256, iter: 3000/100000
Loss: 0.00447, iter: 4000/100000
Loss: 0.00304, iter: 5000/100000
Loss: 0.01116, iter: 6000/100000
Loss: 0.00487, iter: 7000/100000
Loss: 0.00196, iter: 8000/100000
Loss: 0.00283, iter: 9000/100000
Loss: 0.00782, iter: 10000/100000
Loss: 0.00211, iter: 11000/100000
Loss: 0.00696, iter: 12000/100000
Loss: 0.00200, iter: 13000/100000
Loss: 0.00172, iter: 14000/100000
Loss: 0.00536, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15863.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5763769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5273894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.15026863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5781223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4880081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14842501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5973944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5081241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.3288687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.66633964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.33832508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.32635975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.64593977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.3422022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5914161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51020545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1159803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.58708495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5162199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14931402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5883949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52009684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.15119506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.57432956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51923347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.17912753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.589917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4912294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.30971768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.65675515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32900265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16034357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60780644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5104093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.33696234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6781842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.33409262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.33967713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.68124384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.34404495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.32905465], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5919074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5198003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1258907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59443295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5253143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.1374084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.61854154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.540874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.35330003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6707326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.33732787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.35536617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6636276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.34461328], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6069441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52797616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33198103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6936477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34966785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07523207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59734565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5301922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13172866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.587022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.540832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.14580822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.59499663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51726246], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5904473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5265048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11336924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58057964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5133758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17049924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5812213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50170225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.18856893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.65853935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5460345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5778293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52170193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.1788625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5908026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5190963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.15252781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.57805216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4957004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.1594889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.58335876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4918932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.1335762], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61724603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52533823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35001785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.67448133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35888278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3484195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6843136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.350037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07394639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6367841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5080215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36573198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6920375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.37742186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.57338905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5215726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.16380072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.57520896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5128034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.16626629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.5889534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51863986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.1340765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.58338547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5054374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.13637929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.58625406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51943266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.15712613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.61335886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5360319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.34536746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.6742604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.35088566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.3331028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.69047254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.3392525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.32503328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.70395404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.35564873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.1148973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 8.0
CUMULATIVE NUM SOLVED: 8.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4213, 'query_cost': 0.0, 'learning_time': 217.6479489809717})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3464 datapoints
Loss: 0.01302, iter: 0/100000
Loss: 0.00799, iter: 1000/100000
Loss: 0.00931, iter: 2000/100000
Loss: 0.00175, iter: 3000/100000
Loss: 0.00552, iter: 4000/100000
Loss: 0.00183, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5990.
Loaded best model with loss: 0.00019
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69182414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6052578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.25130972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7869333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4189369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.707269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.58450335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.653813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5682624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.678549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.58724976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70171314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5824255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6785461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5721867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6940522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5563079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6659736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5694995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68664694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57936054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6943364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.59537274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.68100697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56863475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73912853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5991025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6959337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56948155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71155506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.58684313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6841121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5694365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.697115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5641136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7239681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5922836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6995005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5852684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70042664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5764872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6873318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.586323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.703798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5799134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7057463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5841959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6573247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5797706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32984433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33748877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34796092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34148172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33829018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3081893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34129703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34824404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33442563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33115816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35087562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.352439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35093465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34454206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33849648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3401451], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7391876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5870594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67551696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57671314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6999273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.58473647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6903088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.6089687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.28737628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.7882733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.42527264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69964856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.58289653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.695917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55488306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6825537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5530631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68906814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5447128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71621907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.6012082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.18378164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6904566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5819072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6739932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5665138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70176184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.58078665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6927219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57636887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69193316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5868535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69447803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.59717315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.67235845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5752378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 14.0
CUMULATIVE NUM SOLVED: 14.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0]
Tasks solved: 6 / 10
Average time for successes: 1.43762 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 6, 'num_total': 10, 'avg_suc_time': 1.4376233899965882, 'avg_ref_cost': 2.4499999999999997, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4569, 'query_cost': 0.0, 'learning_time': 240.52647796997917})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3545 datapoints
Loss: 0.00518, iter: 0/100000
Loss: 0.00476, iter: 1000/100000
Loss: 0.00294, iter: 2000/100000
Loss: 0.00131, iter: 3000/100000
Loss: 0.00199, iter: 4000/100000
Loss: 0.00154, iter: 5000/100000
Loss: 0.01712, iter: 6000/100000
Loss: 0.00292, iter: 7000/100000
Loss: 0.00325, iter: 8000/100000
Loss: 0.00350, iter: 9000/100000
Loss: 0.00242, iter: 10000/100000
Loss: 0.00108, iter: 11000/100000
Loss: 0.00280, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12308.
Loaded best model with loss: 0.00051
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71850985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54253954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70120734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5443382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6842978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5431303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6888015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5399444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69324464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53339905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6915516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52304804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69945914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5579107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70087975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.558273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6996396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5490886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5271291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7003322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5498533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7154136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5617999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6892567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5688877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6995419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57091105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.660321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5246957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70547414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54554325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6880142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51881915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6898563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5607455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6958578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54004765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.681834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5355508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6854797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54006773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.697254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52481425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7143036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.562115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69457173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5446276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70723426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.596814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68724734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53265417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7063263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5364472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69924605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5415567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65683514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5137939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6558259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5569108], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6925497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51488686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6890416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53961915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71615994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5707253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6933671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.537462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6913736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53022575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70492387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5329557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6948966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5376431], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69250304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5257984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6984925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5404322], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68462175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5518374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 24.0
CUMULATIVE NUM SOLVED: 24.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0]
Tasks solved: 10 / 10
Average time for successes: 1.39977 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.399766961482237, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4702, 'query_cost': 0.0, 'learning_time': 273.8562403539545})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3732 datapoints
Loss: 0.01469, iter: 0/100000
Loss: 0.02532, iter: 1000/100000
Loss: 0.00412, iter: 2000/100000
Loss: 0.00734, iter: 3000/100000
Loss: 0.01272, iter: 4000/100000
Loss: 0.00207, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5358.
Loaded best model with loss: 0.00090
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6766007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5595933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6998549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57857245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6951196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5761385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69369715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5686836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6816268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.560977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72671115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5682488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6986602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56840765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6787931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5411948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6952022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5780183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6869818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55852437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6843485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5701625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.25313288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.2642186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.25721377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69255066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5493149], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6992239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.57484865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6860464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5616172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6953922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55479777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.700907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55835456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6702432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55208147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23712023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29239064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2636958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27552035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27928334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24293067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26683283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2684279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27326772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28460705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.262903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27092373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28196532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25982866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25177315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.273607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25724894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23567256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2719771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26940402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27995852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26687607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2746488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2733616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2691864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26972017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2835746], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7021724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5657252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.664203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5598365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3459619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2929897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30991387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.331471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31330934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32374272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3432589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31410804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31923595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30860075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32080457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31988576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32514328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32755893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31779718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32693878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34676117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30549443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.33244485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3304805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32338798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.32442567], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7021861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.562919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6812924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5593315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6966593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56055284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7088123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.58159125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6943571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5419071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6664577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5678251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35493094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33091217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33181223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33187142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3313565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3295544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.30911624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31901082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.36979404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32089394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33437946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35032567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33969712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31363145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35284963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32033345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31033668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34565818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3262494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33871934], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69748193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5608028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69086933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55610085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6698865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54911274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6897744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5829409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.27967194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.2643131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.25658095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.25640678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.2508745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.26046893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.27045172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.27654538], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69827056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55337316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69844824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.563451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68757516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55506754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6959594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5806793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 29.0
CUMULATIVE NUM SOLVED: 29.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0]
Tasks solved: 5 / 10
Average time for successes: 1.47914 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.4791351824242156, 'avg_ref_cost': 2.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4962, 'query_cost': 0.0, 'learning_time': 296.5306933479733})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3845 datapoints
Loss: 0.00238, iter: 0/100000
Loss: 0.00301, iter: 1000/100000
Loss: 0.01037, iter: 2000/100000
Loss: 0.01335, iter: 3000/100000
Loss: 0.00303, iter: 4000/100000
Loss: 0.00295, iter: 5000/100000
Loss: 0.00340, iter: 6000/100000
Loss: 0.01499, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7806.
Loaded best model with loss: 0.00013
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67968595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52383935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69384754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52580875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69967556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50677156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6949642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.543872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69716185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5228243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71538216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5322062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7090521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51478326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6923442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5502025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6732517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51245445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70251983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7009456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51569796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70612985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5410106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6989099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5456006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6919592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52186674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6981471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52706546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6863125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5421088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.697557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5261479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6809025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51001865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6944783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5242081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69639754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52225417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69660157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54112995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69668204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53203475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6952503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52476305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7037569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5445718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70624316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5317716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6874651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5237198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6683289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48682758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69313276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5485424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7088073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5304189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7232356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.521905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6997373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5285654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6707436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51605177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69734234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5301822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6940283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5236134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53074294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7078298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51920575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5196007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6962537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54388875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.68736637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55255365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6718126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52184564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 39.0
CUMULATIVE NUM SOLVED: 39.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0]
Tasks solved: 10 / 10
Average time for successes: 1.43443 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4344340701267355, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5135, 'query_cost': 0.0, 'learning_time': 323.6841937099816})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4049 datapoints
Loss: 0.03456, iter: 0/100000
Loss: 0.02038, iter: 1000/100000
Loss: 0.00384, iter: 2000/100000
Loss: 0.00231, iter: 3000/100000
Loss: 0.00217, iter: 4000/100000
Loss: 0.00297, iter: 5000/100000
Loss: 0.00232, iter: 6000/100000
Loss: 0.00357, iter: 7000/100000
Loss: 0.01305, iter: 8000/100000
Loss: 0.00371, iter: 9000/100000
Loss: 0.01104, iter: 10000/100000
Loss: 0.00368, iter: 11000/100000
Loss: 0.01825, iter: 12000/100000
Loss: 0.00922, iter: 13000/100000
Loss: 0.00389, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14216.
Loaded best model with loss: 0.00038
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7185461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57269126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73877066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5740901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7173925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5801102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70482665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5582288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71837646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5728436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7238299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5819456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.687926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.57938325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71547383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5828468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71585995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5862616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68419987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5697637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6914906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5681304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7197839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56494075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7107133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.60127014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2727603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01035606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02809398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03359738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0575773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03207936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00333605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02129854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02110641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00480083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01627701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01760736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01074551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0033795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00814256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01655475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.02990842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03271254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01628213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0082682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00453564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00930127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00878306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00544784], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68354404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58276284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3555252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3648281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34864402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36136898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3568078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35589936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35254017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3362721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3415184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37123933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32586956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36074078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36101258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3564655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3631029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34069547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3772337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35146534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3269222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35493928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34148845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35936853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36112377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34527218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33809114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34621817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33269873], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7197537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5663605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71377796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54917836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6971208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56690603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69584566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5811457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.68400747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57585996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3379314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33255032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32870212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32109547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33255014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32697985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3487156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32278165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33174953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32689926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32867774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.30938154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31386602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.2972856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32228515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33207154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.33171928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.30748022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.31220704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3256823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32905564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.34831366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.32958648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.3195979], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7429563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5820233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72095686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57851434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69881475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5810096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70829254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5729117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72454983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5585593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71688205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55943155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6960843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5874301], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5670942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69304734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.58288205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72202533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5718168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7253881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5645227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70415384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.57755816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 46.0
CUMULATIVE NUM SOLVED: 46.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0]
Tasks solved: 7 / 10
Average time for successes: 1.40432 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 7, 'num_total': 10, 'avg_suc_time': 1.4043164569551922, 'avg_ref_cost': 2.0928571428571425, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5404, 'query_cost': 0.0, 'learning_time': 362.19184129399946})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4209 datapoints
Loss: 0.00417, iter: 0/100000
Loss: 0.00791, iter: 1000/100000
Loss: 0.00623, iter: 2000/100000
Loss: 0.01468, iter: 3000/100000
Loss: 0.00248, iter: 4000/100000
Loss: 0.00443, iter: 5000/100000
Loss: 0.00907, iter: 6000/100000
Loss: 0.00276, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7162.
Loaded best model with loss: 0.00126
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7286872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5261676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72710127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54215586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7309644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5266453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7222138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5186477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72547466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5244364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7248033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5216873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72602487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51968676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7366665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5408952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7382892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53794587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73851424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5739218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.728693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5314408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7416388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5387015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7371446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5388425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75719476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5411877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7276688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5543591], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7562801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5612424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7407183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54963726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76447034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5373117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7208579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5234303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73005396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54204243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72387224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5568754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76744795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5394789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76829445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53489214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7384815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5544761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72243446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.526368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.737361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5498853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7297241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52195966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7373948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5304269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7297551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52463347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7253229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53552675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7217922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5370487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72496367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53578705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7341628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55394435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7756928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5216448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74882424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53925997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72088593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52326125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7195255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5085097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7535159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5410661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7299394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55249906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7291493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5158291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 56.0
CUMULATIVE NUM SOLVED: 56.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0]
Tasks solved: 10 / 10
Average time for successes: 1.43291 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4329063922719798, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5624, 'query_cost': 0.0, 'learning_time': 389.5908496869961})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4346 datapoints
Loss: 0.00686, iter: 0/100000
Loss: 0.00272, iter: 1000/100000
Loss: 0.00301, iter: 2000/100000
Loss: 0.00458, iter: 3000/100000
Loss: 0.00307, iter: 4000/100000
Loss: 0.00522, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5568.
Loaded best model with loss: 0.00105
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69998485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.560723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7563034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5507407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72916365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5729113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74473584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55806506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7541191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55785584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72454923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.57136774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76086664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5361086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76015955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5522496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7215485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5724666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76657975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5268755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7576573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5368295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73813874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55941147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7565796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5351667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.747344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55645293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76028436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.543144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7575541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57240254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7590816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5297762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7244129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5435433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75277764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5601398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7584066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54065377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7354179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5637315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7749048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55495054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73651874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5588205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7594161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.576453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76316774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.532445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7748486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55366755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7643219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53395176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73497236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54580367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.763432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5345647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7598896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5865296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7598016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5250973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7608248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53178775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7616633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5418118], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73752576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5610268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7574912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5623784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7585168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54281646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76857746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54723436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7391632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55150235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76145023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5408398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7316334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5594538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 66.0
CUMULATIVE NUM SOLVED: 66.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0]
Tasks solved: 10 / 10
Average time for successes: 1.43608 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4360794195003108, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5818, 'query_cost': 0.0, 'learning_time': 414.92271691799397})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4461 datapoints
Loss: 0.02286, iter: 0/100000
Loss: 0.00820, iter: 1000/100000
Loss: 0.02031, iter: 2000/100000
Loss: 0.00500, iter: 3000/100000
Loss: 0.00708, iter: 4000/100000
Loss: 0.02709, iter: 5000/100000
Loss: 0.00574, iter: 6000/100000
Loss: 0.01698, iter: 7000/100000
Loss: 0.00426, iter: 8000/100000
Loss: 0.01356, iter: 9000/100000
Loss: 0.00324, iter: 10000/100000
Loss: 0.02551, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11332.
Loaded best model with loss: 0.00141
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7191982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57008386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73303235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56939906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7486594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56225175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72588545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5628988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7088017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54058564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.736812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5606515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73261064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.58551294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7378749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56818116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7618907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5508878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70917356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52459204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7550824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.68947196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5588573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7279705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58821696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.737824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5625527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7369257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5558084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7220414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5861226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73939043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5703036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7262305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5636885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74948865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5492805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7276395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5573442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72453374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5673465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.729845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5659739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7232241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56012577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.729009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5770219], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73971903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5760642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7484215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5536867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7307424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5522638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7228463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5604792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71631557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53851664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73010623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56028867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7497193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55298203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7586986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56389487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7348053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5170601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72621083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56106734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7247167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5272402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7239584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5647352], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72658974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5453409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77180403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5434316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.729086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56697726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73624855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5535723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 76.0
CUMULATIVE NUM SOLVED: 76.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0]
Tasks solved: 10 / 10
Average time for successes: 1.43561 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.435607743196306, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5983, 'query_cost': 0.0, 'learning_time': 450.11395662199357})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4603 datapoints
Loss: 0.01530, iter: 0/100000
Loss: 0.01477, iter: 1000/100000
Loss: 0.00381, iter: 2000/100000
Loss: 0.01891, iter: 3000/100000
Loss: 0.00258, iter: 4000/100000
Loss: 0.00435, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5977.
Loaded best model with loss: 0.00150
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81504047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5964681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78679657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5983678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8032592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58259505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78972137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56706107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7967473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.59548146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79077375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6033981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06909241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8145418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5987141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81399095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53942066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7857115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5446161], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81018037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5999459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.797033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6006078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.11534197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80820096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.6034907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.07917266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81102663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5878557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8154526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5912275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7967313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.594723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8136467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5772065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8007687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60552776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06449924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81530434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56260157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79778326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5443501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8039773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.60806954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.09737398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75946325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5974695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8023866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6029055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06239215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7930661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5949794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81397605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.59068954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8133093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.58531195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7980245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5602824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.805694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.59156245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81038254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5954885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.811771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6047294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07442839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8066253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.59672743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8063802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.59017545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7977796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5905932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7955442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.601463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06843583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8145703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.59817904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81425625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.6055711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.07075081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79971856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.6049403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7015038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5967412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7720488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5777067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77918786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.6038843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.06142344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8135347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.6038544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.06829946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 79.0
CUMULATIVE NUM SOLVED: 79.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0]
Tasks solved: 3 / 10
Average time for successes: 1.53688 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 1.536882866358307, 'avg_ref_cost': 4.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6190, 'query_cost': 0.0, 'learning_time': 476.9496896920027})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4744 datapoints
Loss: 0.00562, iter: 0/100000
Loss: 0.02418, iter: 1000/100000
Loss: 0.00689, iter: 2000/100000
Loss: 0.02950, iter: 3000/100000
Loss: 0.00940, iter: 4000/100000
Loss: 0.00661, iter: 5000/100000
Loss: 0.00614, iter: 6000/100000
Loss: 0.00407, iter: 7000/100000
Loss: 0.00963, iter: 8000/100000
Loss: 0.00388, iter: 9000/100000
Loss: 0.01579, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10775.
Loaded best model with loss: 0.00046
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73890764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5282507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7328658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5568835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7334323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53569067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7351467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.556375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7479623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5378912], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7282036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5558012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7344812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5340915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.727739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5426336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74502915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.544873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72884065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5443538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72851324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5557925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7229149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55244106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76126313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58426726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7613326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54172665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7355293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54125404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73151964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5285403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7221996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49161616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7346146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5207221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75164735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5229556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7109877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5563834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7269505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52778226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74162537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52984345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71225417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5429671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73798233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51717544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7228078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54233587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7409968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5441194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7358849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53936315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72702974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5499612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.732565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5336617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7348873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.534742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7452637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53126323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7134745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55659187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7412458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5409484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72804326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5510857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7440282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5272075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7470848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5110785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54046774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74022716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5513469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7528681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.530496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7565042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54361546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 89.0
CUMULATIVE NUM SOLVED: 89.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0]
Tasks solved: 10 / 10
Average time for successes: 1.40320 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4032045631844086, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6409, 'query_cost': 0.0, 'learning_time': 512.3140093910042})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4833 datapoints
Loss: 0.00586, iter: 0/100000
Loss: 0.01685, iter: 1000/100000
Loss: 0.01403, iter: 2000/100000
Loss: 0.00372, iter: 3000/100000
Loss: 0.01482, iter: 4000/100000
Loss: 0.02075, iter: 5000/100000
Loss: 0.00924, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6862.
Loaded best model with loss: 0.00117
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7372928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.514252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7559226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5245475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76025873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5070021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7411806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5265498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76111287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5127106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7559707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4978318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7454735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5305105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7137544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52861136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74770766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51952374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7521696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5112741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7545548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50861764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7329222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5246096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74990183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5231023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7543685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5237978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74847496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49900368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.749401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5195871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7528396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54760784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7565233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51044786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73913676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5244879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7278584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52981424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7248386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51786727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74435127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5239779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69390404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52621275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6910375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52218664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74127007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55437875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7477108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53078043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73044276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52111256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73587877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52374727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75639033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5123122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7542165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51241404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7533017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.515916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7501926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51837975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7430892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5233908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75444126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49049574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7189593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5031345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73867506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5384222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6964033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49707863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7542366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51567614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75192255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5236931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7346245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51614445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 99.0
CUMULATIVE NUM SOLVED: 99.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0]
Tasks solved: 10 / 10
Average time for successes: 1.40146 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4014585390890715, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6556, 'query_cost': 0.0, 'learning_time': 541.5849962079956})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4970 datapoints
Loss: 0.00561, iter: 0/100000
Loss: 0.00489, iter: 1000/100000
Loss: 0.01268, iter: 2000/100000
Loss: 0.00505, iter: 3000/100000
Loss: 0.00549, iter: 4000/100000
Loss: 0.01429, iter: 5000/100000
Loss: 0.01030, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6740.
Loaded best model with loss: 0.00148
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72466785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5900044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73281384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52068305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72609884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58059704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7198585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5722735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7223586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5711515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72212857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.59392947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71867955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5739447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72096765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58380806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7036644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5876371], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71163785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5789847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7167173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.57893217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70245165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.59173805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7319404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.556218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72588456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5735169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7268832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5848841], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72874385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.58576846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72431684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5789648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7326221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.570979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7140386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57433945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72273993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55517995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71116364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58787876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7310222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56697524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72093695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5633311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73248744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54928905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.719328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5805813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7318615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5573539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.58818185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79410625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72360945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57547253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71163875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.58288205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72249436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5876047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7228056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5669656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.691975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5585465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71357006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5330548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7026721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58558357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70912707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5727448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6775514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57270634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.10218069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.0832926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.09300456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.08843374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.11598419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.07679198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.09154059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.12833619], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7200494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5901902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7192943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57833016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.748035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5497103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7297555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56477463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 108.0
CUMULATIVE NUM SOLVED: 108.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0]
Tasks solved: 9 / 10
Average time for successes: 1.39808 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.3980844320839323, 'avg_ref_cost': 1.6166666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6746, 'query_cost': 0.0, 'learning_time': 571.078868031007})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5110 datapoints
Loss: 0.01462, iter: 0/100000
Loss: 0.00500, iter: 1000/100000
Loss: 0.01032, iter: 2000/100000
Loss: 0.01869, iter: 3000/100000
Loss: 0.00535, iter: 4000/100000
Loss: 0.02688, iter: 5000/100000
Loss: 0.01153, iter: 6000/100000
Loss: 0.00776, iter: 7000/100000
Loss: 0.02071, iter: 8000/100000
Loss: 0.00370, iter: 9000/100000
Loss: 0.01247, iter: 10000/100000
Loss: 0.01208, iter: 11000/100000
Loss: 0.01352, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12736.
Loaded best model with loss: 0.00110
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82172656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5378973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8250223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56048465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8309318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53310645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02460996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03447119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03731548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02804585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02104566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02686811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02653228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01886104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01342732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02177821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02467511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00979295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02319483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01218897], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8135875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55359995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8180521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55320495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.58705246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7644022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8042128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5566139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8159059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5264286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81225115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5583049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8223796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5558946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.817966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5373364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5866823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74970853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8162794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56160206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80627316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55006045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8220283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5428254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8199697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54462993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8241756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5593552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8422798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5445745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03125091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01857557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01487542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00616313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00713984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00778178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00411643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02613353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00286301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00337862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03923259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03358754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07304695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0257187], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8264741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5519044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00459401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00948236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00277223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8158193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5653947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81256324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5364453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8243244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.539437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8201843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5573161], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56058156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7957379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.589628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7384188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8163171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5526334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8177214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55740494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7988037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54412127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82171667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54672587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8063609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54577714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8054763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5552086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80705893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5590088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80228335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55998707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82349247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.550122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81227404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54798144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.571968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7739385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81222385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5406857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.83785903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5652416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01507555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.002799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.03560463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.00641017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01622507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01071515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01900944], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 114.0
CUMULATIVE NUM SOLVED: 114.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0]
Tasks solved: 6 / 10
Average time for successes: 1.47893 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 6, 'num_total': 10, 'avg_suc_time': 1.478930789133301, 'avg_ref_cost': 2.4499999999999997, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6947, 'query_cost': 0.0, 'learning_time': 610.9886356120114})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5168 datapoints
Loss: 0.01278, iter: 0/100000
Loss: 0.02283, iter: 1000/100000
Loss: 0.01503, iter: 2000/100000
Loss: 0.00521, iter: 3000/100000
Loss: 0.00488, iter: 4000/100000
Loss: 0.00673, iter: 5000/100000
Loss: 0.00336, iter: 6000/100000
Loss: 0.00505, iter: 7000/100000
Loss: 0.01567, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8146.
Loaded best model with loss: 0.00168
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7450896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5447196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7560936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53270787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73522514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5440583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77872735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7256187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5616985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74364704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5941959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7444225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5469657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7271749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56029135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7438133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53342235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73558474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5628581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77159286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55127686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7169294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5466936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7607514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5307584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75607395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5524983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7607952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5330257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72858226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55572915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7375241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54455847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7463991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5396204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.736676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57452357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74165195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5398442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74467534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54895544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73934376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53048563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7443474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55254793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7319694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54296684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74870276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.541616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7485548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55704457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.760688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5384371], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75227046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5505169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74959505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5380408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7364258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54829484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7454089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54359955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7440226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54106736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74265957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5418641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7854216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55698794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74605215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5338857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7437472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53774786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76846105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55878085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7362578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5405719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7415605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5404029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7412146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55366856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 124.0
CUMULATIVE NUM SOLVED: 124.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0]
Tasks solved: 10 / 10
Average time for successes: 1.48570 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4856986258062534, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7049, 'query_cost': 0.0, 'learning_time': 643.4087074460112})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5257 datapoints
Loss: 0.00335, iter: 0/100000
Loss: 0.00331, iter: 1000/100000
Loss: 0.00632, iter: 2000/100000
Loss: 0.00740, iter: 3000/100000
Loss: 0.01238, iter: 4000/100000
Loss: 0.00571, iter: 5000/100000
Loss: 0.00349, iter: 6000/100000
Loss: 0.01183, iter: 7000/100000
Loss: 0.01981, iter: 8000/100000
Loss: 0.02138, iter: 9000/100000
Loss: 0.00492, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10478.
Loaded best model with loss: 0.00087
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7133318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5520722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73055416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5265852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7319582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.518433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7222413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5188684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72010225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5101365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7807492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5536685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7631979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5654469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73946357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5182015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7231656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51727307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7251165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5188506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74409497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5198491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7297708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5379744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7472719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5251137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.719002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56219876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7467265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5224682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.727505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52541554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7224142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5144876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72404045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5299605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72797364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52400565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73826057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5179373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7311312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5082645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72354466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51959735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72187597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53269696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71676195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5295979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78606105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5418031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73444283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5070956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7160616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53051054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7284648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5290152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75290346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5789057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.723142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5271164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7309361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5310847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72430176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5185564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7303983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5297583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71541303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5355568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72150314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5249596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7465769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53355247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.721752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5442379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72430974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5122071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7495608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5320254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72390366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53128654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 134.0
CUMULATIVE NUM SOLVED: 134.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0]
Tasks solved: 10 / 10
Average time for successes: 1.39978 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3997752228024183, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7194, 'query_cost': 0.0, 'learning_time': 680.1905444120057})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5362 datapoints
Loss: 0.02709, iter: 0/100000
Loss: 0.00537, iter: 1000/100000
Loss: 0.04190, iter: 2000/100000
Loss: 0.00391, iter: 3000/100000
Loss: 0.00474, iter: 4000/100000
Loss: 0.02054, iter: 5000/100000
Loss: 0.01438, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6140.
Loaded best model with loss: 0.00159
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7870109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48993173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.788572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7907662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5037406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78045416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47332987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7921627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52104187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7393701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48814252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78491896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48976552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78373075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4751491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7906582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48623845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7648111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4651526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78231716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51244146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79298407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4603934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73385864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4877621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78335285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46947882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78508663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48253596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75761586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48321837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7805538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43690434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7947882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47331282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7689854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46451205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77444875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46254167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7655175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47169814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7897521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45682257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78979033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46145174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7933353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46656147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7767244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4818385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7826845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47458944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76067305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47335508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7548992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48279163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7878949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48365763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7957609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48667377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.773069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47748297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79130906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4722449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78734887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46708095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79152435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48704168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.792506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.425303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7783964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46225557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7954801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46213043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79169494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47699487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76705676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47330344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7683323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47421318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 144.0
CUMULATIVE NUM SOLVED: 144.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0]
Tasks solved: 10 / 10
Average time for successes: 1.39993 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3999322598130675, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7349, 'query_cost': 0.0, 'learning_time': 710.2685192570207})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5411 datapoints
Loss: 0.00939, iter: 0/100000
Loss: 0.01918, iter: 1000/100000
Loss: 0.01104, iter: 2000/100000
Loss: 0.00563, iter: 3000/100000
Loss: 0.01076, iter: 4000/100000
Loss: 0.00616, iter: 5000/100000
Loss: 0.01063, iter: 6000/100000
Loss: 0.00642, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7040.
Loaded best model with loss: 0.00142
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78235847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.556199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78346467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5529668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8017914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5567788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80106455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5683061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7673132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5596899], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7807757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55859673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7836635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51169616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7684961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5512478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79231554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.58064383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7845226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55287004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77797186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5214193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7751283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5628254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.770257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5552343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79912555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5829838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7969538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5508686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7719662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5350053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78808546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5545822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7851328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5298503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77182895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5195976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77321434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5366976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7678538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5610429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7578621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55640227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.808451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5713856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7663949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56061363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80399984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5602583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7730878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5637202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7412315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5483823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7721528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56300056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79932296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5638886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76833147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5582637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78981674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5613545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7924766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54958516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7726526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.56820196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7743712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5649428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77220774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5508498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77550834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5551885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8313828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5716453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7958943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56284666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77695197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5479361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7777028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5696837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 154.0
CUMULATIVE NUM SOLVED: 154.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0]
Tasks solved: 10 / 10
Average time for successes: 1.40036 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4003569482971217, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7438, 'query_cost': 0.0, 'learning_time': 742.0554342390387})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5468 datapoints
Loss: 0.00534, iter: 0/100000
Loss: 0.01068, iter: 1000/100000
Loss: 0.01716, iter: 2000/100000
Loss: 0.00523, iter: 3000/100000
Loss: 0.00614, iter: 4000/100000
Loss: 0.00327, iter: 5000/100000
Loss: 0.00668, iter: 6000/100000
Loss: 0.00562, iter: 7000/100000
Loss: 0.01906, iter: 8000/100000
Loss: 0.01598, iter: 9000/100000
Loss: 0.01037, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10418.
Loaded best model with loss: 0.00122
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7335427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.58917737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08643217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73296916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5952971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07742602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07079555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0768405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0942278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07891215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08508863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07041284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09938669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07183413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08550731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08281361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07616028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09249069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08814828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07348405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.07715021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06238681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09210721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.08401007], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7409628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5895789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06239034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05839075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04449507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06639041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06274571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06319494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04283322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05869885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07975148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08242237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05191069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06329729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0697841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06375971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08816202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05786932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07047949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06330445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0628668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04145208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05595272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05621129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06555887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06224517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06656721], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7468491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5606852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.722103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.615971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09218103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23774801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23196244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23194307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23651476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22949953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7325305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5836735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72712636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.59713984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.08835948], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7365108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5858252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73892695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5809323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7345248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5843314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74145454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.57340384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7361896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54221964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7397731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58138424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7224326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5768985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.751901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5700413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7598052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.553001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7420188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5902782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0614697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03394752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06919633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06450978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06401927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04908568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07031343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05918423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02270419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06836092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06870909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06307822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0434506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07127807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03501678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02160097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06576221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07077692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0475764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07449836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08062435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07385758], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7326576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5371116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74656457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58574504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77568257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54279774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7496219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.574181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73662484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5963345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07654754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08391966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.065029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07488096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07766636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1141201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06955843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08270787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07594196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07004832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10227338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07315509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05796673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08102724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07979775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10701342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.10905749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08920836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08338268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07650143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0730245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.09162999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07795268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.07639646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08635057], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7315897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5925383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06240635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07196698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.09072563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05394786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.08680066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0669166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.09088072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.08215437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.09144623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.08962012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0807399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05796089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06321451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07159222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0601462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07578266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07699686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.06960679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.0678975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.07637486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.090919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.09832367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.03946574], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73200846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5720576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76230776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55491656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7493529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5689702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72818446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5810669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 158.0
CUMULATIVE NUM SOLVED: 158.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0]
Tasks solved: 4 / 10
Average time for successes: 1.40148 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 4, 'num_total': 10, 'avg_suc_time': 1.401480241001991, 'avg_ref_cost': 3.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7532, 'query_cost': 0.0, 'learning_time': 779.5340302050172})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5535 datapoints
Loss: 0.01348, iter: 0/100000
Loss: 0.01720, iter: 1000/100000
Loss: 0.00976, iter: 2000/100000
Loss: 0.00384, iter: 3000/100000
Loss: 0.02043, iter: 4000/100000
Loss: 0.00886, iter: 5000/100000
Loss: 0.00487, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6465.
Loaded best model with loss: 0.00162
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7869673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49794477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7676135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5030308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78629786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5004647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82429665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49551854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77747935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5090562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02680477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02002854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00618649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00215384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00225809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00080519], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79093903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49787113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78620183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49935392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81795573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4999263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8033632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49942428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7710158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4846314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7925356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49662778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77902997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5306485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.02148513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.02046777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.0016876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01141829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.01621529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.02854102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.03627253], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76851434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7869349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49822548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7814473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50539356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00912522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01430139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00204578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00386284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00714277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00813027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7987622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5010984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8018871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50920516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7849989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5186777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00982979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0034226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01675899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0044081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00076437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0055338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00047488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01798787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00197406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02414714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0118677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00770433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00277344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00729208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03863893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00718885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00903172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00777441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00216902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01737128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00325241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00053047], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7924544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48473406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78284454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51448244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01768173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0027061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.001402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0058576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00695679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00074448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02621565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00384055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01413848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02068553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00576536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0035632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00105151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00692302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01158323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0113995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0234857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01609494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01996236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00595286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01476849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01152671], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78110826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49972653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7705627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5038995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7915385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49346927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77745265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5018972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00755695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.007745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78012615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4879864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7762754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48061702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78276515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52052337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01236505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01759958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00649974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00415925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01364462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00887894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00638092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.02381022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00564401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00998548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01978028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01022384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01113685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.02019305], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7679422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50538987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7941292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49854296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78763807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49596852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77818024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5359593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.02154105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00355481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.02704995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.02312624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.03745248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.01398326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00521004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.02338907], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77958393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4859755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7425204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54624695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80117714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47869223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79524326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5065387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 160.0
CUMULATIVE NUM SOLVED: 160.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0]
Tasks solved: 2 / 10
Average time for successes: 1.41916 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 1.4191635879833484, 'avg_ref_cost': 7.449999999999999, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7636, 'query_cost': 0.0, 'learning_time': 810.7954678680107})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5646 datapoints
Loss: 0.01530, iter: 0/100000
Loss: 0.00816, iter: 1000/100000
Loss: 0.02015, iter: 2000/100000
Loss: 0.00746, iter: 3000/100000
Loss: 0.01064, iter: 4000/100000
Loss: 0.00384, iter: 5000/100000
Loss: 0.00698, iter: 6000/100000
Loss: 0.01371, iter: 7000/100000
Loss: 0.03038, iter: 8000/100000
Loss: 0.00964, iter: 9000/100000
Loss: 0.00389, iter: 10000/100000
Loss: 0.00485, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11230.
Loaded best model with loss: 0.00091
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7851263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52317613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7805085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5318653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7707926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5058354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78464437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5395248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7717171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53192466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7759805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5483951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7841074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55096173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7782868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47262222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.756833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51388705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7656129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.540587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78293633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54059917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7770323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5401063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.753792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5247242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77568096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50490487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7859786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47967118], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79822385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52922976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77749634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5190732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7921657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55156285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.776519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51780295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7409418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5222081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7837683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5303914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7734403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5096604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7836882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53799015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78840035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.540037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79189914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5147243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7670918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5257739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78186154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5179092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7684794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52048093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7452098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50078285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7801496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.533044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7812715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55128646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7774389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53386366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7796616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5370122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7854673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51167405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7754573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52529806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7742406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5245171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7878441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5392023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7952639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54090303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7867722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53378624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7885385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5110868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 170.0
CUMULATIVE NUM SOLVED: 170.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0]
Tasks solved: 10 / 10
Average time for successes: 1.39908 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3990836367855082, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7803, 'query_cost': 0.0, 'learning_time': 850.4151322559919})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5775 datapoints
Loss: 0.00615, iter: 0/100000
Loss: 0.00865, iter: 1000/100000
Loss: 0.02466, iter: 2000/100000
Loss: 0.00415, iter: 3000/100000
Loss: 0.01605, iter: 4000/100000
Loss: 0.01235, iter: 5000/100000
Loss: 0.00406, iter: 6000/100000
Loss: 0.01929, iter: 7000/100000
Loss: 0.00579, iter: 8000/100000
Loss: 0.02046, iter: 9000/100000
Loss: 0.02469, iter: 10000/100000
Loss: 0.00395, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11370.
Loaded best model with loss: 0.00053
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80584985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49590555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79828334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5006289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79919565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5021563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7892985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46951175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78514504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50056446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7979283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48820552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7916123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52655184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79054254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4844484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80269015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5132744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76724386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4957575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78914034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4852367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74042803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5221688], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80961335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50174344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7922114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.501728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7962609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48460445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77872443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4717254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7955163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50870776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7893302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5089863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8045801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5022305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79221743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49024114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79457104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5234495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7875375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49556747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74841136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5172343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7902574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49219105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79155904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50383687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5027113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7786938], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7952467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51478654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7963605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5055092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8130839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4973962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79018146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49954563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78742814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49710655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7596311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50833035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76272213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5103004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79426813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4897802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7982778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5065822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.724016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54865384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.797345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49213794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8010161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49651608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.809107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5048485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79710877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49248633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 180.0
CUMULATIVE NUM SOLVED: 180.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0]
Tasks solved: 10 / 10
Average time for successes: 1.45227 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4522674102219753, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8002, 'query_cost': 0.0, 'learning_time': 890.6878992719867})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5878 datapoints
Loss: 0.01426, iter: 0/100000
Loss: 0.01739, iter: 1000/100000
Loss: 0.01645, iter: 2000/100000
Loss: 0.00487, iter: 3000/100000
Loss: 0.03559, iter: 4000/100000
Loss: 0.00729, iter: 5000/100000
Loss: 0.02514, iter: 6000/100000
Loss: 0.00608, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7792.
Loaded best model with loss: 0.00156
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8368053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51366144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00333007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01525813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00748149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0145055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0106081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0096796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04779315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0032809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01961714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01188452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03243671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01540043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00760283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00748372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00893147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00024985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00306645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00179806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00322104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01174277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00621462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01691106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03631066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01827777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00531218], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84606224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51433814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09388193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07651677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08551547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08993285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1318654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07462224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0965011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09055001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09212974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09112126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07104398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07938657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09323703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06139959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06029277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08562474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06002581], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09755182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07816017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07526034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07506625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09757459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08914079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04572895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06395918], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7959852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51692265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86126596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55790615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11267938], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83242464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5248236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00275919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02709175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00543476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0349929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03128395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01793984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00649633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04692853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02662992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04848158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03617546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04462071], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84182596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5181042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06724463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08056596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07451384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07100295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07940106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0667146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06926598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08081083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06749059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06190323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05905024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07085019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08194698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07193522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01958592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07279683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07270304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06719191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07220013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06291713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0214126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08121963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05208096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03914532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06834663], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8400449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5233246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05875717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02411534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06686544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06047779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06217784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06360978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06262291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05676646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01388728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06478206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0546642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06795331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03202972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0438262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06171364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05485525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05790932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05520805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06111256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06484742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05869448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06693757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06714698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0662244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03571336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04629705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03520516], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8329903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5354223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01398122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02023026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02361348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02494014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00943081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02063479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01163522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05654945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0074214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03891572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02843586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03017022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00171746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03671114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03439161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00053138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01420206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03392383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02885612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00460255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0199644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00508872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03629595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01612382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00651805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00480327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00041797], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8375776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51707315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03803544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03078572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0351424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01065147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01196801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02604078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03965254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03346732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01527723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04386989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03944502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01727395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02665841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02993448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03265325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02481012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.009213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02820984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03956393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03176818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01750643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03191164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03573639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03839704], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.837989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5402947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1159892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12215142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11804312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11847056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13293739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11769925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08096793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04375777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11379265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10276705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12634817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12367817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1100869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11780227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11233485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11666834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10904835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12339432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04666705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11680443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09573857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08204465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10318124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12130774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12094427], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.82984567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5467776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.84299546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5163567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06935854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07774283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06592198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08420566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04055298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07127703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03852656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07184706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08854979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08672442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04722941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07281779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0641701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08049941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08000004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05023892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06030772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08529116], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8243822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52085364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81754243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5251793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8361831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5480689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.0626946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11456373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09877823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.0970548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09274083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.1150326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11335723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11049318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.1070427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09600088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09318893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.10781652], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 180.0
CUMULATIVE NUM SOLVED: 180.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8160, 'query_cost': 0.0, 'learning_time': 925.4318305769702})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5965 datapoints
Loss: 0.00901, iter: 0/100000
Loss: 0.00774, iter: 1000/100000
Loss: 0.00703, iter: 2000/100000
Loss: 0.01517, iter: 3000/100000
Loss: 0.00285, iter: 4000/100000
Loss: 0.01425, iter: 5000/100000
Loss: 0.02204, iter: 6000/100000
Loss: 0.02223, iter: 7000/100000
Loss: 0.01329, iter: 8000/100000
Loss: 0.01265, iter: 9000/100000
Loss: 0.01364, iter: 10000/100000
Loss: 0.02123, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11674.
Loaded best model with loss: 0.00044
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85114676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.522095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02116401], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00021728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00301125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02140092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00136986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00437323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01486769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05053186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.83933294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5345369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83787394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51465505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.84434235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51416016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.85028446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53064346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00510005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01425153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02762469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82686496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5212455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.83027315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.512841], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83356065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5180352], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8391673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5101798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8312024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5190652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8330175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5126575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83295095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4837606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7903523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5188021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8438789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51652473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.842937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51416034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82962906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55430275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.836772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52303886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8433107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4870222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7919369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5171105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83435446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50916904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8408316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51970786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83670133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53373116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.833942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54464394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8529955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52006197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06160286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.06182712], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8361941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49494496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8197388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5217491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83470625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5207104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.85506696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5125492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07427756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07439721], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8352055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5252745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8068694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51287764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8588573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51166445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02235998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0081167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.10987267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83618206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5118302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8395415], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8432959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5247531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82872623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51972586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8311566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5199359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8186766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5032743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 185.0
CUMULATIVE NUM SOLVED: 185.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0]
Tasks solved: 5 / 10
Average time for successes: 1.37809 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.3780907763866708, 'avg_ref_cost': 2.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8295, 'query_cost': 0.0, 'learning_time': 966.1855193709489})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6054 datapoints
Loss: 0.01796, iter: 0/100000
Loss: 0.04896, iter: 1000/100000
Loss: 0.02348, iter: 2000/100000
Loss: 0.00726, iter: 3000/100000
Loss: 0.00268, iter: 4000/100000
Loss: 0.01945, iter: 5000/100000
Loss: 0.00796, iter: 6000/100000
Loss: 0.01653, iter: 7000/100000
Loss: 0.00665, iter: 8000/100000
Loss: 0.01373, iter: 9000/100000
Loss: 0.01529, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10035.
Loaded best model with loss: 0.00167
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50552076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78397936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4823732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79415727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5019437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7981106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79871833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47730568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47303978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79648304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4913558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78701305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49068326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7821094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.487307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7646627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79551524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49326533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48782343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77360266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79838085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49998996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7793763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4671379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48742315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8010223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47553492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7799576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4946721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7971406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49141037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7925864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79411495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48921046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48251694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7929553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4856084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7968002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48791906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7840858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49185368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7933216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79860985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48788452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49129117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8084747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5002546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7844184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48448628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8018938], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48665863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7810128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47599283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7967023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48090583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7525356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4885474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7855665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79341453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50817126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47562462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79200685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49401766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7915486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48051572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8037107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48414007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7998079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47467586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78888774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49600688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7956572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7943863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49917138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47964206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7927881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79670185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49609333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6960073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 195.0
CUMULATIVE NUM SOLVED: 195.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0]
Tasks solved: 10 / 10
Average time for successes: 1.45496 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4549594048992731, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8433, 'query_cost': 0.0, 'learning_time': 1004.4369254699559})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6124 datapoints
Loss: 0.04161, iter: 0/100000
Loss: 0.01380, iter: 1000/100000
Loss: 0.01979, iter: 2000/100000
Loss: 0.00878, iter: 3000/100000
Loss: 0.02640, iter: 4000/100000
Loss: 0.02591, iter: 5000/100000
Loss: 0.00475, iter: 6000/100000
Loss: 0.00522, iter: 7000/100000
Loss: 0.01360, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8884.
Loaded best model with loss: 0.00166
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.814901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4651248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8117818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47425142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82187206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49582762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8160562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45122978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8273642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49180952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79228175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.435211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79373074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4331836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8132774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4726269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7978332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44037235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79481375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44911456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79413635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4545561], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.799582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46367508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7923515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44847986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7960363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44590622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8096055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4663073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8173737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48687112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79466105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44629622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7934053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47344565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8192533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48197162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7986579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45329648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8091328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50418323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8422665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5133337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04317692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01502262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00485548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02774471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04105794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01931162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02172103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00557658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02835488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0295454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02332848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01853503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05094718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02027279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02705232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01226146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02639944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0207256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0176001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01227638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04909685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0403159], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8132424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46434253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8097365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46069738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7966966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44844157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8073803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46046937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7972127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44478574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81967276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48492524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.793631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4327824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80341965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45248082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8002363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46316755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.809894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45717874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8415946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51929885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01976825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02313011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02596669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02729858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01767659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01027791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0179829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01571449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02749668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01050084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02105107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00485692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02693502], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7921086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46518898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7912992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4405437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8006205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44393024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81846297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46559685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 203.0
CUMULATIVE NUM SOLVED: 203.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0]
Tasks solved: 8 / 10
Average time for successes: 1.47147 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.4714735083543928, 'avg_ref_cost': 1.8249999999999997, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8548, 'query_cost': 0.0, 'learning_time': 1041.1021081479557})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6219 datapoints
Loss: 0.01221, iter: 0/100000
Loss: 0.01470, iter: 1000/100000
Loss: 0.00512, iter: 2000/100000
Loss: 0.00633, iter: 3000/100000
Loss: 0.01550, iter: 4000/100000
Loss: 0.01393, iter: 5000/100000
Loss: 0.00439, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6470.
Loaded best model with loss: 0.00101
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7916869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4901067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80906755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4767159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8045169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4732035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8171936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48407438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82582915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48389193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8066868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43516317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80918586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48094255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8203958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49706224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8280864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4738429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8082955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48398036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8152648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45616046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51259005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77073395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82711905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47376415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8110296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.485315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8223379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5109911], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8059926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47347504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81637996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48955134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8148452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.478892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8197219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5263527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7849175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47916007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80188775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4798304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8317426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52312964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8214309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4954226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.810701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47857863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83179593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47709927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81787497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47401726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8082115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48988724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78905225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48336753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8238579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5024291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8082346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48951206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82241386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49498174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7957854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48764426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5174065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76506704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82579595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5021566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8232077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49177065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80584127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4696353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81299525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4970872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81661975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4732075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8124672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42726445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8012558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48045403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 213.0
CUMULATIVE NUM SOLVED: 213.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0]
Tasks solved: 10 / 10
Average time for successes: 1.40015 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4001511363108876, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8698, 'query_cost': 0.0, 'learning_time': 1074.1624875949637})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6305 datapoints
Loss: 0.00914, iter: 0/100000
Loss: 0.01448, iter: 1000/100000
Loss: 0.01173, iter: 2000/100000
Loss: 0.00814, iter: 3000/100000
Loss: 0.00499, iter: 4000/100000
Loss: 0.00393, iter: 5000/100000
Loss: 0.02807, iter: 6000/100000
Loss: 0.00539, iter: 7000/100000
Loss: 0.02766, iter: 8000/100000
Loss: 0.00347, iter: 9000/100000
Loss: 0.00659, iter: 10000/100000
Loss: 0.01136, iter: 11000/100000
Loss: 0.01232, iter: 12000/100000
Loss: 0.01957, iter: 13000/100000
Loss: 0.02106, iter: 14000/100000
Loss: 0.01476, iter: 15000/100000
Loss: 0.02558, iter: 16000/100000
Loss: 0.00402, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17857.
Loaded best model with loss: 0.00155
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53001446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72760737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5251944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7433316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51141363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74465364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5060741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.759488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5259698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7307871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52682763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72678345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53713316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7522177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5173262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7824989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52183145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7568731], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5160523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77191114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5185022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75705934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5406548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74576163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5287803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74221087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49240163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7481564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51783276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7609565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53730845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75236225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.526604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7542859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5179174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76463556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5526124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.756453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5389416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74922025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53205717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7646006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50859135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75846857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5546422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.756454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51555604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75304353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5256025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.756982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52494246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75923395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53234476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7487382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52408737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74401397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5219608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.756565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52812016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74728644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50144583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7563876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53861785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7470289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54469496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74846876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51363313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7650185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5214612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73371387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5425866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.760291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5189327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7516695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51970786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75489897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5206544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7455557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5380481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7740391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 223.0
CUMULATIVE NUM SOLVED: 223.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0]
Tasks solved: 10 / 10
Average time for successes: 1.45656 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.456564893297036, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8830, 'query_cost': 0.0, 'learning_time': 1126.9823188509617})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6378 datapoints
Loss: 0.01509, iter: 0/100000
Loss: 0.02080, iter: 1000/100000
Loss: 0.01329, iter: 2000/100000
Loss: 0.00737, iter: 3000/100000
Loss: 0.00589, iter: 4000/100000
Loss: 0.01052, iter: 5000/100000
Loss: 0.00498, iter: 6000/100000
Loss: 0.00636, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7500.
Loaded best model with loss: 0.00177
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53381854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.784348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5050059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77226824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51988953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7655254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5131023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7817227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5282013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76738805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5490595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7817246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52158695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7718245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5020622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76763594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50276256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77118427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5120857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7734852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52236617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7853329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51911706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7616964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51753867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7672876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.515573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77035266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5139401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7637851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5287271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80805683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52087426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77660125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52320045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77219975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5460605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74006534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51753986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76280016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5156581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7626847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5155488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78451765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5229725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77691233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51219106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7773933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5042283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75738907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5128078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7656565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5153394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.776274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5130863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.768809], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5556994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7641042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51063573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7810344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5016049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73260486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52772886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.85549814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00873041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11153436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5076563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7774607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48896828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7855067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5296429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7700249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53310734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7698264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5194447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7835122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54717135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7635723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51230574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8022176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5090219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79099745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 232.0
CUMULATIVE NUM SOLVED: 232.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0]
Tasks solved: 9 / 10
Average time for successes: 1.39838 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.3983820116587191, 'avg_ref_cost': 1.6166666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8947, 'query_cost': 0.0, 'learning_time': 1163.114951875934})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6459 datapoints
Loss: 0.01010, iter: 0/100000
Loss: 0.00555, iter: 1000/100000
Loss: 0.03755, iter: 2000/100000
Loss: 0.01063, iter: 3000/100000
Loss: 0.01350, iter: 4000/100000
Loss: 0.00500, iter: 5000/100000
Loss: 0.00487, iter: 6000/100000
Loss: 0.01033, iter: 7000/100000
Loss: 0.01332, iter: 8000/100000
Loss: 0.01733, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9245.
Loaded best model with loss: 0.00195
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74760765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52238303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7416911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5230762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5285787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77636355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72178787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.564251], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73841006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5346917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75107044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5380765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7484501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50087935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74125063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52612466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7347393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5312696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.743702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54303825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7418723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5222047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54743695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7925463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74646324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5284592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7492116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5304918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7467879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5179254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73881704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51435184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7428609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5244062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7414895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5182667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73702043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5308324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73108256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50432795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75084805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53192097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7354153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5521341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54297423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7449803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7348934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5786405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7274311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5477913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7220302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53842026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5359462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78755003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74210984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5182013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75327295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5048235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54364055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7204031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5529709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7478907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5472048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73949236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5496813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.541553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7796311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74988514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52533853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7322511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5359759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72077924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5562047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5441038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77415437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74633867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5321478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5128638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7806981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 242.0
CUMULATIVE NUM SOLVED: 242.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0]
Tasks solved: 10 / 10
Average time for successes: 1.40104 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4010360046726418, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9075, 'query_cost': 0.0, 'learning_time': 1205.473486867937})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6490 datapoints
Loss: 0.02138, iter: 0/100000
Loss: 0.01478, iter: 1000/100000
Loss: 0.01665, iter: 2000/100000
Loss: 0.01766, iter: 3000/100000
Loss: 0.01011, iter: 4000/100000
Loss: 0.01352, iter: 5000/100000
Loss: 0.01395, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6224.
Loaded best model with loss: 0.00148
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7971374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5206765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7843888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53527606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51626337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7965851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5127636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7829402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5103673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7938202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51007986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7885998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5232964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78841394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50157124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79394597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54527056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7957252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51213735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79702693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5370282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7999655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5067947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79255736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5108245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79902333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.505835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7934845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53320646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7897917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5648674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8007092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5051961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7917031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49940056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79049075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5133085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7993888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5150242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7951124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50841117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77495855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5126383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7990917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4941487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79952306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51355046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76531833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4911844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.791511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52713776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7768608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5356031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7428579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5032203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78592294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53717625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79207355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5299885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7548025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50140685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7884898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.513231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78660756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53491145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79969174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5085784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79124147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49122116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7932602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.519658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77428603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5220119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7689454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5010123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79264575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50911105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77977425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52514225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 252.0
CUMULATIVE NUM SOLVED: 252.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0]
Tasks solved: 10 / 10
Average time for successes: 1.46199 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4619897685828618, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9141, 'query_cost': 0.0, 'learning_time': 1239.9939194309409})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6601 datapoints
Loss: 0.01246, iter: 0/100000
Loss: 0.01360, iter: 1000/100000
Loss: 0.01744, iter: 2000/100000
Loss: 0.00661, iter: 3000/100000
Loss: 0.01160, iter: 4000/100000
Loss: 0.01239, iter: 5000/100000
Loss: 0.01553, iter: 6000/100000
Loss: 0.02424, iter: 7000/100000
Loss: 0.01199, iter: 8000/100000
Loss: 0.02128, iter: 9000/100000
Loss: 0.01071, iter: 10000/100000
Loss: 0.00987, iter: 11000/100000
Loss: 0.01105, iter: 12000/100000
Loss: 0.00565, iter: 13000/100000
Loss: 0.00427, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14880.
Loaded best model with loss: 0.00019
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8255427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5122752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8287293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51879776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82680094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52756643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8322716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5085507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81320554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52663237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8256094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5306521], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.83215624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5071125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.817036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52488256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81716716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5057067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8260358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52246356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.817037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5168845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8350662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52591753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8287469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5258735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8344551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4748105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82343054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52674884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8038759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49962062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7711912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52033937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8141753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5054548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83353823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4996184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8078518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51906157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8348657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51861715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8316364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5216815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8283378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5256811], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83632094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5035266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83033127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5004038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78494126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5119122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80160135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50428694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.824223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4989281], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8346799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5354158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8268556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.505683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.819394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5290176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8352655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5296006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7722703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49972793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81605315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5202723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8318471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51549494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8268125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5089002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8248111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4908492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8347869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5277177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8221583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5205378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8184866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52654326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 262.0
CUMULATIVE NUM SOLVED: 262.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0]
Tasks solved: 10 / 10
Average time for successes: 1.53098 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5309780660201795, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9311, 'query_cost': 0.0, 'learning_time': 1288.1890720589436})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6690 datapoints
Loss: 0.01259, iter: 0/100000
Loss: 0.01121, iter: 1000/100000
Loss: 0.00642, iter: 2000/100000
Loss: 0.00830, iter: 3000/100000
Loss: 0.00551, iter: 4000/100000
Loss: 0.00675, iter: 5000/100000
Loss: 0.02644, iter: 6000/100000
Loss: 0.01202, iter: 7000/100000
Loss: 0.00521, iter: 8000/100000
Loss: 0.00362, iter: 9000/100000
Loss: 0.00648, iter: 10000/100000
Loss: 0.01606, iter: 11000/100000
Loss: 0.01239, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12729.
Loaded best model with loss: 0.00179
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73785365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5143589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7790814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.470534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7470525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4969546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7507186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.57035494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7377181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48714218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7892895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47709325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7626408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48860648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74859655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5032481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73830074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.512135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7397067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50439495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71888787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5199294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7248446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51409376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7377923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51747227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73689157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50304043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74680316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4955179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7387684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5375587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7621454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48706937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7344752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5495126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7696352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48791113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7503733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50734776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7448122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49554113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76268303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48955715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7459459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49740672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76823926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4692019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75996107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49494353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74242187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52299064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77312404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48422152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77096397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47424898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7526637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5053568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77449197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49188158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7371611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5027027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75774753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48132667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7537423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49900636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7352117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49723008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7150187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5458819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7225523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50440013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74242467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4885971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7456459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51267487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7444016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52373326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7454891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49960393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 272.0
CUMULATIVE NUM SOLVED: 272.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0]
Tasks solved: 10 / 10
Average time for successes: 1.53443 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5344273554190295, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9449, 'query_cost': 0.0, 'learning_time': 1333.11908312593})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6770 datapoints
Loss: 0.02128, iter: 0/100000
Loss: 0.00477, iter: 1000/100000
Loss: 0.01157, iter: 2000/100000
Loss: 0.00532, iter: 3000/100000
Loss: 0.01835, iter: 4000/100000
Loss: 0.00395, iter: 5000/100000
Loss: 0.01469, iter: 6000/100000
Loss: 0.00553, iter: 7000/100000
Loss: 0.00530, iter: 8000/100000
Loss: 0.02656, iter: 9000/100000
Loss: 0.01968, iter: 10000/100000
Loss: 0.01234, iter: 11000/100000
Loss: 0.01165, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12412.
Loaded best model with loss: 0.00141
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88157874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49012348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04172191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15940215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8797088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48700675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.16163784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.84523535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51308554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01570229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03371448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03940885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01427727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0223251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0183067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01659492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05014773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01652602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00582662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02114624], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8007599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48449057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.89195573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48309603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.17201279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8847008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.493358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.17128341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8895809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47225535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.18423116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8701063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48301256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15577321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8707223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48613334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15811415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7791173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4944028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.86877203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48581535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.04234224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.13992865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8749233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50127226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05885225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12059728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.86201894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4835469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07031546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12889887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87489337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.492256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06131203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.13338321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8674988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53593785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.13871963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88495636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50529385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16318773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8451188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48277298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08633474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08833063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05676135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.047781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05356782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05452697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04288445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06196688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06907232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05688094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08458752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02902105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04719523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04455602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0541317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0617741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05112337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0578664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04237781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07461382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0431294], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8820363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4590937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19954488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8724779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49608332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14820544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8763297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51076144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.14690116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.9943559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8784666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49180803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04581927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12713201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8844743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49613243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.16268726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8580468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4537272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8585261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.29053894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8815738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47219643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.17101917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.86273795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47546068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.15653859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8673306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5184457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01157621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.134457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87762636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4841957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1610256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87675214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48924288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1519568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8596427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5166438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.02231969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11030337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8785149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4782725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.18840824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87902594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5062414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05478376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15801428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8842741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49679098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07162695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11979937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.88500744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4956463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.16629338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88263637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4735534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15858798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8837382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47123843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1729452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.87870944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4971869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.07522383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12147492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8834334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5006533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.15764742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 272.0
CUMULATIVE NUM SOLVED: 272.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9574, 'query_cost': 0.0, 'learning_time': 1378.1857380839356})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6824 datapoints
Loss: 0.00350, iter: 0/100000
Loss: 0.01393, iter: 1000/100000
Loss: 0.00324, iter: 2000/100000
Loss: 0.02086, iter: 3000/100000
Loss: 0.03167, iter: 4000/100000
Loss: 0.00963, iter: 5000/100000
Loss: 0.00510, iter: 6000/100000
Loss: 0.01265, iter: 7000/100000
Loss: 0.00547, iter: 8000/100000
Loss: 0.00499, iter: 9000/100000
Loss: 0.01095, iter: 10000/100000
Loss: 0.00708, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11951.
Loaded best model with loss: 0.00187
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7965903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4804651], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77576095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5026225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7364322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5302751], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74146396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5283376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74113417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49132434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7345323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5383038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73604226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51069313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7471156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50650877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73393065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51524323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7415325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51021695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.506681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8198618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7311887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51565784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74066347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5089019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7333091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5221849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7302393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50693434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73112214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52118295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73689204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53130877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7323647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50088775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7235798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51327384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74576014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4948513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7497232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5556677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75532746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5077315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7464577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4975806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7349288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52188927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78255516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51775616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7436229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50886977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74002874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51660246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7321893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5208934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7260667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5219616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74812335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49917737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7294707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5256771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7396208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5351804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77903926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5144722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74155253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52436167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7330191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5111453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73855484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5094655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7291971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5171326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72142184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5428008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7483434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50834686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7353203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5195605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 282.0
CUMULATIVE NUM SOLVED: 282.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0]
Tasks solved: 10 / 10
Average time for successes: 1.60466 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.6046563006209908, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9676, 'query_cost': 0.0, 'learning_time': 1422.429357471934})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6871 datapoints
Loss: 0.01465, iter: 0/100000
Loss: 0.00435, iter: 1000/100000
Loss: 0.01159, iter: 2000/100000
Loss: 0.01071, iter: 3000/100000
Loss: 0.00719, iter: 4000/100000
Loss: 0.00580, iter: 5000/100000
Loss: 0.01992, iter: 6000/100000
Loss: 0.00480, iter: 7000/100000
Loss: 0.01122, iter: 8000/100000
Loss: 0.00821, iter: 9000/100000
Loss: 0.01440, iter: 10000/100000
Loss: 0.00864, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11060.
Loaded best model with loss: 0.00117
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5071826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77012694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4964818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76187795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5084045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77967685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4917278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7714974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49784875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74107707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5079902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.754894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5067814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78596807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48918274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7758424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5213321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7734149], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.515874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.754943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4927104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71359426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48823267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79033214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4922049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77104366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52135235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7744458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50870025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7729873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49337798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76669276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49130863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77515197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5045632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8115704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49206865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7750419], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.506814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7704991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5110689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.762943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48147085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7776482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5034349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7742137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77997404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48281574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7726835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49282932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7792872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5024335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7765604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78485435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48763463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73824286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47973952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7530369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49865514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7887004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5209516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7790949], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49201038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77896136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49212652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76361185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48681903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77878857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48658207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7686848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5035865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76833534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51397926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77714735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5110769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7595574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48995703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7507127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 292.0
CUMULATIVE NUM SOLVED: 292.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0]
Tasks solved: 10 / 10
Average time for successes: 1.46839 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4683913228393066, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9764, 'query_cost': 0.0, 'learning_time': 1465.3565734899312})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6923 datapoints
Loss: 0.00421, iter: 0/100000
Loss: 0.02974, iter: 1000/100000
Loss: 0.00586, iter: 2000/100000
Loss: 0.00749, iter: 3000/100000
Loss: 0.01882, iter: 4000/100000
Loss: 0.01476, iter: 5000/100000
Loss: 0.01773, iter: 6000/100000
Loss: 0.01616, iter: 7000/100000
Loss: 0.01848, iter: 8000/100000
Loss: 0.00510, iter: 9000/100000
Loss: 0.02558, iter: 10000/100000
Loss: 0.01181, iter: 11000/100000
Loss: 0.01667, iter: 12000/100000
Loss: 0.01442, iter: 13000/100000
Loss: 0.00858, iter: 14000/100000
Loss: 0.01766, iter: 15000/100000
Loss: 0.00854, iter: 16000/100000
Loss did not improve after 5000 itrs, terminating at itr 16118.
Loaded best model with loss: 0.00044
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51548326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7719101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4898367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78609735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4835645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79227024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5079315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77210397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5056397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7666835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48953643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79150313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49041638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78331214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49067488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80035084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5074703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7898532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48125446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80834866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5121343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76994014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48554578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7909569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49119082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7907129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49519813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78239936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4820553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7958783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48519567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7878447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.506427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77553415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48347375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83474225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06271202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04161235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04030804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04280127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02959504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08564405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03910197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06292027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03465539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03981524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06191265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.046319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04577605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02767979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03652281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03653373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03295128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04441078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04699584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05457265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05534016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02534557], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46095487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7969634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47350544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79802793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49082077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7948515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49161234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7848836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50321865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78159344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5049323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78398067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4945048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80256045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49751416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81640667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.460242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79962486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50202775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80156726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48511142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80763394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44834247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8341723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47537953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8004243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49870917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80578375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49184713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79662055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49177188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7949344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4970197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7567656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51832414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7860184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48278728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80507404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49361268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77930313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 301.0
CUMULATIVE NUM SOLVED: 301.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0]
Tasks solved: 9 / 10
Average time for successes: 1.48258 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4825771030057997, 'avg_ref_cost': 1.6166666666666663, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9853, 'query_cost': 0.0, 'learning_time': 1516.5951125039137})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6991 datapoints
Loss: 0.02155, iter: 0/100000
Loss: 0.02368, iter: 1000/100000
Loss: 0.00391, iter: 2000/100000
Loss: 0.02160, iter: 3000/100000
Loss: 0.01261, iter: 4000/100000
Loss: 0.01312, iter: 5000/100000
Loss: 0.00614, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6540.
Loaded best model with loss: 0.00083
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8168951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5354191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80963236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5257132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80768645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5289995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8221713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5148768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8312178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51183903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03080635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02993581], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0353784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05953539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03643712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02366165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02251189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03442495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10392808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02652526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02609213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04042929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03306507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03041949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02929835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03990306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03329941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03093113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03301392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01910591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02919321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04139899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02599398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02306078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0293287], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8382759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5191516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02399214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0230694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05819773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01366638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01922293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01039755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0458867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0166976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01596255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04728897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04320322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04483901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02458394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03920964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05698374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03482326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04097002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01486708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01890114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08356059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02111283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04199837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01767825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01783115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02558204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02394507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03889687], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83102167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51341945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03106031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03625557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03371706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02988843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03048733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04816604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0047508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03634121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01553106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01967441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02565433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02395113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03061435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02224111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03413751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02837782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07671565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06700918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06143768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04658137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0258603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02618785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02749865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02525718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03305141], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.842604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5158355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01957963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02651809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0608869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0448524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02357657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06280825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00527013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02019334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02250909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02396634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0293727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01841394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04072499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05923732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02078082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01801854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03137434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03463828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01687917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01526409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04017754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05571039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0221983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01967552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05093328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04254819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03919714], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.83333766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50036174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0347204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03807043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06745334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06039274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03411256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06101113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03561481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06615975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07211276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04075496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04217111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02637984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03361179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03232991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02997092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04586973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03530193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05161686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03105165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02821309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04438353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07159529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05616401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05656726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04702689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03489448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04142573], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.842162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5174666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02542858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01571912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06987427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04045165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01474045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01257041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00384566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04899349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01615002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01955774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02791875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04989173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01908408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0187207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0193489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02157753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03150377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01243971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03317899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04782596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03630041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02820895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02368019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02086517], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8387198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50956804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10436674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02774027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06336877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02656231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02162056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04132609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07511806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03149358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02680724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03071059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05788646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02164464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04192838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0267227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0181225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0572048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06983586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03267808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05640027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03085302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02724241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1093329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0506319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01919534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05161927], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.827226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49489644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05375208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05226409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0427225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05145174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05449426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04388852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04960045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05285621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04185458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05805877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05969356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05659828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.07712129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04001649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04234843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04745472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.07240711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.03896375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05415769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04344077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.03916869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.09032175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.03959209], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8316227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.509132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03772869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0578745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03747946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01953277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04156048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02585463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04132229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03146615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02546102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03410013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02508321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02583214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02739057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06688892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04944575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0321635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03283146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03916238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02105898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01990168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04027579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0671002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02567245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02870006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02442518], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 302.0
CUMULATIVE NUM SOLVED: 302.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0]
Tasks solved: 1 / 10
Average time for successes: 1.41663 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.4166341238596942, 'avg_ref_cost': 14.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9964, 'query_cost': 0.0, 'learning_time': 1553.2465397719352})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7046 datapoints
Loss: 0.00586, iter: 0/100000
Loss: 0.01742, iter: 1000/100000
Loss: 0.02765, iter: 2000/100000
Loss: 0.01117, iter: 3000/100000
Loss: 0.01491, iter: 4000/100000
Loss: 0.00407, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5222.
Loaded best model with loss: 0.00010
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49606472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7557621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50754446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78268623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50319666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7752608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51312304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78502953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55458623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7787017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50334984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76220375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5004958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74240077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51161855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.771197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50835496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.787125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50219625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50097394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7824269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49595645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7758165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49180925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7509971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49374348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7802219], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52681476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7758449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49877787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77695215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49341962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7751248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49648485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76863575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50804716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74947155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4825096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7950549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49236038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78663105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51527303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7642412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4881241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77158517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5426282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7628598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50443864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7655928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49019295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7735961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51927966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76713115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4960235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7810727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49360487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7986759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49995306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79212564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51243365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7846961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5253644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78017575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5192753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75916624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49943006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76863396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5103833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7843351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51028055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7877772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49946123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78074217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49453682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7819276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51893044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7836684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.505832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7894359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 312.0
CUMULATIVE NUM SOLVED: 312.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0]
Tasks solved: 10 / 10
Average time for successes: 1.47528 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4752794284868287, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10057, 'query_cost': 0.0, 'learning_time': 1588.1784319899161})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7112 datapoints
Loss: 0.01784, iter: 0/100000
Loss: 0.01510, iter: 1000/100000
Loss: 0.01302, iter: 2000/100000
Loss: 0.02531, iter: 3000/100000
Loss: 0.02194, iter: 4000/100000
Loss: 0.01545, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5448.
Loaded best model with loss: 0.00060
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50119835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80279386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5219307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79605323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53165716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8114281], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5159191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80539894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5042575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81453174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77283823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50818145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51579356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79493743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5191652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7817791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51541597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80368614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50680727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81426185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5107562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8211382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50327617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8176477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49780867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7931553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51216483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8005817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5292823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79438007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5275927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7893559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5360081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7992226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5031119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8177949], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.770497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5041358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5174483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8018624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52758676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78551376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5005924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8151353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50380504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79138935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5014861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8096359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50298434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7905919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5166427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7666281], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5021378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8078851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5021957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8042579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5114778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81877583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7743286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5105188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52152115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7752172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5219751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77552176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50025076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81240267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5283968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79904807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51252925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80929637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5156607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7814611], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7782817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49885872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5011967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83343667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01150023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01470212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00722379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51338184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8061692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5179772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7916337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 321.0
CUMULATIVE NUM SOLVED: 321.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0]
Tasks solved: 9 / 10
Average time for successes: 1.39704 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.3970363486571133, 'avg_ref_cost': 1.6166666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10167, 'query_cost': 0.0, 'learning_time': 1623.477502059919})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7166 datapoints
Loss: 0.00625, iter: 0/100000
Loss: 0.03108, iter: 1000/100000
Loss: 0.01611, iter: 2000/100000
Loss: 0.01091, iter: 3000/100000
Loss: 0.02001, iter: 4000/100000
Loss: 0.00538, iter: 5000/100000
Loss: 0.01841, iter: 6000/100000
Loss: 0.02275, iter: 7000/100000
Loss: 0.02001, iter: 8000/100000
Loss: 0.01759, iter: 9000/100000
Loss: 0.02067, iter: 10000/100000
Loss: 0.00937, iter: 11000/100000
Loss: 0.01333, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12550.
Loaded best model with loss: 0.00174
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55725455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78035355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5061592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77614826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5274434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7604745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5180618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7675549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52079594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7901157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5192615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7644647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51703453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7944546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5183296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77941954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52655464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76175493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5197433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77467495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52243596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7709234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51327163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7554454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53027636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7573334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51904696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7839768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5550298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74539673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5508666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7376321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5741396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7315457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5428004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7755216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51734275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7688611], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48917595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78945184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5266918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7784237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49332774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8055927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5290368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7666231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52387047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7663731], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5379282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75523424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5286297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76319367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53651434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75112337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54059327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7867917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54214984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7481805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5189113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74694186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5279313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75781876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5306454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7755172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55814904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7728157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51876336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76639163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5257079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7643323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55140233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76247674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5584748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7472336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52337694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7637788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53242207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7555776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.56681615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75798094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 331.0
CUMULATIVE NUM SOLVED: 331.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0]
Tasks solved: 10 / 10
Average time for successes: 1.47856 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.478561495197937, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10260, 'query_cost': 0.0, 'learning_time': 1669.7857659629371})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7276 datapoints
Loss: 0.00664, iter: 0/100000
Loss: 0.01343, iter: 1000/100000
Loss: 0.02006, iter: 2000/100000
Loss: 0.00942, iter: 3000/100000
Loss: 0.01476, iter: 4000/100000
Loss: 0.00819, iter: 5000/100000
Loss: 0.01440, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6943.
Loaded best model with loss: 0.00206
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8600935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5318105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09499251], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8622388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49937582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03450741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.08963673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8431997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4971203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06157247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03377264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04768404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03400395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06737734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05223494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04410506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04200729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04951438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04630636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00168043], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8607688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4989721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04391319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10048433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5187414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8002085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.867797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49234766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.06081906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.09545223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8687648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4804274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12216742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85838133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4976243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03069107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00897489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09038209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51930094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8087186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8374604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4920584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.05657387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03945934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.05981675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04276463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04767583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.05100694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03880614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02716584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0285768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.05730296], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8582351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48743317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04569199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1004696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8578461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4858282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.05162958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09505481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.85514945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48230693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05307451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.09243001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5210135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8081213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51994526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7734242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8444946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48180774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05820555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05246435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04947981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06586735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05159072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06151561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04462386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05146485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05202365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08608101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0598429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05261142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07737437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08409655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06336889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05342113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05650831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05680945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03567294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06383595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05403094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04855732], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86012757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4984064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04154161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08773504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85522777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50223887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03684966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09818488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51898515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81324184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87710136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4693278], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16308974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51359975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8165873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.854688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4797388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06099272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.08785375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5183315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83478945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8606354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52748764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01949579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09604566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51419353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7985337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51630443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8049063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87120885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4837707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04555243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12019929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.86495215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48092335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.14621331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5138638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8171256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51952976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82632715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5108485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.786171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.85638213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48402292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04489407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01652597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.0988564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8524657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5199279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00354729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02242186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0897338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.86623895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5397901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11095003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5216117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7976971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8540017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5208501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.03208977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.07950702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 331.0
CUMULATIVE NUM SOLVED: 331.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10431, 'query_cost': 0.0, 'learning_time': 1707.5590034069319})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7361 datapoints
Loss: 0.01429, iter: 0/100000
Loss: 0.00576, iter: 1000/100000
Loss: 0.01333, iter: 2000/100000
Loss: 0.01645, iter: 3000/100000
Loss: 0.01031, iter: 4000/100000
Loss: 0.00848, iter: 5000/100000
Loss: 0.01476, iter: 6000/100000
Loss: 0.02395, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7436.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7291691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5015799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48989326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7994181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7423007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5333859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74207646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5349397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4946485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7787694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49531412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80942816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4959412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80071694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5010195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81483835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48741126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81032574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48722827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79022086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49073714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.801068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48675135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7934339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7460403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4983656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.494857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7961662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7304577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5315975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4887841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79872775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49546677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7972471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4986001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7718604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5271352], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49943137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.799255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47435653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80595315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48465303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7931069], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4903675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80914503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5025344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7842112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5074041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7636181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74460846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51978445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7284988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52008677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7406154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51265997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48863643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80377525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7428714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5097366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4859436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8061779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5009718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80185235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49924383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80449945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48714736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7730016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7536371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49971727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73664653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50220937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7581293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46936062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49023008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7824259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.495848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8053767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48726982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80289334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 341.0
CUMULATIVE NUM SOLVED: 341.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0]
Tasks solved: 10 / 10
Average time for successes: 1.55608 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5560849002067698, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10562, 'query_cost': 0.0, 'learning_time': 1746.4207014859421})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7420 datapoints
Loss: 0.00599, iter: 0/100000
Loss: 0.00822, iter: 1000/100000
Loss: 0.00678, iter: 2000/100000
Loss: 0.01041, iter: 3000/100000
Loss: 0.00943, iter: 4000/100000
Loss: 0.02455, iter: 5000/100000
Loss: 0.01915, iter: 6000/100000
Loss: 0.00761, iter: 7000/100000
Loss: 0.02496, iter: 8000/100000
Loss: 0.01355, iter: 9000/100000
Loss: 0.00710, iter: 10000/100000
Loss: 0.00625, iter: 11000/100000
Loss: 0.00859, iter: 12000/100000
Loss: 0.02409, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13682.
Loaded best model with loss: 0.00176
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5067269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8125137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50890803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8119133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5133792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80744684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5226926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8111502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.508807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7926748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49322468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7872973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5031726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80856514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50028306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81032455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5236367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7570968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50946367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8087206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4781247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.809616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5053146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7993423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48797095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80861086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51316744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8013899], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5158532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8131362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5161696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78864074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50785685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81346554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51376325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81689304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51676595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8016249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5135998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.819305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50564617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7982334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5252434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74766386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51399934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8048007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5047658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8039971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52078575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8157271], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50725687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7984955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5092324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8104372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4826529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79467237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5079426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84070843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5198111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8073304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5101891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8164888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50738114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80702657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48938325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81684375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5221008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73478985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50638795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8173749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7379416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5281733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.508627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8140237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5098114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7872985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5061416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81569225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50808346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80629134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 351.0
CUMULATIVE NUM SOLVED: 351.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0]
Tasks solved: 10 / 10
Average time for successes: 1.39685 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3968477916991104, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10659, 'query_cost': 0.0, 'learning_time': 1796.443783570954})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7512 datapoints
Loss: 0.00774, iter: 0/100000
Loss: 0.00955, iter: 1000/100000
Loss: 0.01588, iter: 2000/100000
Loss: 0.01446, iter: 3000/100000
Loss: 0.01760, iter: 4000/100000
Loss: 0.01331, iter: 5000/100000
Loss: 0.00899, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6416.
Loaded best model with loss: 0.00093
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.506947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7800947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49996865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74616814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47957242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8029002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49390125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78422666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50750816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5076379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7873277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5244285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7924071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5102623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76448524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49160567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78723675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49711508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74911237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52009153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7881867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48898926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7875713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4954989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7910491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49886614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80604565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49021724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7867756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49609974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78674924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5015426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77792525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5180444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7816893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49468735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.791677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49181545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7069356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5024781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77759117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5159969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78223807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5015501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7697397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5134314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79732937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49145368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7834487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48216495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7907631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51204854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77610445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51007426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80008674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4987943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78907704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7714174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5276687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49889746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7854607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50108814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7766549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49902424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78735745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48852313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7968602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49829996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78915143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4885498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7823067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51589406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79313314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5132171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7741983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47581065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7532715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51118857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7804143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 361.0
CUMULATIVE NUM SOLVED: 361.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0]
Tasks solved: 10 / 10
Average time for successes: 1.39666 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3966573945945129, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10809, 'query_cost': 0.0, 'learning_time': 1834.1395879919583})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7586 datapoints
Loss: 0.01049, iter: 0/100000
Loss: 0.02303, iter: 1000/100000
Loss: 0.00590, iter: 2000/100000
Loss: 0.02117, iter: 3000/100000
Loss: 0.01789, iter: 4000/100000
Loss: 0.01348, iter: 5000/100000
Loss: 0.01720, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6897.
Loaded best model with loss: 0.00184
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5127476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77273256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51679826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7892783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7921938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5167257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50746566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7893406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51230323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7771808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49515665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78415054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50042534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.787273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4983967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7695792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5012411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.800892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48454309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7848229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8047567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5466137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48723015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8137798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49235114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7859736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49317724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79833263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50413376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81395435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5008781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78931034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48994574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.816108], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5269295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7918606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4827389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7959461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50690454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78981274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5040611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7753409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49240217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8117182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5053783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78677183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50783783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7934158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4772192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78297603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51206356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.800814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5119813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7868671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5113783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81216717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51667064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7443123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48793623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76320684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4777312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7775017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51024574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.781775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5024831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7979506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50712895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79476506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5060969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78523695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5033648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78731203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51323575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79417765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50841737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7911488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5101324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76608974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50788033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79094803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 371.0
CUMULATIVE NUM SOLVED: 371.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0]
Tasks solved: 10 / 10
Average time for successes: 1.39495 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3949536986969178, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10934, 'query_cost': 0.0, 'learning_time': 1872.7665216169844})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7663 datapoints
Loss: 0.01446, iter: 0/100000
Loss: 0.00525, iter: 1000/100000
Loss: 0.01473, iter: 2000/100000
Loss: 0.01285, iter: 3000/100000
Loss: 0.01497, iter: 4000/100000
Loss: 0.00795, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5097.
Loaded best model with loss: 0.00202
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51321244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79768425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51913357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80502015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83711797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5120857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80119646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5151589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8075193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51974964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.804825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51196444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5082468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79980236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51211077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8005306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80034375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54477775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80330366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5200948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81024307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5188064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.811505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5249347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5113336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7965687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51732457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81484216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80940366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5148838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8037147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5120268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81013656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52030605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7993927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53542465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5014923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8059641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5065688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80095327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80309343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5352892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8213067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48584718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79565233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5129966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5083272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79307175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78521574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51607317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8054502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5173437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51048243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8105833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51102316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8137864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8086592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5204405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8047672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5217165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83000207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5153178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8282726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5104087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79671466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8007026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5251083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80557233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4924803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80368793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51076657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5030655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8098062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7999481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5066577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8062217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4956083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79957706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52096474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 381.0
CUMULATIVE NUM SOLVED: 381.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0]
Tasks solved: 10 / 10
Average time for successes: 1.47921 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4792146059393416, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11051, 'query_cost': 0.0, 'learning_time': 1909.6240263759973})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7709 datapoints
Loss: 0.02586, iter: 0/100000
Loss: 0.00537, iter: 1000/100000
Loss: 0.00624, iter: 2000/100000
Loss: 0.00955, iter: 3000/100000
Loss: 0.01883, iter: 4000/100000
Loss: 0.00807, iter: 5000/100000
Loss: 0.02044, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6566.
Loaded best model with loss: 0.00207
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5257684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78457123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5165988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79882616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52579606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78505045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5271854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79123837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5367686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8051651], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5353306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79254884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51532555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7895646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.531217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7823472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5077312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7916575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52024543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78706586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5480338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80164164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5184958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79979616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5138474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80567515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53375214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78668565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5439316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78796977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51524246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78909427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5162433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7710707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5031779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8122451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53049725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7795303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5157037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79820997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52730596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78597826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.549047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75248206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52419436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.743962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52601516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7931908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5147398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79239047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5112969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7977963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5325973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7254912], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5193043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81458795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5226333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79579186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5230648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80974436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52222073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7981287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5029263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80684716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5409823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7762762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53747827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7837259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51816523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8031258], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52976054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78990155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51091385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76011175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77801305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5170121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7861832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5035688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8124979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 391.0
CUMULATIVE NUM SOLVED: 391.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0]
Tasks solved: 10 / 10
Average time for successes: 1.39365 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3936486930004321, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11140, 'query_cost': 0.0, 'learning_time': 1948.9654502530175})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7766 datapoints
Loss: 0.02779, iter: 0/100000
Loss: 0.00602, iter: 1000/100000
Loss: 0.01631, iter: 2000/100000
Loss: 0.02370, iter: 3000/100000
Loss: 0.00628, iter: 4000/100000
Loss: 0.01257, iter: 5000/100000
Loss: 0.01418, iter: 6000/100000
Loss: 0.01943, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7207.
Loaded best model with loss: 0.00153
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7662615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5382246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7682208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5199749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7725957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52860117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76136243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52393013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.771852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48637223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7986189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49698573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.771357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5022475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.783074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5030534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7865982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5143876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7778629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5224636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76321006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5105423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77801144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52533233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7703339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52767646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81534934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52462065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7823524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5394559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7941716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5162076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7996654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50320166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7870756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5498845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76547235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51567996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7663285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5272559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77003217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5413845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7772198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4914044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82346195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5279925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76857466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50036436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78076863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5127057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76713526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.485277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76683563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53422123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7676396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51207906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76599497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51549715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77643913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5305575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79286665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5236732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7686591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5256817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7769211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51749676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76942015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5268221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77400714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5415201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78291315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5068574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8085886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5263496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7898238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4987734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80933535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5089209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50928634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7865557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 401.0
CUMULATIVE NUM SOLVED: 401.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0]
Tasks solved: 10 / 10
Average time for successes: 1.39576 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3957589886005735, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11241, 'query_cost': 0.0, 'learning_time': 1988.8356652540097})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7848 datapoints
Loss: 0.01734, iter: 0/100000
Loss: 0.02620, iter: 1000/100000
Loss: 0.01116, iter: 2000/100000
Loss: 0.00877, iter: 3000/100000
Loss: 0.00886, iter: 4000/100000
Loss: 0.01283, iter: 5000/100000
Loss: 0.00963, iter: 6000/100000
Loss: 0.01441, iter: 7000/100000
Loss: 0.00699, iter: 8000/100000
Loss: 0.00501, iter: 9000/100000
Loss: 0.00579, iter: 10000/100000
Loss: 0.02493, iter: 11000/100000
Loss: 0.02345, iter: 12000/100000
Loss: 0.00917, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13657.
Loaded best model with loss: 0.00183
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49941134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77914464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75758475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82830274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47669214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50857353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7793018], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8262797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44485444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5087584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74963003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.82590044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50109583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5005912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77134925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49499565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7711928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5137815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7743554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49372122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78387576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.500093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7936335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8260096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44911042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8281997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4834662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80667835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48507997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5085376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78031635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4990584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7779198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5047532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78114176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5080106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77211314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50889987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7351093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5045355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7790738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5011347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7505662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49821267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7830228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8161533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48245504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80105215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48414537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51066846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7664982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50664204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7544884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50505304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.771788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5045975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.776449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49515802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7823808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50527114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76106566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49905282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76890796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5010346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7769141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5142885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7587456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49725407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7700797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4945633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74419475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8166193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4744049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4988923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.775039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49684492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7498854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50275797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7743137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 411.0
CUMULATIVE NUM SOLVED: 411.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0]
Tasks solved: 10 / 10
Average time for successes: 1.56968 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5696776548109483, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11377, 'query_cost': 0.0, 'learning_time': 2039.3578491049993})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7923 datapoints
Loss: 0.01391, iter: 0/100000
Loss: 0.01320, iter: 1000/100000
Loss: 0.00688, iter: 2000/100000
Loss: 0.02137, iter: 3000/100000
Loss: 0.01750, iter: 4000/100000
Loss: 0.00767, iter: 5000/100000
Loss: 0.02205, iter: 6000/100000
Loss: 0.00554, iter: 7000/100000
Loss: 0.01092, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8224.
Loaded best model with loss: 0.00163
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7848586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5147781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7769272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5232646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.790282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5175732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78537524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49684986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49784243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7710762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78219384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5052726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78087616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5126266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7806091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5103648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78009313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5009691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7834616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48391542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7890303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51325274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7799227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5076279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7773298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51907796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7821116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50872916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77876973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5247001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7753581], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5313603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7819416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5304428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78429496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51779795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50610906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7629471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77023095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50924516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76770127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5090504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7714314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53006476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78682816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5010496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78209746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5215471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78255886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46963677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7786985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5164655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7819202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5210171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77828074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5421817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49584153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76660645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7676739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5109266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77269924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48909658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77384347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5060472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7808996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5390001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76898843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5199433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.771491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5005681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7877025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51977175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77721196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5088279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50127447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7853573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.779404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5139677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75908446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5166515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 421.0
CUMULATIVE NUM SOLVED: 421.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0]
Tasks solved: 10 / 10
Average time for successes: 1.48130 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.481299905796186, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11498, 'query_cost': 0.0, 'learning_time': 2081.3526017889963})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7975 datapoints
Loss: 0.01031, iter: 0/100000
Loss: 0.00587, iter: 1000/100000
Loss: 0.01014, iter: 2000/100000
Loss: 0.01802, iter: 3000/100000
Loss: 0.00427, iter: 4000/100000
Loss: 0.00865, iter: 5000/100000
Loss: 0.00669, iter: 6000/100000
Loss: 0.01670, iter: 7000/100000
Loss: 0.00994, iter: 8000/100000
Loss: 0.01434, iter: 9000/100000
Loss: 0.01330, iter: 10000/100000
Loss: 0.01568, iter: 11000/100000
Loss: 0.01178, iter: 12000/100000
Loss: 0.01775, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13558.
Loaded best model with loss: 0.00158
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5116148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7886412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48712263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7800435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5223657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7700178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49296063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.811273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5315558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77489233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50497675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80359524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51431656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78132707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5105299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8161298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50740117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81290513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51250124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7949064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49731857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8066549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50787157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.804085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4990088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7609757], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5197913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4821674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7985734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5195016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79492444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5189259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80557555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5211884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81773794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50370467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80007356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5107583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7948724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4947487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8058329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5067504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8183036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5000006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80810374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51688147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80272937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5120877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.809052], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.494708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79602116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52245533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.816135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50942516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8126464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.507931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79271865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52046704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7846559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51545036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8245484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.497719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8099114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47075355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76862466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51596004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79059434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51987284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8063279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5200958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81048155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.509017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7966531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5069205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8149741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5210309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79685247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.489205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7928482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 431.0
CUMULATIVE NUM SOLVED: 431.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0]
Tasks solved: 10 / 10
Average time for successes: 1.39431 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3943098766350885, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11592, 'query_cost': 0.0, 'learning_time': 2132.1620107849885})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8029 datapoints
Loss: 0.01252, iter: 0/100000
Loss: 0.01240, iter: 1000/100000
Loss: 0.00704, iter: 2000/100000
Loss: 0.01341, iter: 3000/100000
Loss: 0.01207, iter: 4000/100000
Loss: 0.01193, iter: 5000/100000
Loss: 0.01493, iter: 6000/100000
Loss: 0.01717, iter: 7000/100000
Loss: 0.00522, iter: 8000/100000
Loss: 0.01630, iter: 9000/100000
Loss: 0.00647, iter: 10000/100000
Loss: 0.02889, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11315.
Loaded best model with loss: 0.00116
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5063318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79082865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5085517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80079234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71258265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7082805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5351253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7160521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5384306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7321279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5259042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72524756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52664745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7175345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54260373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.511284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7947243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7139993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5408291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72020316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5523623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72048837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53861225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7109214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5581481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7156864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54115766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50723803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79653656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72356236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49419293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5069814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8021647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5112404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8035701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7120004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5705911], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72490096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.536727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72751987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52845037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5087745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7920075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7128646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54348797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7250569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5256403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50649595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.787802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79274195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5271134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7196004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.59402525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7235025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5230173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70957345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57215446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71363413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53281003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50643307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8061698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7094605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5350461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7324255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53053397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7138505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5661301], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71536475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5359711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71694905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52734834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7188033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5418557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5040147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7970432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71562475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54151875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51057863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.799361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 441.0
CUMULATIVE NUM SOLVED: 441.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0]
Tasks solved: 10 / 10
Average time for successes: 1.39597 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3959729327441892, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11688, 'query_cost': 0.0, 'learning_time': 2180.793592333008})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8092 datapoints
Loss: 0.00769, iter: 0/100000
Loss: 0.00442, iter: 1000/100000
Loss: 0.01889, iter: 2000/100000
Loss: 0.00163, iter: 3000/100000
Loss: 0.00886, iter: 4000/100000
Loss: 0.01873, iter: 5000/100000
Loss: 0.01389, iter: 6000/100000
Loss: 0.02637, iter: 7000/100000
Loss: 0.00627, iter: 8000/100000
Loss: 0.01242, iter: 9000/100000
Loss: 0.00868, iter: 10000/100000
Loss: 0.01434, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11350.
Loaded best model with loss: 0.00085
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85666037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5341645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00819367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.41833568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41995516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.000938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0059053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00765311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00777352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0107857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.3679593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3683125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0005013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.35605508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36085078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00080169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00568592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02579808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01163998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01751679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4623251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46288553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02984021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09693916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84136707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5270537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87424994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4981014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.14666001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8644972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53412634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00329048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00358341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0020219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00465213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.00050357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00721091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01197565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.03599109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.16098823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.873914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5360339], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88334703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53327125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18281913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8435931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53151596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8541252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5121802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.32905445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.35282096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00767422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.023484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.37245172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3781975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0013152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.0050575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.35075134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37091953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00933901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00443903], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86071646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5153548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01954154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0019469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01772097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00732619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00850835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00539849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01922026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02007414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00568669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48089197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4711866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01749148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01465765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00983543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02521291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31340128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.31012115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13340934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8705751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5230978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03986201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10842469], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87397426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5438652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00159163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14045595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82774436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5417766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8687223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52886635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00073777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00162393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01014286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01044331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14242071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8607306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5267691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00167352], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5428283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84725416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01400207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.004365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01547134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02152027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01104543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00813188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00249115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00448495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02764526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01902865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00888334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02218436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01262129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02673377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02308849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01481167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02837455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00244903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02318286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00199662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01266842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01318376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01379147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00047205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01451796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01680207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01408607], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8648883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5287594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00912587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01244048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00333479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00117804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03180149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10889586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8609609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51869303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01903324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00902756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01365998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01363085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.0023091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00546087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03053579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03325599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00175683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00128087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01107753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01466012], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8755992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53017026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01642726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12475854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.530085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7683523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5323848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76687974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8673339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5293636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00158035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00113444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01025796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00547615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00901711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.00050446], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.86873084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5448023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.01107445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00713764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01277637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.01820124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11841826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83958685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5243168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83457553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5221342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8716284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5234816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.00105925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.02453399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12936197], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84658617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5261682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48169926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4652263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48523742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.50512266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49492428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.50442225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.45387122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5005205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5036015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.46648413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4931947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4373887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47682148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.44795638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49570096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4785881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.50497043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47653008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49773812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.5040812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49032834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.480205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.44913822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4960849], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 441.0
CUMULATIVE NUM SOLVED: 441.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11804, 'query_cost': 0.0, 'learning_time': 2228.669327445008})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8240 datapoints
Loss: 0.00833, iter: 0/100000
Loss: 0.03009, iter: 1000/100000
Loss: 0.01925, iter: 2000/100000
Loss: 0.00477, iter: 3000/100000
Loss: 0.00620, iter: 4000/100000
Loss: 0.00391, iter: 5000/100000
Loss: 0.01367, iter: 6000/100000
Loss: 0.00957, iter: 7000/100000
Loss: 0.01626, iter: 8000/100000
Loss: 0.01474, iter: 9000/100000
Loss: 0.01001, iter: 10000/100000
Loss: 0.01719, iter: 11000/100000
Loss: 0.01059, iter: 12000/100000
Loss: 0.01898, iter: 13000/100000
Loss: 0.01476, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14348.
Loaded best model with loss: 0.00157
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7955877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52236015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8074142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52764744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7911919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4872047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7933376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51584053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8105124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51936495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8160399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5142659], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8063127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5194367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79372036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.512262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75718343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5238643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80079013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51497257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7800487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5199868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75531536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5145227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7973834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51595765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7875886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54533905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80338484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5122361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8054875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.523885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8127014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5152748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79795355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5180053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7894122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52296823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83618164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5088713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.783877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49534434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7891631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5210179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8130129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47985753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80131805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5050271], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7883324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5169857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8207443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.518421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7875827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5036824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83715826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.514139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8010334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.507162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79174864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49266654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7939682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53054786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79197675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5211792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79170704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5054624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7878118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5159805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8266364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5005369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8113035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51574767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80082494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5289405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7561419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5228406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7953363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51552767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80586594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5154898], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 451.0
CUMULATIVE NUM SOLVED: 451.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0]
Tasks solved: 10 / 10
Average time for successes: 1.40398 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4039828915381805, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12027, 'query_cost': 0.0, 'learning_time': 2282.073031984997})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8287 datapoints
Loss: 0.00677, iter: 0/100000
Loss: 0.02358, iter: 1000/100000
Loss: 0.00467, iter: 2000/100000
Loss: 0.01655, iter: 3000/100000
Loss: 0.01882, iter: 4000/100000
Loss: 0.00446, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5944.
Loaded best model with loss: 0.00212
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5111094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8320572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5320992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7798813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54054856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8430805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51769036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8067645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5406439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7650773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5367556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8051034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5218741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77701277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5117766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.800917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48583093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.811707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5228264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7807366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54113513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7706675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52483845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76900315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.551677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84177804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5066105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78629464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53681487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78625935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53162235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7895434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5545572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84737086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11133426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07461625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11535043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04314567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08434553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11500183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1316953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10484722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1022063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11564229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09292188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11078737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11188693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1065328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10785093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09899989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11037681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11732625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1156352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12128066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10311285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11766972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13281102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12999552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09755202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09435357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05813516], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53290904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75417227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50318986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78990614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8333926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5660732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5387422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7531615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50114787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7844502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5374382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77803457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5102632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7792708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5227146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.774622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5335732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.768318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52745104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76450634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54498094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7531283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54200876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84841275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.1387202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.02828942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11470059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12657486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09463703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12124514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12927629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12043467], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54879826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.84856373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11840282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11680774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12179333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12678999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.10247358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11988077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.13444883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12882091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.10411638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.10433266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11692045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12929589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11754498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11365682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.10541864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.07585541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.09545703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11743528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.1105476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.13169393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11946233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12899187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.10498927], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51440066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7911252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5057766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8111566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5399519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7550737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5184357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77855265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 458.0
CUMULATIVE NUM SOLVED: 458.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0]
Tasks solved: 7 / 10
Average time for successes: 1.40095 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 7, 'num_total': 10, 'avg_suc_time': 1.400951190847471, 'avg_ref_cost': 2.0928571428571425, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12111, 'query_cost': 0.0, 'learning_time': 2322.8537589590123})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8337 datapoints
Loss: 0.01287, iter: 0/100000
Loss: 0.01210, iter: 1000/100000
Loss: 0.01084, iter: 2000/100000
Loss: 0.03324, iter: 3000/100000
Loss: 0.01445, iter: 4000/100000
Loss: 0.00826, iter: 5000/100000
Loss: 0.01975, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6048.
Loaded best model with loss: 0.00115
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5355226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79085284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53147006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8126051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49089473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7865173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48960638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81178725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5210627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7996785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7849111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4990778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5265354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80244493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51335394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80172586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5082763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8201801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49124047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8016651], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5258869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7915434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5167234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8051926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5362495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7957759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5134347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8195143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52146065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79705054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5012472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82455987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5373163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84047806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5235442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81349295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4934418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83061785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51873416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.799635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5210314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80724907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5346789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7889799], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53143084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.795372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53285784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8058052], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52745503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79415274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49557188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8053668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51120347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80136734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5155317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8057058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5315058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81523365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51741195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80351776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51194847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80344313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53369415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82302153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5231888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80108505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.529671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7925028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52654415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8125134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5232549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80148345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53754056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.83113515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5202351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8098532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51156515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8046106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53136426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7885368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 468.0
CUMULATIVE NUM SOLVED: 468.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0]
Tasks solved: 10 / 10
Average time for successes: 1.40137 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4013677928916877, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12202, 'query_cost': 0.0, 'learning_time': 2363.1098919149954})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8402 datapoints
Loss: 0.01384, iter: 0/100000
Loss: 0.01587, iter: 1000/100000
Loss: 0.01744, iter: 2000/100000
Loss: 0.01553, iter: 3000/100000
Loss: 0.00665, iter: 4000/100000
Loss: 0.01418, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5392.
Loaded best model with loss: 0.00189
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75332814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5307761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7580462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5303091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7707364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52803224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7621862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5319472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7790972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5302358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80274814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5330552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75662875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51998675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77734244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5202093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74989605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52759403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7654796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5150606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7478013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5291238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7429807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50680786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7636198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53118336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7533032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4791259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77231985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53534126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8090765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5151208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76887584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51115257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76198256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53198653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7535835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49502617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7533148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5179151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76344734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53408635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7821461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5326574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7793154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.527423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7525296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50042766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7510305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5242296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7545793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5306215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78437257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5357196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7657705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51592165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7336799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50211596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8024696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52030516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78378534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5086815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7523978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5168527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7812346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5196553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75744456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51201224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76584655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5136669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7497282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5106702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77515346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53518796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7531604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5121323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76720744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53427094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7545285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 478.0
CUMULATIVE NUM SOLVED: 478.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0]
Tasks solved: 10 / 10
Average time for successes: 1.39813 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3981265316833742, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12307, 'query_cost': 0.0, 'learning_time': 2403.554646923003})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8445 datapoints
Loss: 0.03237, iter: 0/100000
Loss: 0.01507, iter: 1000/100000
Loss: 0.01081, iter: 2000/100000
Loss: 0.00904, iter: 3000/100000
Loss: 0.01558, iter: 4000/100000
Loss: 0.01396, iter: 5000/100000
Loss: 0.01911, iter: 6000/100000
Loss: 0.02080, iter: 7000/100000
Loss: 0.01104, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8069.
Loaded best model with loss: 0.00185
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47935334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73046935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5092452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77892286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5189016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7882454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51872635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7910837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5290034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79176486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5211041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75940573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5120456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69643223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48631367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8086878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5181234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7904538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49698657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7743741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5169737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77626145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51611423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7879943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51774627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7450417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.506372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78444487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5052324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7836043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50967205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78299135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48127875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76908785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51341534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7717968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5084153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7836854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5186875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79164684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5228015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7802568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47791064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78559196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49902153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8043001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53057534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7580976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5033396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79572433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54074645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7559692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51567185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7727955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52408034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77210075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50109404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79552203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48470917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7824759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5065396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7634554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5094538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77632844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5103795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70159924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5195897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7909143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5103759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78198665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49714264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79909843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52230513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7738035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52513516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7686539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48475453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8054645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5223569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7616058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 488.0
CUMULATIVE NUM SOLVED: 488.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0]
Tasks solved: 10 / 10
Average time for successes: 1.49568 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4956844794884092, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12383, 'query_cost': 0.0, 'learning_time': 2447.3066768090066})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8524 datapoints
Loss: 0.00755, iter: 0/100000
Loss: 0.02064, iter: 1000/100000
Loss: 0.03648, iter: 2000/100000
Loss: 0.02396, iter: 3000/100000
Loss: 0.01709, iter: 4000/100000
Loss: 0.03501, iter: 5000/100000
Loss: 0.01035, iter: 6000/100000
Loss: 0.01202, iter: 7000/100000
Loss: 0.01040, iter: 8000/100000
Loss: 0.02241, iter: 9000/100000
Loss: 0.01321, iter: 10000/100000
Loss: 0.00619, iter: 11000/100000
Loss: 0.00629, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12504.
Loaded best model with loss: 0.00053
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52689886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8065609], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8646079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54258376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09929774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53050417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8204182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5418282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7786735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5223326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8022631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51859355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8122891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8788887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5288443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.13278234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5385037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8003509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.537655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7884347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5332167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.797149], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52737105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79495955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8746556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5358357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.1069518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53544044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77684635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8770596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5346591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12281922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5235097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79142505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53252035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7534542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5349998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8021671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.523971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81357974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.858569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5205911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07430975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5507794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7946801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87119454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53269607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09741556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5305114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79280365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52146816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78145444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8765552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4847456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1389487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5272758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78889936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5160795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8166341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.86948925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5346909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11488501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52084833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78091383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5212549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7899481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87456954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5522505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.07736683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5327343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7925423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8708336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54395497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12279871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.87553024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5082463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.12757511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5356436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7820824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5307675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78785557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53933287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7506689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5429839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80420816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5278383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81963825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52588755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8137288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5143687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8065301], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 496.0
CUMULATIVE NUM SOLVED: 496.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0]
Tasks solved: 8 / 10
Average time for successes: 1.50492 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.5049157743742398, 'avg_ref_cost': 1.86875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12512, 'query_cost': 0.0, 'learning_time': 2498.610387043009})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8599 datapoints
Loss: 0.01913, iter: 0/100000
Loss: 0.01899, iter: 1000/100000
Loss: 0.00603, iter: 2000/100000
Loss: 0.01728, iter: 3000/100000
Loss: 0.02667, iter: 4000/100000
Loss: 0.01011, iter: 5000/100000
Loss: 0.00423, iter: 6000/100000
Loss: 0.01395, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7295.
Loaded best model with loss: 0.00131
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.529598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7822551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82267565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5214573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51972806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79831266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54915935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79238707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52164763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79608065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5222904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8236405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5181177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80395025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53905296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74089956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.536172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8126372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52933586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7971302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8290771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5239222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5583197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7761863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5357637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8077227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5320281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76615983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5343188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79662335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52966046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79506445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5328506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77648693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5229293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79050374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5605584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7730831], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5229372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80690295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5423318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.775313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52982247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78143895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5176491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79348266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52127635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80941886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50830835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8144456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5430287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8132862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5244792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7823421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5424826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7685964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5352301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7859063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5408292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7733082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55221444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78798574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5169011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79169345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54366726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7706472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5249009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7896302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53580576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80928516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5380763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7791918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54494625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77513546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53853494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7758231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54443556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77384645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53270894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8028403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 506.0
CUMULATIVE NUM SOLVED: 506.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0]
Tasks solved: 10 / 10
Average time for successes: 1.39807 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3980679756437895, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12637, 'query_cost': 0.0, 'learning_time': 2541.534298404993})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8701 datapoints
Loss: 0.01116, iter: 0/100000
Loss: 0.00559, iter: 1000/100000
Loss: 0.01210, iter: 2000/100000
Loss: 0.01096, iter: 3000/100000
Loss: 0.00445, iter: 4000/100000
Loss: 0.01464, iter: 5000/100000
Loss: 0.01625, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6976.
Loaded best model with loss: 0.00164
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51686394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81124413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.529234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8141776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53322464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8018269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52840734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8164598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49324706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8033369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52565485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81296873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52179366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8224892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48564124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80172193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5180672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8166245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5243632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82058257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51178384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80761826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5284911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8161274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50191957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8086658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5235123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81075007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54036325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76779664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5224359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80486333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.518137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7977031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5087415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8040769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5169104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.806909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52564585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80283356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49869996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8103116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51419616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80652034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5286368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8179779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49094683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8162239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5281083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8089043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53273374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8081096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5257162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.82560974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5341479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7753965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52100545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8247947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5223803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80778486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.532679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7906261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52929705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76754105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5219859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7831628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49881956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7879866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50887233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81166345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5219924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8184999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5155341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82387686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5235692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8091961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5196905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80478024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4986922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8116492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 516.0
CUMULATIVE NUM SOLVED: 516.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0]
Tasks solved: 10 / 10
Average time for successes: 1.39752 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3975238588114736, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12806, 'query_cost': 0.0, 'learning_time': 2584.3230087909906})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8765 datapoints
Loss: 0.01040, iter: 0/100000
Loss: 0.00588, iter: 1000/100000
Loss: 0.01982, iter: 2000/100000
Loss: 0.01517, iter: 3000/100000
Loss: 0.01383, iter: 4000/100000
Loss: 0.01602, iter: 5000/100000
Loss: 0.00957, iter: 6000/100000
Loss: 0.01290, iter: 7000/100000
Loss: 0.01120, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8850.
Loaded best model with loss: 0.00147
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5387306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7518804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7824241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53067595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77059036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5352229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5435446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74437827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53379065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7555151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5467987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7764758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52802664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7832958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53408563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7525375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5358673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7574439], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5508485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75815696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53502375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74702674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5521265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75723207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.542851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74680567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5462402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75110674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54198754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7498781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5428642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7433593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54713386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7491589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52783316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7600454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54979974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7447782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78362674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5334711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53139997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75593585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54550666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7609102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52709043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77577287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79145104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5370188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5470711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7545381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54899055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7548895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54978067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7669447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5569336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7959042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7895332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54047483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5388783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7557955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5408671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7495695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.794322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5430663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53981787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7445331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52781934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74917364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7892209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5326689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53574795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75243443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5407663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7490839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5504589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75266737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53680813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74644643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53759503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74839944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 526.0
CUMULATIVE NUM SOLVED: 526.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0]
Tasks solved: 10 / 10
Average time for successes: 1.39632 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3963197646924528, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12907, 'query_cost': 0.0, 'learning_time': 2631.585072662012})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8819 datapoints
Loss: 0.01925, iter: 0/100000
Loss: 0.01079, iter: 1000/100000
Loss: 0.00401, iter: 2000/100000
Loss: 0.01652, iter: 3000/100000
Loss: 0.01464, iter: 4000/100000
Loss: 0.01268, iter: 5000/100000
Loss: 0.00699, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6334.
Loaded best model with loss: 0.00213
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78817666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5494332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7952819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55373985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77969605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5430815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76488215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5486871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79683566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52089614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7901421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5539267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7935693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52751565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7882671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5414307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77456117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51979595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7905011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55367285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7848493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5515891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78837895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54999155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7693293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5485106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7900266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5521358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78963906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5481977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79190123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5327442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77755266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54129755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7832789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5299326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79257464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5225041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79161364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52849084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77503824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5354903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7620818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54503316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8035531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5554892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76752144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5455843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7720361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5557607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76334673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55194324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7726412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5751802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77927274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55468655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79202616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54096454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78839886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54850644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55716777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7409979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7537815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5380778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75168407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55129015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7921267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55226284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7827296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54468745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7425962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5373492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7658444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5061856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78770655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5581739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78054446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5466454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79282403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54841036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 536.0
CUMULATIVE NUM SOLVED: 536.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0]
Tasks solved: 10 / 10
Average time for successes: 1.40043 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.400434461797704, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12998, 'query_cost': 0.0, 'learning_time': 2675.0967838740034})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8858 datapoints
Loss: 0.02008, iter: 0/100000
Loss: 0.02958, iter: 1000/100000
Loss: 0.00485, iter: 2000/100000
Loss: 0.01276, iter: 3000/100000
Loss: 0.00501, iter: 4000/100000
Loss: 0.01169, iter: 5000/100000
Loss: 0.00661, iter: 6000/100000
Loss: 0.00332, iter: 7000/100000
Loss: 0.00773, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8757.
Loaded best model with loss: 0.00165
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5089889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8063362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73787504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5066984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49754748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8262839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49686748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8104529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48048484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8212606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4936148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.791842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49155104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.82794744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4839039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80756336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5006758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77721965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5027122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81305164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5068908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.82081914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4829809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81581867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4629994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81700116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4855793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83085173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5054638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8185702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48226294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8284941], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4933158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7855528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49106926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82303995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7438403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5486605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5056525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.815927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5011351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8182236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5026275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81355214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50566584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.801384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4947952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81665874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50248957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8308847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49519947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8334908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50056505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8200066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47740072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83541846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50341153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7922255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49079433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8283598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5087054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8027823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48010638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8325998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4974352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8000825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51459575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7947372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5017534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.82412857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4914955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81495255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5000812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8320478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50300425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8113821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.465145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83662176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48133138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8218042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 546.0
CUMULATIVE NUM SOLVED: 546.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0]
Tasks solved: 10 / 10
Average time for successes: 1.39809 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3980931647820398, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13076, 'query_cost': 0.0, 'learning_time': 2722.780060822988})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8932 datapoints
Loss: 0.00999, iter: 0/100000
Loss: 0.00762, iter: 1000/100000
Loss: 0.00432, iter: 2000/100000
Loss: 0.01064, iter: 3000/100000
Loss: 0.01951, iter: 4000/100000
Loss: 0.00732, iter: 5000/100000
Loss: 0.02377, iter: 6000/100000
Loss: 0.00629, iter: 7000/100000
Loss: 0.01281, iter: 8000/100000
Loss: 0.00871, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9852.
Loaded best model with loss: 0.00202
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8305365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5354332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.84284943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53915083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8472895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52515525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.85580456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54147846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.04800584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84665525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5261881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8326134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4681964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.86725736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54651535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.06507678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83787614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54585934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84668726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5312583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8425245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54604226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.85548896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51581585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.01511459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.84086597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5371233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79987735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5179822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8452171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5397911], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8364128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5239235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8258612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50603145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.849571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53510165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80546397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5375666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8457521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55455774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84748465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52244425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8314398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5149716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8777169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52849144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05926115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.84060687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55313313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.848415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5201847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8549294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5331413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.03428374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83947265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51588565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8108689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5212629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84721154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5318034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8480603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54086906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8365547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5309173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8364818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51207715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8381307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5439459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.84647405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5369309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8220283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51910114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8157246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5393022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8479749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53336304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81500965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52409714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82991725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5347011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83907473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54319113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8459324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5419696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 555.0
CUMULATIVE NUM SOLVED: 555.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0]
Tasks solved: 9 / 10
Average time for successes: 1.45059 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4505905404512305, 'avg_ref_cost': 1.6388888888888888, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13193, 'query_cost': 0.0, 'learning_time': 2771.4015190069913})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8989 datapoints
Loss: 0.00641, iter: 0/100000
Loss: 0.00525, iter: 1000/100000
Loss: 0.02849, iter: 2000/100000
Loss: 0.02230, iter: 3000/100000
Loss: 0.00431, iter: 4000/100000
Loss: 0.00606, iter: 5000/100000
Loss: 0.01246, iter: 6000/100000
Loss: 0.00519, iter: 7000/100000
Loss: 0.01112, iter: 8000/100000
Loss: 0.00460, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9108.
Loaded best model with loss: 0.00150
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49659613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8034839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5199162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80918086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5096085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8126465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51753056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76987135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5170837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8017896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.520814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7988444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.510515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8133342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50897485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81313723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5185615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.805457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5298564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80391115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50011194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5113781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80786866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5068233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8015126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52399784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8056557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49915776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8212127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51726633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7757272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48844466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8067537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.521238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8171434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.525225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7911072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50326777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82707345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49258396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8044664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.503702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80418897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50706446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8093986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49996355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7934279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51313716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80604863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49907768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79267687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5200295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8111962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52129704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8121407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5209415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80716234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5117457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8042422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52155155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8089531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5218274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8092582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5115186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80997014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5230421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80660737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50845057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8096354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49157342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8083279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51804364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8097669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50521326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8111214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.519404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50480473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8157559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 565.0
CUMULATIVE NUM SOLVED: 565.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0]
Tasks solved: 10 / 10
Average time for successes: 1.40909 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.40909400509845, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13298, 'query_cost': 0.0, 'learning_time': 2820.5154161429964})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9028 datapoints
Loss: 0.00692, iter: 0/100000
Loss: 0.00498, iter: 1000/100000
Loss: 0.00661, iter: 2000/100000
Loss: 0.00901, iter: 3000/100000
Loss: 0.01246, iter: 4000/100000
Loss: 0.01346, iter: 5000/100000
Loss: 0.00643, iter: 6000/100000
Loss: 0.02340, iter: 7000/100000
Loss: 0.00980, iter: 8000/100000
Loss: 0.01162, iter: 9000/100000
Loss: 0.01486, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10538.
Loaded best model with loss: 0.00006
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5309855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.790788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.89685017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5081503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.19757526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.85798067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5039088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.17008875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.89328736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5242591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.19184211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.532728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78636056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5268716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8040226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5246893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80473787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5217195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7521357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5292261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7646266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8883979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.517894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.17592679], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8841013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4756263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.18642731], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8836251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5254848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.18268576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87925744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5257902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.157279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8953503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5031053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.19411428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8891588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5122481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.20441386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8833214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5220901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.17725785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53569025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7795403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8984513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5126613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.20414546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8818727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4998611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.19104652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8877084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5123615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.17174953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.88131505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52053696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.169881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5220922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7627165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5289137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79299605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8901447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5160739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16694415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.88060135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.525555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.17203604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8892849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.528963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15083984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5287307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78930503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9000435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.525107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.1731693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89271104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5253494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12584715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8949478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51965076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.18249229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8830867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52255905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.18647017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5095255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8032204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.89041275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5145955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.19020465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8930728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5241751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16523908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8911014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52052414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.16507758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8843748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5219291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.15428236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88776064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50534934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.19455321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.88414925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5198497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12011246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9011116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5018155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.20327689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.88191843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49734813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.18216008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 566.0
CUMULATIVE NUM SOLVED: 566.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0]
Tasks solved: 1 / 10
Average time for successes: 1.43528 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.4352753389975987, 'avg_ref_cost': 14.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13372, 'query_cost': 0.0, 'learning_time': 2872.1707630330056})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9088 datapoints
Loss: 0.01300, iter: 0/100000
Loss: 0.01351, iter: 1000/100000
Loss: 0.00403, iter: 2000/100000
Loss: 0.00876, iter: 3000/100000
Loss: 0.00779, iter: 4000/100000
Loss: 0.00777, iter: 5000/100000
Loss: 0.01037, iter: 6000/100000
Loss: 0.01518, iter: 7000/100000
Loss: 0.00827, iter: 8000/100000
Loss: 0.02920, iter: 9000/100000
Loss: 0.00920, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10832.
Loaded best model with loss: 0.00169
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5470839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7706742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5528977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7744404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55518967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7758538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5509924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7808676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55462295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77227986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54687047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7415966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53017247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.82237935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5341135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7836101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5529485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7867602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54884696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79076207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49233344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81992847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5505968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74214906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54302067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7901942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.557793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8133903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.527843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7987334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5241322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79986113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55921906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81495976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5313306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7927195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52137923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7947736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5493993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7948607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53407294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7860872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52692497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7855617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5520299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7740897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54321814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80313593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5377242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78172547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53053355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7834257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52172655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8055859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55071324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7897536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55855244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7910435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5568321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78090686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5261712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80677646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5568044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7799201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55630744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81562805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55864036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78767264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52611333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7530682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51109606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8182131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54096246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7848329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54471326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77377737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55379474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77606374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50877655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81485206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 576.0
CUMULATIVE NUM SOLVED: 576.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0]
Tasks solved: 10 / 10
Average time for successes: 1.52359 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5235941663064296, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13478, 'query_cost': 0.0, 'learning_time': 2924.616954845027})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9155 datapoints
Loss: 0.01051, iter: 0/100000
Loss: 0.01515, iter: 1000/100000
Loss: 0.00329, iter: 2000/100000
Loss: 0.00510, iter: 3000/100000
Loss: 0.00743, iter: 4000/100000
Loss: 0.01565, iter: 5000/100000
Loss: 0.00718, iter: 6000/100000
Loss: 0.00451, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7592.
Loaded best model with loss: 0.00002
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52000135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8065189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51328266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7777828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5240491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80245787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5241944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8024992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51677316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7454204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5235892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8076323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5150666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7921711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52087146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80207896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.517311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.796244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5085808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5206192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8066452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4686144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79634464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5173417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78909576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.518849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.794863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5207308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8063049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5189918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8047695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52032083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80828196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49830192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8073094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.508699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.790285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.506003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8048273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5196867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78446186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52344924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79768777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5326046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78371465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5351406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8119571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5166895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7998415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4923361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7958514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50803345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80239636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52365315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79798526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51626444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8033653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48453495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7977145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5136364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7838111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52447987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8052779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52273136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7961867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49692228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79974145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52371407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79172224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52469605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7805378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48016393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80181986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5079357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78425163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52062947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77531755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5224877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79319936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 586.0
CUMULATIVE NUM SOLVED: 586.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0]
Tasks solved: 10 / 10
Average time for successes: 1.41113 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.411134679694078, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13598, 'query_cost': 0.0, 'learning_time': 2971.897414734034})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9207 datapoints
Loss: 0.02698, iter: 0/100000
Loss: 0.01362, iter: 1000/100000
Loss: 0.01104, iter: 2000/100000
Loss: 0.01596, iter: 3000/100000
Loss: 0.01525, iter: 4000/100000
Loss: 0.00281, iter: 5000/100000
Loss: 0.01017, iter: 6000/100000
Loss: 0.00625, iter: 7000/100000
Loss: 0.01330, iter: 8000/100000
Loss: 0.01273, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9714.
Loaded best model with loss: 0.00149
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80415314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53297323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8159385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5274869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8166332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48364666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7966625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54351187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80022943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54970986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8055208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5527184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8049976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.549904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8248164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5132007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7913926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5471216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8085964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5585127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7888776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5399429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7931916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5429562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8123845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5300404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79999363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54493904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79061234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53741026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7981361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54463696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79557806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5283283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.834721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5104123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8070179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54950553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8052088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5400661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85027397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5259604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11370272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7890867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5394674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8314907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51378965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7869033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5414631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7819639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54048055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80386364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5614667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80009586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54020625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7854929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5513438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7946282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52895385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75821173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51225805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7894009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54008955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7935729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5358073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7850196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52290696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7931865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5449555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79806554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49690816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.789154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53903204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7960175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53676033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79136014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51804537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82111174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53984666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8046067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54720175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 595.0
CUMULATIVE NUM SOLVED: 595.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0]
Tasks solved: 9 / 10
Average time for successes: 1.41280 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.4128017180935584, 'avg_ref_cost': 1.6166666666666663, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13695, 'query_cost': 0.0, 'learning_time': 3023.0907592430303})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9267 datapoints
Loss: 0.02294, iter: 0/100000
Loss: 0.01547, iter: 1000/100000
Loss: 0.01006, iter: 2000/100000
Loss: 0.00884, iter: 3000/100000
Loss: 0.00450, iter: 4000/100000
Loss: 0.00491, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5632.
Loaded best model with loss: 0.00149
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5611466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76959765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5218034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7854773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54934007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74776447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54241925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76545924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5565365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7491842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54358464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7796354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53462636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79822296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52356666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8006994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8274797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48682487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5471285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7541069], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56112707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7693564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5528011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8143874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5521957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77222055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5479398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80459374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54671353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80263376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54094124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79887116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5517943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8047544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5326324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7967687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52555066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7919414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5424512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76700246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55289197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7958492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5281246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7888242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5504753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79007244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53902876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7970011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5391571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76380616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55808645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80042255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54697394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7890768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5577176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7731488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53668565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76712835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5531321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7930871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5490155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7852005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5506321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7971352], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55658656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79353935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77916086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5411746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5430044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78097934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5483356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7842526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5533119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7899109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55163187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7977274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54716563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78314275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5403602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7585663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 605.0
CUMULATIVE NUM SOLVED: 605.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0]
Tasks solved: 10 / 10
Average time for successes: 1.40798 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4079777553648456, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13795, 'query_cost': 0.0, 'learning_time': 3067.5773961700324})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9310 datapoints
Loss: 0.01911, iter: 0/100000
Loss: 0.00908, iter: 1000/100000
Loss: 0.02399, iter: 2000/100000
Loss: 0.00994, iter: 3000/100000
Loss: 0.01465, iter: 4000/100000
Loss: 0.01763, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5145.
Loaded best model with loss: 0.00170
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5433856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79864895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54461867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7988532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5478207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.806718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5448548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7766623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52867097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8084721], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5415326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8162089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5381865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69052094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54806864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80759245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5249409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7816423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50014776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79205084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54089624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80999523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52496225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81146026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53647816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79115164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5187238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7947268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52920866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7991856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5506661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77680963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52132577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7791907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.538802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7851198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5346318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7898113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5347615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79640317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53209376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.793326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52249455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7950392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55007136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8008328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5379121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78465897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5389851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8057074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5366772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7757975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7610931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50788546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5321981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7463867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5333257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8165918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5183572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78381115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5108353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80358654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5311555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78969026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5551658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79593825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5395118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7777299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5460269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7662252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53819823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7874724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5500049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7884739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53911996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79206955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5295087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7929463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5244339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7972621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 615.0
CUMULATIVE NUM SOLVED: 615.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0]
Tasks solved: 10 / 10
Average time for successes: 1.40871 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4087079594115495, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13874, 'query_cost': 0.0, 'learning_time': 3111.4853032140236})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9353 datapoints
Loss: 0.02980, iter: 0/100000
Loss: 0.01781, iter: 1000/100000
Loss: 0.00271, iter: 2000/100000
Loss: 0.02658, iter: 3000/100000
Loss: 0.00308, iter: 4000/100000
Loss: 0.02102, iter: 5000/100000
Loss: 0.00991, iter: 6000/100000
Loss: 0.01099, iter: 7000/100000
Loss: 0.01209, iter: 8000/100000
Loss: 0.01404, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9851.
Loaded best model with loss: 0.00044
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54968226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7743256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5540343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79351765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5359863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7815838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55769366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.767107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55156076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7869003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5459679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80591273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5523635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7962695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5615261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7796638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5417405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7840341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5284981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79411227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55180645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76741284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5407102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.83434844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55239445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7737058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5564569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79280937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5131704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79026335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5478433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7999249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5586373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77081656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50821185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81760496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5407424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8012316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.552459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7694434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5380847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74179953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53609717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79394287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54932326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5521471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76520324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5471561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78501195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5131327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8148272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.551539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7950308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5532631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77132034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5199485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8222291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.539443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80911756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55291593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7830222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55246913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79089934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54369515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79672164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55485916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75117844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54334724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7968477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5506073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77274656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5460365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7780976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5338892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8116959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53086567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7837555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5271066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 625.0
CUMULATIVE NUM SOLVED: 625.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0]
Tasks solved: 10 / 10
Average time for successes: 1.41148 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.41147911818407, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13955, 'query_cost': 0.0, 'learning_time': 3163.3726663490233})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9406 datapoints
Loss: 0.01288, iter: 0/100000
Loss: 0.04318, iter: 1000/100000
Loss: 0.00415, iter: 2000/100000
Loss: 0.01771, iter: 3000/100000
Loss: 0.00948, iter: 4000/100000
Loss: 0.00846, iter: 5000/100000
Loss: 0.00721, iter: 6000/100000
Loss: 0.01396, iter: 7000/100000
Loss: 0.02857, iter: 8000/100000
Loss: 0.00538, iter: 9000/100000
Loss: 0.02715, iter: 10000/100000
Loss: 0.01969, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11964.
Loaded best model with loss: 0.00161
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8326074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51015466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87518656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.510972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12580943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8710883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48915973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14331627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.87089616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51273376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.1199225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8676393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53102964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11593372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87166035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5473621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1067244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.87635225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5385647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.11934706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.88388765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51948917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14105843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87343127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54836494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10823497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86825216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5470807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12687293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.87499404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55139434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.13671751], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8770845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55865026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10639026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85841894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52447665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11257359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8702929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5224901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12377437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.86027616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52289724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.10070264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.87472963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52897984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12370791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84630877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52922845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82950515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4977863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8677227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5116757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1190319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.85233945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52897257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.48980582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.42251468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8615981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5428405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09383269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8867522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5351194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1374669], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8623174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5465604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.08535822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.86752796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5182926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11063474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.853045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53331506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09032881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5513803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7728727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.876808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.544742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.113311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8710115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5173591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.13196602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5490264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.772523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8451908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51808167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.88059515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5394307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11943536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8596732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54271585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.07324658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8696999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.487374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.13452536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8500042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5109352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.09290853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8632741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5486246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.08302405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.855739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52806437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.08917011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5455338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.778269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8656302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5481208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07835493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.86463493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5536312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.08463544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.86420935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5264338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.11453578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 625.0
CUMULATIVE NUM SOLVED: 625.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14049, 'query_cost': 0.0, 'learning_time': 3218.8871628270135})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9488 datapoints
Loss: 0.01335, iter: 0/100000
Loss: 0.01337, iter: 1000/100000
Loss: 0.01039, iter: 2000/100000
Loss: 0.00487, iter: 3000/100000
Loss: 0.01223, iter: 4000/100000
Loss: 0.00583, iter: 5000/100000
Loss: 0.00429, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6788.
Loaded best model with loss: 0.00105
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49294156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7737744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50265306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7309172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5366608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78784865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5357329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.779402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5249117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7755499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5316652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7642338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5358069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7829209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53884006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7851218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49685135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7729191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.536762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76894754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5369331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7938504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52536476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76876837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5423269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7818133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53050727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78063387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52270776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7968695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.540421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7944995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53582263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77751565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5320488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7949715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51861346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78647417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52737474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7659313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53587186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78297997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5333806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7902905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5363839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80100346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51942676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7899106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53739345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7637548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53803366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78279084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50307924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76043564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53698736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7653641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52872556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7863056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54584867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7797476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4806806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7850701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5262607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78651035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5422441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76313597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52366626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7800211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51764554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7933648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5391645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78642166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4994844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74346167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48760214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7719137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5037658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78791076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53567207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76099306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 635.0
CUMULATIVE NUM SOLVED: 635.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0]
Tasks solved: 10 / 10
Average time for successes: 1.53001 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5300123471941334, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14184, 'query_cost': 0.0, 'learning_time': 3266.0100245430076})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9530 datapoints
Loss: 0.03551, iter: 0/100000
Loss: 0.02004, iter: 1000/100000
Loss: 0.01339, iter: 2000/100000
Loss: 0.00829, iter: 3000/100000
Loss: 0.00966, iter: 4000/100000
Loss: 0.01928, iter: 5000/100000
Loss: 0.00756, iter: 6000/100000
Loss: 0.01267, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7507.
Loaded best model with loss: 0.00192
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78844583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52428013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52161914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7874393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7814638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5125075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5202497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7764231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7705624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51516336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7828237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49109152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52391136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77760416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78303516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5170758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.785996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49618232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78540695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48326114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7537468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4848143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76464397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5003663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7884443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4972313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.517782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76957005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78860855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4900519], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4920624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74790764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52120036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78044057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77638656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.523797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77139366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5203809], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5140152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77917564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5150114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7789476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.540325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77607816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77521735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48866776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78328717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.522176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5205436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76456666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7859531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52698666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.788843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51492053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7926154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51331645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7839904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51006037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5148473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7579756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77722144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49857983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7689132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78356355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5229574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7834169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5050645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79109526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4975388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7858053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5031484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5210479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7121078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51466835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78233117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7824539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5125026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5305833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7867449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 645.0
CUMULATIVE NUM SOLVED: 645.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0]
Tasks solved: 10 / 10
Average time for successes: 1.53313 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5331322579091649, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14265, 'query_cost': 0.0, 'learning_time': 3314.7738471790217})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9579 datapoints
Loss: 0.01976, iter: 0/100000
Loss: 0.01373, iter: 1000/100000
Loss: 0.00303, iter: 2000/100000
Loss: 0.01014, iter: 3000/100000
Loss: 0.01283, iter: 4000/100000
Loss: 0.01045, iter: 5000/100000
Loss: 0.01250, iter: 6000/100000
Loss: 0.01913, iter: 7000/100000
Loss: 0.00632, iter: 8000/100000
Loss: 0.01070, iter: 9000/100000
Loss: 0.01235, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10642.
Loaded best model with loss: 0.00188
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5215112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79170746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.551363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.773586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52862513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7903242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52090347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8030909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53929806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78494954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53550625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8084421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5401785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7873962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53735197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.780578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5476997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78358555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54883236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7560428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52991676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78760016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5390346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7892775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5317063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81148076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5031718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.812586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53531045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78045714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5280477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7811012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5293623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7941185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54413545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7992076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54475266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7817823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5462783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7792407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5135742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7649488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5504303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76029396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53355396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77772826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5421708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7800296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5351445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5378117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7862071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5486065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7604528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5438809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78361624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53281295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7915915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.538729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7899331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5430039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7948881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54380697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7370861], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5209776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8014903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51174015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80980825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5545556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78066504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53949314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7970114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51200944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8117971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53226167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79322666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5347207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76675475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55989975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7653396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 655.0
CUMULATIVE NUM SOLVED: 655.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0]
Tasks solved: 10 / 10
Average time for successes: 1.41326 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4132573644805233, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14352, 'query_cost': 0.0, 'learning_time': 3368.991525575024})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9624 datapoints
Loss: 0.01586, iter: 0/100000
Loss: 0.01566, iter: 1000/100000
Loss: 0.00701, iter: 2000/100000
Loss: 0.01674, iter: 3000/100000
Loss: 0.01334, iter: 4000/100000
Loss: 0.01876, iter: 5000/100000
Loss: 0.00533, iter: 6000/100000
Loss: 0.01946, iter: 7000/100000
Loss: 0.01207, iter: 8000/100000
Loss: 0.01290, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9431.
Loaded best model with loss: 0.00208
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5330119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80399513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5348727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7869398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54169405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7994082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52691185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81774205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49920768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81900984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53821236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8023713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53571373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80612856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52442074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.828185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50994927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8299776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5084169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80777127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5424409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.785365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52977353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81038356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5222729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82685584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5178921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7572768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50605184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8101924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5341852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8202055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5172998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7836042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5337411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7862552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53407544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81648815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5321208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80927616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53511137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81035614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53237057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81452423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53323334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8134355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49644485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83897895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50845885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8233199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5021037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.84963745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53371674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8019389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48579758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8283321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5151311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.83328456], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.524802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80308497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5368011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8207194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52906644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8192901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51919407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80287343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5337294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8598352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14298747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53241515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.82937163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5234413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8125635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5094894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8389402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.535366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7994405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54721344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79520994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5242318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82652026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 665.0
CUMULATIVE NUM SOLVED: 665.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0]
Tasks solved: 10 / 10
Average time for successes: 1.41499 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.414991757198004, 'avg_ref_cost': 1.455, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14434, 'query_cost': 0.0, 'learning_time': 3421.4823988980206})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9681 datapoints
Loss: 0.00767, iter: 0/100000
Loss: 0.02725, iter: 1000/100000
Loss: 0.02176, iter: 2000/100000
Loss: 0.02941, iter: 3000/100000
Loss: 0.01111, iter: 4000/100000
Loss: 0.00784, iter: 5000/100000
Loss: 0.02886, iter: 6000/100000
Loss: 0.01792, iter: 7000/100000
Loss: 0.00928, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8496.
Loaded best model with loss: 0.00131
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77559304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5272765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8040128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.529596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53978205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7870335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7842308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5251057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7832274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5293637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78729963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5252746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76662415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5247931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7920794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5270244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54891926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7706526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7820371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5210329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79384816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5282284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7948331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52892417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7798112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5369501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7865833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4999364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78569686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5343972], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54693675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78034365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.797306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5117314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7831603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5201237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76779765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5292777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7901796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.517795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76821786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4873894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7699107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.530355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.783441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5223884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.779158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5274451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78221524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51676404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7850263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5294193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78845495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52881837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7837633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53020716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.542282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7795206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78934324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52220875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7895412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5248306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7775062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5241763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7865473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5361411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7971524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52402985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7883629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5251183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7939235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5314511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7901919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4956394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54465216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7780682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78881437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78641814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5187915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 675.0
CUMULATIVE NUM SOLVED: 675.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0]
Tasks solved: 10 / 10
Average time for successes: 1.40550 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.405501674930565, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14533, 'query_cost': 0.0, 'learning_time': 3470.971050270018})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9717 datapoints
Loss: 0.01114, iter: 0/100000
Loss: 0.01558, iter: 1000/100000
Loss: 0.00825, iter: 2000/100000
Loss: 0.00987, iter: 3000/100000
Loss: 0.01713, iter: 4000/100000
Loss: 0.00385, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5071.
Loaded best model with loss: 0.00206
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5348508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8147844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5398813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7993623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7799306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.492986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79267156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5176992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54086584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.795939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5368773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8101039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7922191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50653046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48834294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8216848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5021603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5361969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79911447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7880637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53297263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53253096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7981758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53651756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8248191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7807017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52503693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.791068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4835338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7871217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51629794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5360185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80511945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51628226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82288444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53520536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82225794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77903587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5179375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5387063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78677213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7901411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5352883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79314864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5413124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78998893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5317341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79183525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49045017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7917817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5324511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78599155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5226143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5089008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78797126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77573955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5218993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51426333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80953044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54139847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7903887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7887024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.518987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53569174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79647255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.534576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80018175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5379317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7837547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53949887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8039115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7928201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51546186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7813425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5286715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5312923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8009865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53191805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81237864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 685.0
CUMULATIVE NUM SOLVED: 685.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0]
Tasks solved: 10 / 10
Average time for successes: 1.40204 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.402037638280308, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14606, 'query_cost': 0.0, 'learning_time': 3516.106534778024})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9783 datapoints
Loss: 0.02222, iter: 0/100000
Loss: 0.00749, iter: 1000/100000
Loss: 0.01893, iter: 2000/100000
Loss: 0.01603, iter: 3000/100000
Loss: 0.01318, iter: 4000/100000
Loss: 0.01111, iter: 5000/100000
Loss: 0.00536, iter: 6000/100000
Loss: 0.01115, iter: 7000/100000
Loss: 0.00709, iter: 8000/100000
Loss: 0.01738, iter: 9000/100000
Loss: 0.01457, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10018.
Loaded best model with loss: 0.00140
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5293503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7840971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5422975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7464643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54018515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77841866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5359431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76115406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8082008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47783503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80129087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50109375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5270223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7792807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53604317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76862717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52789277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7726059], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5231969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79061913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80208194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5145368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52507406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7856806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7936771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5278414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5404169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7946863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53819823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7675768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8051792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4591002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54003406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7901266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52667165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7916705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53130543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79878557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5268441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7811732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8115425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.490662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53989905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7600953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.804479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50534034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79561734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5027524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5388609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7740537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54081935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7622872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8020487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50728875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5266645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7829018], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5408319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75125843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7951056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5298236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5295213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77785045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80731004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48899278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80710524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48836973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52938396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78041244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53362864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7786465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80388457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5069419], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51782095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79146206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5328294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7807066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5393343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76223016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53528076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78656995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 695.0
CUMULATIVE NUM SOLVED: 695.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0]
Tasks solved: 10 / 10
Average time for successes: 1.53380 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5338006057485472, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14717, 'query_cost': 0.0, 'learning_time': 3568.4108785040444})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9834 datapoints
Loss: 0.01222, iter: 0/100000
Loss: 0.02282, iter: 1000/100000
Loss: 0.01804, iter: 2000/100000
Loss: 0.01390, iter: 3000/100000
Loss: 0.01295, iter: 4000/100000
Loss: 0.01303, iter: 5000/100000
Loss: 0.01229, iter: 6000/100000
Loss: 0.02270, iter: 7000/100000
Loss: 0.01114, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8016.
Loaded best model with loss: 0.00162
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7496772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5214221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7618336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.535474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7551826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52376324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7594316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53497046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7526288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5124043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75168896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53136444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74451774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72769254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52544767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75372374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55437887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74716914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5470228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.751878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49589294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75669897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53809637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7365028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5468516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7548892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50340134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7635703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5227714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7500275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5328439], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7590662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53408176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7375383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5303276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76445186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5356231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7356403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54781854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7603642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51472926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7376405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5201405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52914804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.823634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74229354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5203953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7387338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54844993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7293663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5348563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7534848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5319473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7433888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5451802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7443734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5462411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75316435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5197694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7243752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54807806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7505569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5165819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5348819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77945495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75363606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5359642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75786394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54103434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7554012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53761107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7492317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53778225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73965746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49601647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73675305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53697073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75139445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.548366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 705.0
CUMULATIVE NUM SOLVED: 705.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0]
Tasks solved: 10 / 10
Average time for successes: 1.53413 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.534132084887824, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14809, 'query_cost': 0.0, 'learning_time': 3618.8172734160617})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9880 datapoints
Loss: 0.01273, iter: 0/100000
Loss: 0.01664, iter: 1000/100000
Loss: 0.00734, iter: 2000/100000
Loss: 0.00805, iter: 3000/100000
Loss: 0.01310, iter: 4000/100000
Loss: 0.00588, iter: 5000/100000
Loss: 0.01410, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6085.
Loaded best model with loss: 0.00191
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8079089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56062794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80669427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.545652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80896497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56092703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8118591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5271553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5464183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76093525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5452194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80860263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5065008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8192302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55056924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79898685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54837954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79907197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80494374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53881526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54263633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8023111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.55181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79233223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5554352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76360214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5256428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7750086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5447269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7927866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55026525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77572495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5401057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78191626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5336034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75529486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5402562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79473346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80619246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50385946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5607903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7825295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5321652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8105686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5494285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78603107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.542211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78008735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5286606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8072802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5330317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7817047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8111637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5307432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5461867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.794983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54940265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7787309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8076977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5527806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78921497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.561739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5490099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7929432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5517528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78380543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5536629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77025545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5529518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79473925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5487301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7855945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5467029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7738058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55039966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72809696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8053772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55808336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80835074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5620978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 715.0
CUMULATIVE NUM SOLVED: 715.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0]
Tasks solved: 10 / 10
Average time for successes: 1.40448 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4044793530891184, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14892, 'query_cost': 0.0, 'learning_time': 3664.9736034210655})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9934 datapoints
Loss: 0.01742, iter: 0/100000
Loss: 0.00791, iter: 1000/100000
Loss: 0.00629, iter: 2000/100000
Loss: 0.01513, iter: 3000/100000
Loss: 0.00575, iter: 4000/100000
Loss: 0.01434, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5312.
Loaded best model with loss: 0.00125
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51564085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82664615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80359066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52494407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5164149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79177725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.522798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8153355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52130353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8378151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5184426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8177075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5111592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8378628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80261385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51209366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5104126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8222284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5098174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7843682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78965896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52144533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5175456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8078364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.523189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82029706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5321356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81718063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5121627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8350148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79518276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5287431], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5203895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7777682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79621744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5303426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50935537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7818481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80085623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51516354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5182742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82638484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7990704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4838726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5178609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8106558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5201036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8264739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80530566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5283163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51915914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8131528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5140314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83374864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5030058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8142062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8023249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5311945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53418565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79808813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5159069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83151394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51903605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8256016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5076836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8332405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.514416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.823674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5154418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8327615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5217671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8269368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5164793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7541237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5179101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8340381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8077632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5097657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51327974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8328202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 725.0
CUMULATIVE NUM SOLVED: 725.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0]
Tasks solved: 10 / 10
Average time for successes: 1.40654 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.406540797103662, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14990, 'query_cost': 0.0, 'learning_time': 3710.0870979510655})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9978 datapoints
Loss: 0.01430, iter: 0/100000
Loss: 0.00450, iter: 1000/100000
Loss: 0.00778, iter: 2000/100000
Loss: 0.01999, iter: 3000/100000
Loss: 0.00665, iter: 4000/100000
Loss: 0.01741, iter: 5000/100000
Loss: 0.00924, iter: 6000/100000
Loss: 0.01781, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7480.
Loaded best model with loss: 0.00171
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.851311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52645105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09364499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8509945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49441218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1042445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82751644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4975486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8668545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.538266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.11566672], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.85759896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5311973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10564464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8340191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4839689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8318183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5049926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80971783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52149516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8492934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5459767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82958454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52494055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.84671354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5150054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.85369045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52769464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.11032496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82970166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4872007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.86282647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5400959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11255646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8707991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5370388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1134071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84282136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5025343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86041135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5060459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10090578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85515004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5261876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09149481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.85074866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5325578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.08663397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8522187], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82757276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48611292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8432684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51045865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.85327405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52681315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10087829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8085254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52292424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.85081524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5312929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09596829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.86454135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54353213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11331266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83350986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48737907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82633746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49484673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8183396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5224248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8430491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5162523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8715304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54927164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11499549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8615691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51187015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.13290659], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.84852207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52198046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.84553665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5056977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8517325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52420473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.09439198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81538725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5271859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8473497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5048197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.84815943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53084534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.84720325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5108973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8565731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48470503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.13503613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 725.0
CUMULATIVE NUM SOLVED: 725.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15068, 'query_cost': 0.0, 'learning_time': 3758.879055374069})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10023 datapoints
Loss: 0.01669, iter: 0/100000
Loss: 0.00620, iter: 1000/100000
Loss: 0.01707, iter: 2000/100000
Loss: 0.01709, iter: 3000/100000
Loss: 0.00884, iter: 4000/100000
Loss: 0.02462, iter: 5000/100000
Loss: 0.01154, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6744.
Loaded best model with loss: 0.00194
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5534088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8047062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5314435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81340647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55755585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80620956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5422044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77972466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56314385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7864406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7974538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51576084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5506122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7888572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5463811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7721384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53948665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77894235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55493915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77639765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.553988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7803231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52784383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7901545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5195351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79957354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5490952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78286207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52914095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.810131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51728946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8064438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55156845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7637013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54537165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7968084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5654389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7696331], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5278884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8104254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5589461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8086028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5541206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8054426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49816093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79062504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80884165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53989583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54467034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.789086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54196644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7732191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55465156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78236115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51009333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81146777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5109575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7644037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54091847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7790477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.55673856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81711346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5473313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.811528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5510586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81617177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5446555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7812251], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5402832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76987946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52928895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7902935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53651935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7705006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51864713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81641597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5437215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7752485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5552109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73286074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 735.0
CUMULATIVE NUM SOLVED: 735.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0]
Tasks solved: 10 / 10
Average time for successes: 1.40377 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4037746669811895, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15153, 'query_cost': 0.0, 'learning_time': 3808.039561873069})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10064 datapoints
Loss: 0.01740, iter: 0/100000
Loss: 0.00619, iter: 1000/100000
Loss: 0.00537, iter: 2000/100000
Loss: 0.00499, iter: 3000/100000
Loss: 0.01294, iter: 4000/100000
Loss: 0.01471, iter: 5000/100000
Loss: 0.00961, iter: 6000/100000
Loss: 0.01863, iter: 7000/100000
Loss: 0.01562, iter: 8000/100000
Loss: 0.01238, iter: 9000/100000
Loss: 0.01680, iter: 10000/100000
Loss: 0.01614, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11952.
Loaded best model with loss: 0.00105
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75700295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57534295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56881773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7648373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56577474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7904577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76072794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.566014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75570333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.56281286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5688021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7825006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5698818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78542227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7613107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5724765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5687083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7744608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76510423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57027847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5633743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7739758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75971836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.57231086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56244594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7924567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76080924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5635508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75959116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5590739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.56999546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79143035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75143236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5675262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75967985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5575851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.56950104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74468315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7586511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5651389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55891246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7784057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56530064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7811403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55640674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8002641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.58087695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77654356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5722688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7455479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57207304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77115536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7545147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56856716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76060706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53734875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7519724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51711833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74039865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52137184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5566779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78717154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7573018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54544914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7492222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5665246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5780277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75761324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76098406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5744785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5694885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7854857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76030713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5729788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7461637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.57294333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76703846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.566233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76161253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5462905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 745.0
CUMULATIVE NUM SOLVED: 745.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0]
Tasks solved: 10 / 10
Average time for successes: 1.54017 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.5401745476847282, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15229, 'query_cost': 0.0, 'learning_time': 3864.473066643055})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10099 datapoints
Loss: 0.02187, iter: 0/100000
Loss: 0.01081, iter: 1000/100000
Loss: 0.00751, iter: 2000/100000
Loss: 0.01174, iter: 3000/100000
Loss: 0.01971, iter: 4000/100000
Loss: 0.01228, iter: 5000/100000
Loss: 0.00700, iter: 6000/100000
Loss: 0.00984, iter: 7000/100000
Loss: 0.01822, iter: 8000/100000
Loss: 0.00905, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9896.
Loaded best model with loss: 0.00214
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81758076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50033635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7772163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5559681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8150532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52003163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8103474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53388983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8083954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5353373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81016785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5159993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8137535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5332668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8068727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.526718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5453945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8000466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77429175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5357332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8132074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5242016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8010139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52110326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78821564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5356624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8071938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5237661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79871416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5421773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80766445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5222969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8160626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48247877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80985206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53068495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7947247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53450555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8070793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5304032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8159012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51503086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7861972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51857185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81868196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50558233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80886555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5219012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.815537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5004257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7819664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52339697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8173412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49943182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8126492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5276109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7933077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5154822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82047325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49050355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8177812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49420747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80430204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53739893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8171957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4911315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8203721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49095815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78816193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5348474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8070462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5256487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7630037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5343693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8017406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5531466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8129015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5247674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8005624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5316123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 755.0
CUMULATIVE NUM SOLVED: 755.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0]
Tasks solved: 10 / 10
Average time for successes: 1.40425 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.40425316207984, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15298, 'query_cost': 0.0, 'learning_time': 3917.7846221720392})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10145 datapoints
Loss: 0.02265, iter: 0/100000
Loss: 0.00431, iter: 1000/100000
Loss: 0.01051, iter: 2000/100000
Loss: 0.02809, iter: 3000/100000
Loss: 0.01295, iter: 4000/100000
Loss: 0.00930, iter: 5000/100000
Loss: 0.00321, iter: 6000/100000
Loss: 0.00321, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7862.
Loaded best model with loss: 0.00186
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77936065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5473326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52283627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79366744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53035146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81090647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5432822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7867559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5490665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78503823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53900373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79173195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7746164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53602785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5537376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7855883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55128616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7703325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5497653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79509544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5252703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.804721], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7690948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5421582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75333667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5448319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5271874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8097318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54501325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7927452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5498736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.788233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54764026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78208685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76850104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.523788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.780268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54270834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5307945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81025827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53528637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7813386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78044385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5363508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7708379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5416829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7639813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5265839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5357671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79966503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52333367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80362254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.54420906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7872882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53403306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78927344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5453263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8015405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54928637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7920931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7843013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5330313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5420721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7896771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.783313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5367941], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7811509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5246701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77647275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5424482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5478152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7312854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5371694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82000846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54438424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79108006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53635186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7986259], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53998077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80277973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 765.0
CUMULATIVE NUM SOLVED: 765.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0]
Tasks solved: 10 / 10
Average time for successes: 1.40557 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4055731373315212, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15386, 'query_cost': 0.0, 'learning_time': 3969.4673753280367})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10190 datapoints
Loss: 0.01175, iter: 0/100000
Loss: 0.01645, iter: 1000/100000
Loss: 0.00365, iter: 2000/100000
Loss: 0.00859, iter: 3000/100000
Loss: 0.01122, iter: 4000/100000
Loss: 0.00933, iter: 5000/100000
Loss: 0.00704, iter: 6000/100000
Loss: 0.00764, iter: 7000/100000
Loss: 0.02106, iter: 8000/100000
Loss: 0.01076, iter: 9000/100000
Loss: 0.00554, iter: 10000/100000
Loss: 0.01655, iter: 11000/100000
Loss: 0.02572, iter: 12000/100000
Loss: 0.00681, iter: 13000/100000
Loss: 0.01515, iter: 14000/100000
Loss: 0.01010, iter: 15000/100000
Loss: 0.03054, iter: 16000/100000
Loss: 0.01421, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17000.
Loaded best model with loss: 0.00123
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8057665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55469346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52552617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.809995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8036125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5508513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8008219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53369987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8049197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55024683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78473383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5539999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52977556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80399776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8015079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5347502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7987239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5558377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5387747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8104569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53320247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8106059], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7968823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51408595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7899342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54088515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7987151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5381391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7977872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5715093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80644387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79577905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5424394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5346678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8200769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53729385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7780443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8025096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5116009], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53554875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81178653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5224404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83991206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8004717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5297139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80823916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5551111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.808253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55379945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7997382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5559826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7977911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.55013436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5288986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8177036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7967161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54862314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.798834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.55830383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8056633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49559498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80447054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.534071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80373925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55263716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8000695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5492239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.52970666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8069863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8068498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53296614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80540854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55355406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5339575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81687576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7990249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55625165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50558853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82776165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 775.0
CUMULATIVE NUM SOLVED: 775.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0, 775.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0, 775.0]
Tasks solved: 10 / 10
Average time for successes: 1.40396 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4039588684943738, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15475, 'query_cost': 0.0, 'learning_time': 4036.2691017840407})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10227 datapoints
Loss: 0.00870, iter: 0/100000
Loss: 0.01058, iter: 1000/100000
Loss: 0.00676, iter: 2000/100000
Loss: 0.01031, iter: 3000/100000
Loss: 0.00851, iter: 4000/100000
Loss: 0.01744, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5645.
Loaded best model with loss: 0.00172
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75313425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5501504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7929683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5322017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78503317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5430494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7940262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5473508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7459571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54952294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79221356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54216516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7937322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5234046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.800847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53045326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7989823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54342276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77437836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5431957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7656992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5372625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.767717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5168415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7958852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52646405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7823961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5364656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79499525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.542484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7895331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53057814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79587567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5440884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79373175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5561997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76320344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53146666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79013705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76388085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51368064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8002792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54673666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.788777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53616714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7854987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4989119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7957396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.54203314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7846344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5031664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72602636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5255631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79488564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5481828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7641462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53645205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7849194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5424392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7871709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5131052], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7933785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5342445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78302985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54716194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78754884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50328696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7794217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5393627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78924036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5523066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77637744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5453248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81039405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53744763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.800167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.54270613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78730273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5524891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell10:cell, cell11:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell11:cell, cell12:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell12:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 785.0
CUMULATIVE NUM SOLVED: 785.0
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.88][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0, 775.0, 785.0]
[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.88][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.0, 0.5, 1.0, 0.7, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 0.9, 0.6, 1.0, 1.0, 1.0, 1.0, 0.4, 0.2, 1.0, 1.0, 0.0, 0.5, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.9, 0.1, 1.0, 0.9, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.7, 1.0, 1.0, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.1, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 14.0, 24.0, 29.0, 39.0, 46.0, 56.0, 66.0, 76.0, 79.0, 89.0, 99.0, 108.0, 114.0, 124.0, 134.0, 144.0, 154.0, 158.0, 160.0, 170.0, 180.0, 180.0, 185.0, 195.0, 203.0, 213.0, 223.0, 232.0, 242.0, 252.0, 262.0, 272.0, 272.0, 282.0, 292.0, 301.0, 302.0, 312.0, 321.0, 331.0, 331.0, 341.0, 351.0, 361.0, 371.0, 381.0, 391.0, 401.0, 411.0, 421.0, 431.0, 441.0, 441.0, 451.0, 458.0, 468.0, 478.0, 488.0, 496.0, 506.0, 516.0, 526.0, 536.0, 546.0, 555.0, 565.0, 566.0, 576.0, 586.0, 595.0, 605.0, 615.0, 625.0, 625.0, 635.0, 645.0, 655.0, 665.0, 675.0, 685.0, 695.0, 705.0, 715.0, 725.0, 725.0, 735.0, 745.0, 755.0, 765.0, 775.0, 785.0]
Tasks solved: 10 / 10
Average time for successes: 1.40662 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.4066166927979793, 'avg_ref_cost': 1.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15550, 'query_cost': 0.0, 'learning_time': 4082.904232604051})
Wrote out test results to results/grid_row_door__rl_bridge_policy__3______RLBRIDGE_gridrowdoor-oracle__99.pkl
SMOOTH REWARDS[0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.88]


Main script terminated in 14774.91736 seconds
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
WE GOT REWARDS:  1
WE GOT REWARDS:  1
WE GOT REWARDS:  2
WE GOT REWARDS:  2
WE GOT REWARDS:  2
WE GOT REWARDS:  5
WE GOT REWARDS:  5
WE GOT REWARDS:  8
WE GOT REWARDS:  12
WE GOT REWARDS:  16
WE GOT REWARDS:  21
WE GOT REWARDS:  26
WE GOT REWARDS:  31
WE GOT REWARDS:  35
WE GOT REWARDS:  40
WE GOT REWARDS:  45
WE GOT REWARDS:  50
WE GOT REWARDS:  54
WE GOT REWARDS:  59
WE GOT REWARDS:  64
WE GOT REWARDS:  69
WE GOT REWARDS:  74
WE GOT REWARDS:  79
WE GOT REWARDS:  84
WE GOT REWARDS:  89
WE GOT REWARDS:  94
WE GOT REWARDS:  99
WE GOT REWARDS:  104
WE GOT REWARDS:  108
WE GOT REWARDS:  113
WE GOT REWARDS:  118
WE GOT REWARDS:  123
WE GOT REWARDS:  128
WE GOT REWARDS:  133
WE GOT REWARDS:  138
WE GOT REWARDS:  143
WE GOT REWARDS:  148
WE GOT REWARDS:  153
WE GOT REWARDS:  158
WE GOT REWARDS:  163
WE GOT REWARDS:  168
WE GOT REWARDS:  173
WE GOT REWARDS:  178
WE GOT REWARDS:  183
WE GOT REWARDS:  188
WE GOT REWARDS:  193
WE GOT REWARDS:  198
WE GOT REWARDS:  203
WE GOT REWARDS:  208
WE GOT REWARDS:  213
WE GOT REWARDS:  218
WE GOT REWARDS:  223
WE GOT REWARDS:  228
WE GOT REWARDS:  233
WE GOT REWARDS:  238
WE GOT REWARDS:  243
WE GOT REWARDS:  248
WE GOT REWARDS:  253
WE GOT REWARDS:  258
WE GOT REWARDS:  263
WE GOT REWARDS:  268
WE GOT REWARDS:  273
WE GOT REWARDS:  278
WE GOT REWARDS:  283
WE GOT REWARDS:  288
WE GOT REWARDS:  293
WE GOT REWARDS:  298
WE GOT REWARDS:  303
WE GOT REWARDS:  308
WE GOT REWARDS:  313
WE GOT REWARDS:  318
WE GOT REWARDS:  323
WE GOT REWARDS:  328
WE GOT REWARDS:  333
WE GOT REWARDS:  338
WE GOT REWARDS:  343
WE GOT REWARDS:  348
WE GOT REWARDS:  353
WE GOT REWARDS:  358
WE GOT REWARDS:  363
WE GOT REWARDS:  368
WE GOT REWARDS:  373
WE GOT REWARDS:  378
WE GOT REWARDS:  383
WE GOT REWARDS:  388
WE GOT REWARDS:  393
WE GOT REWARDS:  398
WE GOT REWARDS:  403
WE GOT REWARDS:  408
WE GOT REWARDS:  413
WE GOT REWARDS:  418
WE GOT REWARDS:  423
WE GOT REWARDS:  428
WE GOT REWARDS:  433
WE GOT REWARDS:  438
WE GOT REWARDS:  443
WE GOT REWARDS:  448
WE GOT REWARDS:  453
WE GOT REWARDS:  458
WE GOT REWARDS:  463
SMOOTH REWARDS [0.0, 0.0, 0.0, 0.0, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.055999999999999994, 0.096, 0.11599999999999999, 0.156, 0.184, 0.22399999999999998, 0.264, 0.304, 0.316, 0.3559999999999999, 0.39599999999999996, 0.43199999999999994, 0.45599999999999996, 0.49599999999999994, 0.5359999999999999, 0.576, 0.616, 0.632, 0.6399999999999999, 0.648, 0.688, 0.688, 0.708, 0.748, 0.78, 0.796, 0.796, 0.812, 0.8119999999999998, 0.8240000000000001, 0.8240000000000001, 0.8240000000000001, 0.784, 0.812, 0.8120000000000002, 0.8080000000000002, 0.7759999999999999, 0.7920000000000001, 0.7879999999999998, 0.7879999999999999, 0.7479999999999998, 0.748, 0.772, 0.8039999999999999, 0.804, 0.804, 0.8440000000000001, 0.8640000000000001, 0.8640000000000001, 0.872, 0.872, 0.872, 0.836, 0.836, 0.824, 0.824, 0.824, 0.8639999999999999, 0.856, 0.8560000000000001, 0.86, 0.8960000000000001, 0.8960000000000001, 0.9, 0.8959999999999999, 0.9359999999999999, 0.9, 0.9, 0.9, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.8959999999999999, 0.856, 0.856, 0.856, 0.856, 0.8959999999999999, 0.8959999999999999, 0.9080000000000001, 0.9079999999999999, 0.9079999999999999, 0.9080000000000001, 0.9159999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.8759999999999999, 0.88]
